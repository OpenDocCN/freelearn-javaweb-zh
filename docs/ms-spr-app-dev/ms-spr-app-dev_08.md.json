["```java\n<bean name=\"authorService\" \n class=\"com.packt.osgi.authorservice.impl.AuthorServiceImpl\"/> \n<osgi:service id=\"auhtorServiceOsgi\" \n ref=\"authorService\" \n interface=\"com.packt.osgi.authorservice.AuthorService\"/>\n```", "```java\n    package com.packt.osgi.provider.able;\n\n    public interface MySimpleOSGIService {\n      void mysimplemethod();\n    }\n    package com.packt.osgi.provider.impl;\n\n    import com.bw.osgi.provider.able.MySimpleOSGIService;\n\n    public class MySimpleOSGIServiceImpl implements MySimpleOSGIService {\n      @Override\n      void mysimplemethod(){\n        System.out.println(\"this my simple method which is the implementation class\");\n      }\n    }\n    ```", "```java\n    package com.packt.osgi.provider;\n    import org.osgi.framework.BundleActivator;\n    import org.osgi.framework.BundleContext;\n    import org.osgi.framework.ServiceRegistration;\n    import com.bw.osgi.provider.able.MySimpleOSGIService;\n    import com.bw.osgi.provider.impl.MySimpleOSGIServiceImpl;\n\n    public class MyProviderActivator implements BundleActivator {\n      private ServiceRegistration registration;\n\n      @Override\n      public void start(BundleContext bundleContext) throws Exception {\n        registration = bundleContext.registerService(\n          MySimpleOSGIService.class.getName(),\n          new MySimpleOSGIServiceImpl(),\n          null);\n      }\n\n      @Override\n      public void stop(BundleContext bundleContext) throws Exception {\n        registration.unregister();\n      }\n    }\n    ```", "```java\n    ?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n    <project   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n      <modelVersion>4.0.0</modelVersion>\n\n      <groupId>OSGiDmMySimpleProvider</groupId>\n      <artifactId>OSGiDmMySimpleProvider</artifactId>\n      <version>1.0</version>\n\n      <dependencies>\n        <dependency>\n        <groupId>org.apache.felix</groupId>\n        <artifactId>org.osgi.core</artifactId>\n        <version>1.4.0</version>\n        </dependency>\n      </dependencies>\n\n      <build>\n        <plugins>\n          <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>2.0.2</version>\n          <configuration>\n            <source>1.6</source>\n            <target>1.6</target>\n          </configuration>\n          </plugin>\n\n          <plugin>\n            <groupId>org.apache.felix</groupId>\n            <artifactId>maven-bundle-plugin</artifactId>\n            <extensions>true</extensions>\n            <configuration>\n              <instructions>\n              <Bundle-SymbolicName>OSGiDmMySimpleProvider</Bundle-SymbolicName>\n              <Export-Package>com.packt.osgi.provider.able</Export-Package>\n              <Bundle-Activator>com.packt.osgi.provider.MyProviderActivator</Bundle-Activator>\n              <Bundle-Vendor>PACKT</Bundle-Vendor>\n              </instructions>\n              </configuration>\n            </plugin>\n          </plugins>\n      </build> \n    </project>\n    ```", "```java\n    package com.packt.osgi.consumer;\n    import javax.swing.Timer;\n    import java.awt.event.ActionEvent;\n    import java.awt.event.ActionListener;\n    import com.packt.osgi.provider.able.MySimpleOSGIService;\n    public class MySimpleOSGIConsumer implements ActionListener {\n      private final MySimpleOSGIService service;\n      private final Timer timer;\n      public MySimpleOSGIConsumer(MySimpleOSGIService service) {\n        super();\n        this.service = service;\n        timer = new Timer(1000, this);\n      }\n\n      public void startTimer(){\n        timer.start();\n      }\n\n      public void stopTimer() {\n        timer.stop();\n      }\n\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        service.mysimplemethod();\n      }\n    }\n    ```", "```java\n    package com.packt.osgi.consumer;\n\n    import org.osgi.framework.BundleActivator;\n    import org.osgi.framework.BundleContext;\n    import org.osgi.framework.ServiceReference;\n    import com.packt.osgi.provider.able.MySimpleOSGIService;\n\n    public class MySimpleOSGIActivator implements BundleActivator {\n      private MySimpleOSGIConsumer consumer;\n\n      @Override\n      public void start(BundleContext bundleContext) throws Exception {\n        ServiceReference reference = bundleContext.getServiceReference(MySimpleOSGIService.class.getName());\n\n        consumer = new MySimpleOSGIConsumer((MySimpleOSGIService) bundleContext.getService(reference));\n        consumer.startTimer();\n      }\n\n      @Override\n      public void stop(BundleContext bundleContext) throws Exception {\n        consumer.stopTimer();\n      }\n    }\n    ```", "```java\npackage com.packt.osgi.provider.able;\npublic interface HelloWorldService {\n  void hello();\n}\n```", "```java\npackage com.packt.osgi.provider.impl;\nimport com.packt.osgi.provider.able.HelloWorldService;\npublic class HelloWorldServiceImpl implements HelloWorldService {\n  @Override\n  public void hello(){\n    System.out.println(\"Hello World !\");\n  }\n}\n```", "```java\npackage com.packt.osgi.provider;\nimport org.osgi.framework.BundleActivator;\nimport org.osgi.framework.BundleContext;\nimport org.osgi.framework.ServiceRegistration;\nimport com. packt.osgi.provider.able.HelloWorldService;\nimport com. packt.osgi.provider.impl.HelloWorldServiceImpl;\n\npublic class ProviderActivator implements BundleActivator {\n  private ServiceRegistration registration;\n\n  @Override\n  public void start(BundleContext bundleContext) throws Exception {\n    registration = bundleContext.registerService(\n                   HelloWorldService.class.getName(),\n                   new HelloWorldServiceImpl(),null);\n  }\n\n  @Override\n  public void stop(BundleContext bundleContext) throws Exception {\n    registration.unregister();\n  }\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans \n\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd\">\n  <bean id=\"helloWorldService\" class=\"com.packt.osgi.provider.impl.HelloWorldServiceImpl\"/>\n  <osgi:service ref=\"helloWorldService\" interface=\"com.packt.osgi.provider.able.HelloWorldService\"/>\n</beans>\n```", "```java\n    package com.packt.osgi.consumer;\n    import javax.swing.Timer;\n    import java.awt.event.ActionEvent;\n    import java.awt.event.ActionListener;\n    import com.bw.osgi.provider.able.HelloWorldService;\n    public class HelloWorldConsumer implements ActionListener {\n      private final HelloWorldService service;\n      private final Timer timer;\n      public HelloWorldConsumer(HelloWorldService service) {\n        super();\n        this.service = service;\n        timer = new Timer(1000, this);\n      }\n      public void startTimer(){\n        timer.start();\n      }\n      public void stopTimer() {\n        timer.stop();\n      }\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        service.hello();\n      }\n    }\n    ```", "```java\n    package com.packt.osgi.consumer;\n    import org.osgi.framework.BundleActivator;\n    import org.osgi.framework.BundleContext;\n    import org.osgi.framework.ServiceReference;\n    import com. packt.osgi.provider.able.HelloWorldService;\n    public class HelloWorldActivator implements BundleActivator {\n      private HelloWorldConsumer consumer;\n      @Override\n      public void start(BundleContext bundleContext) throws Exception {\n        ServiceReference reference = bundleContext.getServiceReference(HelloWorldService.class.getName());\n        consumer = new HelloWorldConsumer((HelloWorldService) bundleContext.getService(reference));\n        consumer.startTimer();\n      }\n      @Override\n      public void stop(BundleContext bundleContext) throws Exception {\n        consumer.stopTimer();\n      }\n    }\n    ```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <beans \n\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/osgi \n      http://www.springframework.org/schema/osgi/spring-osgi.xsd\">\n\n      <bean id=\"consumer\" class=\"com.packt.osgi.consumer.HelloWorldConsumer\" init-method=\"startTimer\" destroy-method=\"stopTimer\" lazy-init=\"false\" >\n        <constructor-arg ref=\"eventService\"/>\n      </bean>\n\n      <osgi:reference id=\"eventService\" interface=\"com.packt.osgi.provider.able.HelloWorldService\"/>\n    </beans>\n    ```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project \n\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>OSGiDmHelloWorldProvider</groupId>\n  <artifactId>OSGiDmHelloWorldProvider</artifactId>\n  <version>1.0</version>\n  <packaging>bundle</packaging>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>2.0.2</version>\n        <configuration>\n          <source>1.6</source>\n          <target>1.6</target>\n         </configuration>\n      </plugin>\n\n      <plugin>\n        <groupId>org.apache.felix</groupId>\n        <artifactId>maven-bundle-plugin</artifactId>\n        <extensions>true</extensions>\n        <configuration>\n          <instructions>\n            <Bundle-SymbolicName>OSGiDmHelloWorldProvider</Bundle-SymbolicName>\n            <Export-Package>com.bw.osgi.provider.able</Export-Package>\n            <Bundle-Vendor>Baptiste Wicht</Bundle-Vendor>\n          </instructions>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build> \n</project>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project \n\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>OSGiDmHelloWorldConsumer</groupId>\n  <artifactId>OSGiDmHelloWorldConsumer</artifactId>\n  <version>1.0</version>\n  <packaging>bundle</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>OSGiDmHelloWorldProvider</groupId>\n      <artifactId>OSGiDmHelloWorldProvider</artifactId>\n      <version>1.0</version>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>2.0.2</version>\n        <configuration>\n          <source>1.6</source>\n          <target>1.6</target>\n        </configuration>\n      </plugin>\n\n      <plugin>\n        <groupId>org.apache.felix</groupId>\n        <artifactId>maven-bundle-plugin</artifactId>\n        <extensions>true</extensions>\n        <configuration>\n          <instructions>\n            <Bundle-SymbolicName>OSGiDmHelloWorldConsumer</Bundle-SymbolicName>\n            <Bundle-Vendor>Baptiste Wicht</Bundle-Vendor>\n          </instructions>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```", "```java\nWelcome to Apache Felix Gogo\ng! install file:../com.springsource.slf4j.org.apache.commons.logging-1.5.0.jar\nBundle ID: 5\ng! install file:../com.springsource.slf4j.log4j-1.5.0.jar\nBundle ID: 6\ng! install file:../com.springsource.slf4j.api-1.5.0.jar\nBundle ID: 7\ng! install file:../log4j.osgi-1.2.15-SNAPSHOT.jar\nBundle ID: 8\ng! install file:../com.springsource.net.sf.cglib-2.1.3.jar\nBundle ID: 9\ng! install file:../com.springsource.org.aopalliance-1.0.0.jar\nBundle ID: 10\ng! install file:../org.springframework.core-2.5.6.SEC01.jar\nBundle ID: 11\ng! install file:../org.springframework.context-2.5.6.SEC01.jar\nBundle ID: 12\ng! install file:../org.springframework.beans-2.5.6.SEC01.jar\nBundle ID: 13\ng! install file:../org.springframework.aop-2.5.6.SEC01.jar\nBundle ID: 14\ng! install file:../spring-osgi-extender-1.2.1.jar\nBundle ID: 15\ng! install file:../spring-osgi-core-1.2.1.jar\nBundle ID: 16\ng! install file:../spring-osgi-io-1.2.1.jar\nBundle ID: 17\ng! start 5 7 8 9 10 11 12 13 14 15 16 17\nlog4j:WARN No appenders could be found for logger (org.springframework.osgi.extender.internal.activator.ContextLoaderListener).\nlog4j:WARN Please initialize the log4j system properly.\ng! install file:../OSGiDmHelloWorldProvider-1.0.jar\nBundle ID: 18\ng! install file:../OSGiDmHelloWorldConsumer-1.0.jar\nBundle ID: 19\ng! start 18\ng! start 19\ng! Hello World !\nHello World !\nHello World !\nHello World !\nHello World !\nHello World !\nHello World !\nHello World !\nstop 19\ng!\n```"]