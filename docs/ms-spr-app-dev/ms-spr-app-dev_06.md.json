["```java\n<bean id=\"requestFactory\"\n      class=\"org.springframework.http.client.SimpleClientHttpRequestFactory\">\n    <property name=\"connectTimeout\" value=\"5000\"/>\n    <property name=\"readTimeout\"    value=\"5000\"/>\n</bean>\n```", "```java\n<bean id=\"requestFactory\" class=\"org.springframework.http.client.SimpleClientHttpRequestFactory\">\n  <property name=\"proxy\">\n  <bean id=\"proxy\" class=\"java.net.Proxy\">\n    <constructor-arg>\n    <util:constant static-field=\"java.net.Proxy.Type.HTTP\"/>\n    </constructor-arg>\n    <constructor-arg>\n    <bean class=\"java.net.InetSocketAddress\">\n      <constructor-arg value=\"123.0.0.1\"/>\n      <constructor-arg value=\"8080\"/>\n    </bean>\n    </constructor-arg>\n  </bean>\n  </property>\n</bean>\n```", "```java\n<servlet>\n  <servlet-name>inboundGateway</servlet-name>\n  <servlet-class>o.s.web.context.support.HttpRequestHandlerServlet</servlet-class>\n</servlet>\n```", "```java\n<bean id=\"httpInbound\" class=\"org.springframework.integration.http.inbound.HttpRequestHandlingMessagingGateway\">\n  <property name=\"requestChannel\" ref=\"httpRequestChannel\" />\n  <property name=\"replyChannel\" ref=\"httpReplyChannel\" />\n</bean>\n```", "```java\n    <bean id=\"httpInbound\" class=\"org.springframework.integration.http.inbound.HttpRequestHandlingController\">\n      <constructor-arg value=\"true\" /> <!-- indicates that a reply is expected -->\n      <property name=\"requestChannel\" ref=\"httpRequestChannel\" />\n      <property name=\"replyChannel\" ref=\"httpReplyChannel\" />\n      <property name=\"viewName\" value=\"jsonView\" />\n      <property name=\"supportedMethodNames\" >\n        <list>\n          <value>GET</value>\n          <value>DELETE</value>\n        </list>\n      </property>\n    </bean>\n    ```", "```java\n<bean id=\"httpOutbound\" class=\"org.springframework.integration.http.outbound.HttpRequestExecutingMessageHandler\">\n  <constructor-arg value=\"http://localhost:8080/myweb\" />\n  <property name=\"outputChannel\" ref=\"responseChannel\" />\n</bean>\n```", "```java\n<bean id=\"httpOutbound\" class=\"org.springframework.integration.http.outbound.HttpRequestExecutingMessageHandler\">\n  <constructor-arg value=\"http://localhost:8080/myweb\" />\n  <property name=\"outputChannel\" ref=\"responseChannel\" />\n  <property name=\"messageConverters\" ref=\"messageConverterList\" />\n  <property name=\"requestFactory\" ref=\"customRequestFactory\" />\n</bean>\n```", "```java\n<int-http:inbound-channel-adapter id=\"httpChannelAdapter\" channel=\"requests\"\n    supported-methods=\"PUT, DELETE\"/>\n```", "```java\n<int-http:inbound-gateway id=\"inboundGateway\"\n    request-channel=\"requests\"\n    reply-channel=\"responses\"/>\n```", "```java\n<inbound-gateway id=\"inboundController\"\n    request-channel=\"requests\"\n    reply-channel=\"responses\"\n    path=\"/foo/{fooId}\"\n    supported-methods=\"GET\"\n    view-name=\"foo\"\n    error-code=\"oops\">\n   <request-mapping headers=\"User-Agent\"\n<!\u2014-headers=\"\"-->\n     params=\"myParam=myValue\"\n     consumes=\"application/json\"\n     produces=\"!text/plain\"/>\n</inbound-gateway>\n```", "```java\n<int-http:inbound-gateway request-channel=\"httpMethodRouter\"\n    supported-methods=\"GET,DELETE\"\n    path=\"/process/{entId}\"\n    payload-expression=\"#pathVariables.entId\"/>\n<int:router input-channel=\"httpMe\nthodRouter\" expression=\"headers.http_requestMethod\">\n    <int:mapping value=\"GET\" channel=\"in1\"/>\n    <int:mapping value=\"DELETE\" channel=\"in2\"/>\n</int:router>\n<int:service-activator input-channel=\"in1\" ref=\"service\" method=\"getEntity\"/>\n<int:service-activator input-channel=\"in2\" ref=\"service\" method=\"delete\"/>\n```", "```java\n<int-http:inbound-channel-adapter id=\"inboundAdapterWithExpressions\"\n    path=\"/var-1/{phone}/var-2/{username}\"\n    channel=\"requests\"\n    payload-expression=\"#pathVariables.firstName\">\n    <int-http:header name=\"var-2\" expression=\"#pathVariables.username\"/>\n</int-http:inbound-channel-adapter>\n```", "```java\n<int-http:outbound-gateway id=\"example\"\n    request-channel=\"requests\"\n    URL=\"http://localhost/test\"\n    http-method=\"POST\"\n    extract-request-payload=\"false\"\n    expected-response-type=\"java.lang.String\"\n    charset=\"UTF-8\"\n    request-factory=\"requestFactory\"\n    reply-timeout=\"1234\"\n    reply-channel=\"replies\"/>\n```", "```java\n<int-http:outbound-gateway id=\"app1\"\n    request-channel=\"requests\"\n    URL=\"http://localhost/myapp\"\n    http-method-expression=\"headers.httpMethod\"\n    extract-request-payload=\"false\"\n    expected-response-type-expression=\"payload\"\n    charset=\"UTF-8\"\n    request-factory=\"requestFactory\"\n    reply-timeout=\"1234\"\n    reply-channel=\"replies\"/>\n```", "```java\n<int-http:outbound-channel-adapter id=\"app1\"\n    url=\"http://localhost/myapp\"\n    http-method=\"GET\"\n    channel=\"requests\"\n    charset=\"UTF-8\"\n    extract-payload=\"false\"\n    expected-response-type=\"java.lang.String\"\n    request-factory=\"someRequestFactory\"\n    order=\"3\"\n    auto-startup=\"false\"/>\n```", "```java\n<int-http:outbound-gateway id=\"trafficGateway\"\n    url=\"http://local.yahooapis.com/trafficData?appid=YdnDemo&amp;zip={zipCode}\"\n    request-channel=\"trafficChannel\"\n    http-method=\"GET\"\n    expected-response-type=\"java.lang.String\">\n    <int-http:uri-variable name=\"zipCode\" expression=\"payload.getZip()\"/>\n</int-http:outbound-gateway>\n```", "```java\n<int-http:outbound-gateway\n  url=\"http://foo.host/{foo}/bars/{bar}\"\n  request-channel=\"trafficChannel\"\n  http-method=\"GET\"\n  Uri-variables-expression=\"@uriVariablesBean.populate(payload)\"\n  expected-response-type=\"java.lang.String\"/>\n```", "```java\n<int-http:outbound-gateway id=\"httpGateway\"\n    url=\"http://localhost/app2\"\n    mapped-request-headers=\"boo, bar\"\n    mapped-response-headers=\"X-*, HTTP_RESPONSE_HEADERS\"\n    channel=\"someChannel\"/>\n\n<int-http:outbound-channel-adapter id=\"httpAdapter\"\n    url=\"http://localhost/app2\"\n    mapped-request-headers=\"boo, bar, HTTP_REQUEST_HEADERS\"\n    channel=\"someChannel\"/>\n```", "```java\n<bean id=\"headerMapper\" class=\"o.s.i.http.support.DefaultHttpHeaderMapper\">\n  <property name=\"inboundHeaderNames\" value=\"foo*, *bar, baz\"/>\n  <property name=\"outboundHeaderNames\" value=\"a*b, d\"/>\n</bean>\n```", "```java\n<int-http:inbound-channel-adapter id=\"httpInboundAdapter\"\n  channel=\"receiveChannel\"\n  name=\"/inboundAdapter.htm\"\n  supported-methods=\"GET, POST\"/>\n<int:channel id=\"receiveChannel\"/>\n<int:service-activator input-channel=\"receiveChannel\">\n  <bean class=\"org.springframework.integration.samples.multipart.MultipartReceiver\"/>\n</int:service-activator>\n<bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"/>\n```", "```java\npublic void receive(LinkedMultiValueMap<String, Object> multipartRequest){\n  System.out.println(\"### Successfully received multipart request ###\");\n  for (String elementName : multipartRequest.keySet()) {\n    if (elementName.equals(\"company\")){\n      System.out.println(\"\\t\" + elementName + \" - \" +((String[]) multipartRequest.getFirst(\"company\"))[0]);\n    }\n    else if (elementName.equals(\"company-logo\")){\n      System.out.println(\"\\t\" + elementName + \" - as UploadedMultipartFile: \" + ((UploadedMultipartFile) multipartRequest.getFirst(\"company-logo\")).getOriginalFilename());\n    }\n  }\n}\n```", "```java\n    MultiValueMap map = new LinkedMultiValueMap();\n    ```", "```java\n    Resource anjanapic = new ClassPathResource(\"org/abc/samples/multipart/anjana.png\");\n    map.add(\"username\",\"anjana\");\n    map.add(\"lastname\",\"mankale\");\n    map.add(\"city\",\"bangalore\");\n    map.add(\"country\",\"India\");\n    map.add(\"photo\",anjana.png);\n    ```", "```java\n    HttpHeaders headers = new HttpHeaders();\n    headers.setContentType(new MediaType(\"multipart\", \"form-data\"));\n    ```", "```java\n    HttpEntity request = new HttpEntity(map, headers);\n    ```", "```java\n    RestTemplate template = new RestTemplate();\n    String Uri = \"http://localhost:8080/multipart-http/inboundAdapter.htm\";\n    ResponseEntity<?> httpResponse = template.exchange(Uri, HttpMethod.POST, request, null\n    ```"]