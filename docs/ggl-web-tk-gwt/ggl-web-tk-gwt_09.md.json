["```java\n    public interface I18NSamplesConstants extends Constants\n    {\n    String welcome();\n    String flag_image();\n    }\n\n    ```", "```java\n    welcome = Welcome\n    flag_image = flag_en.gif\n\n    ```", "```java\n    welcome = \u03c5\u03c0\u03bf\u03b4\u03bf\u03c7\u03ae\n    flag_image = flag_el_GR.gif\n\n    ```", "```java\n    welcome = recepci\u00f3n\n    flag_image = flag_es_ES.gif\n\n    ```", "```java\n    welcome = \n    flag_image = flag_zh_CN.gif\n\n    ```", "```java\n    private VerticalPanel workPanel = new VerticalPanel();\n    private Label welcome = new Label();\n\n    ```", "```java\n    public I18nPanel()\n    {\n    I18NSamplesConstants myConstants = (I18NSamplesConstants)\n    GWT.create(I18NSamplesConstants.class);\n    // Always the same problem, samples are not \"sound\n    and complete\"\n    welcome.setText(myConstants.welcome());\n    welcome.setStyleName(\"flagLabel\");\n    Image flag = new Image(\"images/\" + myConstants.flag_image());\n    flag.setStyleName(\"flag\");\n    workPanel.add(flag);\n    workPanel.add(welcome);\n    DockPanel workPane = new DockPanel();\n    workPane.add(infoPanel, DockPanel.NORTH);\n    workPane.add(workPanel, DockPanel.CENTER);\n    workPane.setCellHeight(workPanel, \"100%\");\n    workPane.setCellWidth(workPanel, \"100%\");\n    initWidget(workPane);\n    internationalization, GWTI18N support, using}\n\n    ```", "```java\n    <inherits name =\"com.google.gwt.i18n.I18N\"/>\n\n    ```", "```java\n    <extend-property name=\"locale\" values=\"el_GR\"/>\n    <extend-property name=\"locale\" values=\"es_ES\"/>\n    <extend-property name=\"locale\" values=\"zh_CN\"/>\n\n    ```", "```java\nhttp://localhost:8888/com.packtpub.gwtbook.samples.Samples/Samples.html?locale=el_GR#i18n\n\n```", "```java\nhttp://localhost:8888/com.packtpub.gwtbook.samples.Samples/Samples.html?locale=es_ES#i18n\n\n```", "```java\nhttp://localhost:8888/com.packtpub.gwtbook.samples.Samples/Samples.html?locale=zh_CN#i18n\n\n```", "```java\nwelcome = recepci\u00f3n\nflag_image = flag_es_ES.gif\n\n```", "```java\nI18NSamplesConstants myConstants = (I18NSamplesConstants)\nGWT.create(I18NSamplesConstants.class);\nwelcome.setText(myConstants.welcome());\nImage flag = new Image(\"images/\" + myConstants.flag_image());\n\n```", "```java\n<extend-property name=\"locale\" values=\"el_GR\"/>\n\n```", "```java\n    John Doe,222 Peachtree St,Atlanta\n    Jane Doe,111 10th St,New York\n\n    ```", "```java\n    private HTMLPanel htmlPanel = new HTMLPanel(\"<pre></pre>\");\n    private VerticalPanel workPanel = new VerticalPanel();\n\n    ```", "```java\n    private Document createXMLDocument(String data)\n    {\n    String[] tokens = data.split(\"\\n\");\n    Document customersDoc = XMLParser.createDocument();\n    ProcessingInstruction procInstruction = customersDoc. createProcessingInstruction(\"xml\", \"version=\\\"1.0\\\"\");\n    customersDoc.appendChild(procInstruction);\n    Element rootElement =\n    customersDoc.createElement(\"customers\");\n    customersDoc.appendChild(rootElement);\n    for (int i = 0; i < tokens.length; i++)\n    {\n    String[] customerInfo = tokens[i].split(\",\");\n    Element customerElement =\n    customersDoc.createElement(\"customer\");\n    Element customerNameElement =\n    customersDoc.createElement(\"name\");\n    customerNameElement.appendChild\n    (customersDoc.createTextNode(customerInfo[0]));\n    XML support, Element customerAddressElement =\n    customersDoc.createElement(\"address\");\n    customerAddressElement.appendChild\n    (customersDoc.createTextNode(customerInfo[1]));\n    Element customerCityElement =\n    customersDoc.createElement(\"city\");\n    customerCityElement.appendChild\n    (customersDoc.createTextNode(customerInfo[2]));\n    customerElement.appendChild(customerNameElement);\n    customerElement.appendChild(customerAddressElement);\n    customerElement.appendChild(customerCityElement);\n    rootElement.appendChild(customerElement);\n    }\n    return customersDoc;\n    }\n\n    ```", "```java\n    private String createPrettyXML(Document xmlDoc)\n    {\n    String xmlString = xmlDoc.toString();\n    xmlString = xmlString.replaceAll\n    (\"<customers\", \"&nbsp;&nbsp;<customers\");\n    xmlString = xmlString.replaceAll\n    (\"</customers\",\"&nbsp;&nbsp;</customers\");\n    xmlString = xmlString.replaceAll\n    (\"<customer>\",\"&nbsp;&nbsp;&nbsp;<customer>\");\n    xmlString = xmlString.replaceAll\n    (\"</customer>\",\"&nbsp;&nbsp;&nbsp;</customer>\");\n    xmlString = xmlString.replaceAll(\"<name>\",\n    \"&nbsp;&nbsp;&nbsp;&nbsp;<name>&nbsp;&nbsp;\n    &nbsp;&nbsp;&nbsp;\");\n    xmlString = xmlString.replaceAll(\"</name>\",\n    \"\\n&nbsp;&nbsp;&nbsp;&nbsp;</name>\");\n    xmlString = xmlString.replaceAll(\"<address>\",\n    \"&nbsp;&nbsp;&nbsp;&nbsp;<address>&nbsp;&nbsp;\n    &nbsp;&nbsp;&nbsp;\");\n    xmlString = xmlString.replaceAll(\"</address>\",\n    \"\\n&nbsp;&nbsp;&nbsp;&nbsp;</address>\");\n    xmlString = xmlString.replaceAll(\"<city>\",\n    \"&nbsp;&nbsp;&nbsp;&nbsp;<city>&nbsp;&nbsp;\n    &nbsp;&nbsp;&nbsp;\");\n    xmlString = xmlString.replaceAll(\"</city>\",\n    \"\\n&nbsp;&nbsp;&nbsp;&nbsp;</city>\");\n    xmlString = xmlString.replaceAll(\">\", \">\\n\");\n    xmlString = xmlString.replaceAll(\"<\", \"\");\n    xmlString = xmlString.replaceAll(\">\", \"\");\n    return xmlString;\n    }\n\n    ```", "```java\n    public CreateXMLPanel()\n    {\n    HorizontalPanel infoPanel = new HorizontalPanel();\n    infoPanel.add(new HTML(\n    \"<div class='infoProse'>Read a comma separated text file\n    and create an XML document from it.</div>\"));\n    HTTPRequest.asyncGet(\"customers.csv\",\n    new ResponseTextHandler()\n    {\n    public void onCompletion(String responseText)\n    {\n    Document customersDoc = createXMLDocument(responseText);\n    if (htmlPanel.isAttached())\n    {\n    workPanel.remove(htmlPanel);\n    }\n    htmlPanel = new HTMLPanel(\"<pre>\" +\n    createPrettyXML(customersDoc) + \"</pre>\");\n    htmlPanel.setStyleName(\"xmlLabel\");\n    workPanel.add(htmlPanel);\n    }\n    });\n    DockPanel workPane = new DockPanel();\n    workPane.add(infoPanel, DockPanel.NORTH);\n    workPane.add(workPanel, DockPanel.CENTER);\n    workPane.setCellHeight(workPanel, \"100%\");\n    workPane.setCellWidth(workPanel, \"100%\");\n    initWidget(workPane);\n    }\n\n    ```", "```java\n    <inherits name =\"com.google.gwt.xml.XML\"/>\n\n    ```", "```java\nDocument customersDoc = XMLParser.createDocument();\n\n```", "```java\nProcessingInstruction procInstruction =\ncustomersDoc.createProcessingInstruction(\"XML\", \"version=\\\"1.0\\\"\");\ncustomersDoc.appendChild(procInstruction);\n\n```", "```java\ncustomersDoc.createElement(\"name\");\ncustomerNameElement.appendChild\n(customersDoc.createTextNode(customerInfo[0]));\n\n```", "```java\n    <?xml version=\"1.0\" encoding=\"US-ASCII\"?>\n    <books>\n    <book id=\"1\">\n    <title>I Claudius</title>\n    <author>Robert Graves</author>\n    <year>1952</year>\n    </book>\n    <book id=\"2\">\n    <title>The Woman in white</title>\n    <author>Wilkie Collins</author>\n    <year>1952</year>\n    </book>\n    <book id=\"3\">\n    <title>Shogun</title>\n    <author>James Clavell</author>\n    <year>1952</year>\n    </book>\n    <book id=\"4\">\n    <title>City of Djinns</title>\n    <author>William Dalrymple</author>\n    <year>2003</year>\n    </book>\n    <book id=\"5\">\n    <title>Train to pakistan</title>\n    <author>Kushwant Singh</author>\n    <year>1952</year>\n    </book>\n    </books>\n\n    ```", "```java\n    private VerticalPanel workPanel = new VerticalPanel();\n    private FlexTable booksTable = new FlexTable();\n\n    ```", "```java\n    private String getElementTextValue\n    (Element parent, String elementTag)\n    {\n    return parent.getElementsByTagName\n    (elementTag).item(0).getFirstChild().getNodeValue();\n    }\n\n    ```", "```java\n    booksTable.setWidth(500 + \"px\");\n    booksTable.setStyleName(\"xmlParse-Table\");\n    booksTable.setBorderWidth(1);\n    booksTable.setCellPadding(4);\n    booksTable.setCellSpacing(1);\n    booksTable.setText(0, 0, \"Title\");\n    booksTable.setText(0, 1, \"Author\");\n    booksTable.setText(0, 2, \"Publication Year\");\n    RowFormatter rowFormatter = booksTable.getRowFormatter();\n    rowFormatter.setStyleName(0, \"xmlParse-TableHeader\");\n\n    ```", "```java\n    HTTPRequest.asyncGet(\"books.xml\", new ResponseTextHandler()\n    {\n    public void onCompletion(String responseText)\n    {\n    Document bookDom = XMLParser.parse(responseText);\n    Element booksElement = bookDom.getDocumentElement();\n    XMLParser.removeWhitespace(booksElement);\n    NodeList bookElements =\n    booksElement.getElementsByTagName(\"book\");\n    for (int i = 0; i < bookElements.getLength(); i++)\n    {\n    Element bookElement = (Element) bookElements.item(i);\n    booksTable.setText(i + 1, 0, getElementTextValue(\n    bookElement, \"title\"));\n    booksTable.setText(i + 1, 1, getElementTextValue(\n    bookElement, \"author\"));\n    booksTable.setText(i + 1, 2, getElementTextValue(\n    bookElement, \"year\"));\n    }\n    }\n    });\n    DockPanel workPane = new DockPanel();\n    workPanel.add(booksTable);\n    workPane.add(infoPanel, DockPanel.NORTH);\n    workPane.add(workPanel, DockPanel.CENTER);\n    workPane.setCellHeight(workPanel, \"100%\");\n    workPane.setCellWidth(workPanel, \"100%\");\n    initWidget(workPane);\n\n    ```", "```java\nNodeList bookElements = booksElement.getElementsByTagName(\"book\");\n\n```", "```java\nfor (int i = 0; i < bookElements.getLength(); i++)\n{\nElement bookElement = (Element) bookElements.item(i);\nbooksTable.setText(i + 1, 0, getElementTextValue(\nbookElement, \"title\"));\nbooksTable.setText(i + 1, 1, getElementTextValue(\nbookElement, \"author\"));\nbooksTable.setText(i + 1, 2, getElementTextValue(\nbookElement, \"year\"));\n}\n\n```"]