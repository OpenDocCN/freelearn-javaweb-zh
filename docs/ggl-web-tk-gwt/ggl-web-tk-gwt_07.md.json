["```java\n    <inherits name='com.google.gwt.user.User'/>\n\n    ```", "```java\n    public class CalendarWidget extends Composite implements\n    ClickListener\n    {\n    }\n\n    ```", "```java\n    private DockPanel navigationBar = new DockPanel();\n    private Button previousMonth = new Button(\"&lt;\", this);\n    private Button nextMonth = new Button(\"&gt;\", this);\n    private final DockPanel outerDockPanel = new DockPanel();\n\n    ```", "```java\n    private String[] daysInWeek = new String[] { \"Sunday\",\n    \"Monday\", \"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\",\n    \"Saturday\"};\n    private String[] monthsInYear = new String[] { \"January\",\n    \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"};\n\n    ```", "```java\n    private HTML calendarTitle = new HTML();\n    private Label dayOfWeek = new Label(\"\");\n    private Label dateOfWeek = new Label(\"\");\n    private Date currentDate = new Date();\n\n    ```", "```java\n    private final Grid calendarGrid = new Grid(7, 7)\n    {\n    public boolean clearCell(int row, int column)\n    {\n    boolean retValue = super.clearCell(row, column);\n    Element td = getCellFormatter().getElement(row, column);\n    DOM.setInnerHTML(td, \"\");\n    return retValue;\n    }\n    };\n\n    ```", "```java\n    private static class CalendarCell extends HTML\n    {\n    private int day;\n    public CalendarCell(String cellText, int day)\n    {\n    super(cellText);\n    this.day = day;\n    }\n    public int getDay()\n    {\n    return day;\n    }\n    }\n\n    ```", "```java\n    public int getYear()\n    {\n    return 1900 + currentDate.getYear();\n    }\n    public int getMonth()\n    {\n    return currentDate.getMonth();\n    }\n    public int getDay()\n    {\n    return currentDate.getDate();\n    }\n    public Date getDate()\n    {\n    return currentDate;\n    }\n\n    ```", "```java\n    private void setDate(int year, int month, int day)\n    {\n    currentDate = new Date(year - 1900, month, day);\n    }\n    private void setYear(int year)\n    {\n    currentDate.setYear(year - 1900);\n    }\n    private void setMonth(int month)\n    {\n    currentDate.setMonth(month);\n    }\n\n    ```", "```java\n    public void computeCalendarForPreviousMonth()\n    {\n    int month = getMonth() - 1;\n    if (month < 0)\n    {\n    setDate(getYear() - 1, 11, getDay());\n    }\n    else\n    {\n    setMonth(month);\n    }\n    renderCalendar();\n    }\n\n    ```", "```java\n    public void computeCalendarForNextMonth()\n    {\n    int month = getMonth() + 1;\n    if (month > 11)\n    {\n    setDate(getYear() + 1, 0, getDay());\n    }\n    else\n    {\n    setMonth(month);\n    }\n    renderCalendar();\n    }\n\n    ```", "```java\n    private int getDaysInMonth(int year, int month)\n    {\n    switch (month)\n    {\n    case 1:\n    if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)\n    return 29;\n    else\n    return 28;\n    case 3:\n    return 30;\n    case 5:\n    return 30;\n    case 8:\n    return 30;\n    case 10:\n    return 30;\n    default:\n    return 31;\n    }\n    }\n\n    ```", "```java\n    private void renderCalendar()\n    {\n    int year = getYear();\n    int month = getMonth();\n    int day = getDay();\n    calendarTitle.setText(monthsInYear[month] + \" \" + year);\n    calendarGrid.getRowFormatter().setStyleName(0, \"weekheader\");\n    for (int i = 0; i < daysInWeek.length; i++)\n    {\n    calendarGrid.getCellFormatter().setStyleName(0, i, \"days\");\n    calendarGrid.setText(0, i, daysInWeek[i].substring(0, 1));\n    }\n    Date now = new Date();\n    int sameDay = now.getDate();\n    int today = (now.getMonth() == month && now.getYear() + 1900\n    == year) ? sameDay : 0;\n    int firstDay = new Date(year - 1900, month, 1).getDay();\n    int numOfDays = getDaysInMonth(year, month);\n    int weekDay = now.getDay();\n    dayOfWeek.setText(daysInWeek[weekDay]);\n    dateOfWeek.setText(\"\" + day);\n    int j = 0;\n    for (int i = 1; i < 6; i++)\n    {\n    for (int k = 0; k < 7; k++, j++)\n    {\n    int displayNum = (j - firstDay + 1);\n    if (j < firstDay || displayNum > numOfDays)\n    {\n    calendarGrid.getCellFormatter().setStyleName(i, k,\n    \"empty\");\n    calendarGrid.setHTML(i, k, \"&nbsp;\");\n    }\n    else\n    {\n    HTML html = new calendarCell(\"<span>\"+\n    String.valueOf(displayNum) + \"</span>\",displayNum);\n    html.addClickListener(this);\n    calendarGrid.getCellFormatter().setStyleName(i, k,\n    \"cell\");\n    if (displayNum == today)\n    {\n    calendarGrid.getCellFormatter().addStyleName(i, k,\n    \"today\");\n    }\n    else if (displayNum == sameDay)\n    {\n    calendarGrid.getCellFormatter().addStyleName(i, k,\n    \"day\");\n    }\n    calendarGrid.setWidget(i, k, html);\n    }\n    }\n    }\n    }\n\n    ```", "```java\n    HorizontalPanel hpanel = new HorizontalPanel();\n    navigationBar.setStyleName(\"navbar\");\n    calendarTitle.setStyleName(\"header\");\n    HorizontalPanel prevButtons = new HorizontalPanel();\n    prevButtons.add(previousMonth);\n    HorizontalPanel nextButtons = new HorizontalPanel();\n    nextButtons.add(nextMonth);\n    navigationBar.add(prevButtons, DockPanel.WEST);\n    navigationBar.setCellHorizontalAlignment(prevButtons,\n    DockPanel.ALIGN_LEFT);\n    navigationBar.add(nextButtons, DockPanel.EAST);\n    navigationBar.setCellHorizontalAlignment(nextButtons,\n    DockPanel.ALIGN_RIGHT);\n    navigationBar.add(calendarTitle, DockPanel.CENTER);\n    navigationBar.setVerticalAlignment(DockPanel.ALIGN_MIDDLE);\n    navigationBar.setCellHorizontalAlignment(calendarTitle,\n    HasAlignment.ALIGN_CENTER);\n    navigationBar.setCellVerticalAlignment(calendarTitle,\n    HasAlignment.ALIGN_MIDDLE);\n    navigationBar.setCellWidth(calendarTitle, \"100%\");\n\n    ```", "```java\n    initWidget(hpanel);\n    calendarGrid.setStyleName(\"table\");\n    calendarGrid.setCellSpacing(0);\n    DOM.setAttribute(hpanel.getElement(), \"id\", \"calDiv\");\n    DOM.setAttribute(hpanel.getElement(), \"className\",\n    \"CalendarWidgetHolder\");\n    Rico.corner(hpanel.getElement(), null);\n    hpanel.add(outerDockPanel);\n\n    ```", "```java\n    VerticalPanel calendarPanel = new VerticalPanel();\n    calendarPanel.add(navigationBar);\n    VerticalPanel vpanel = new VerticalPanel();\n    calendarPanel.add(calendarGrid);\n    calendarPanel.add(todayButton);\n\n    ```", "```java\n    todayButton.setStyleName(\"todayButton\");\n    todayButton.addClickListener(new ClickListener()\n    {\n    public void onClick(Widget sender)\n    {\n    currentDate = new Date();\n    renderCalendar();\n    }\n    });\n\n    ```", "```java\n    dayOfWeek.setStyleName(\"dayOfWeek\");\n    dateOfWeek.setStyleName(\"dateOfWeek\");\n    vpanel.add(dayOfWeek);\n    vpanel.add(dateOfWeek);\n\n    ```", "```java\n    outerDockPanel.add(vpanel, DockPanel.CENTER);\n    outerDockPanel.add(calendarPanel, DockPanel.EAST);\n\n    ```", "```java\n    renderCalendar();\n    setStyleName(\"CalendarWidget\");\n    this.sinkEvents(Event.ONCLICK);\n\n    ```", "```java\n    <inherits name='com.packtpub.gwtbook.widgets.Widgets'/>\n\n    ```", "```java\n    private VerticalPanel workPanel = new VerticalPanel();\n\n    ```", "```java\n    HorizontalPanel infoPanel = new HorizontalPanel();\n    infoPanel.add(new HTML\n    (\"<div class='infoProse'>Click on the navigation buttons to\n    go forward and backward through the calendar. When you\n    want to come back to todays date, click on the Today\n    button.</div>\"));\n    CalendarWidget calendar = new CalendarWidget();\n    workPanel.add(calendar);\n    DockPanel workPane = new DockPanel();\n    workPane.add(infoPanel, DockPanel.NORTH);\n    workPane.add(workPanel, DockPanel.CENTER);\n    workPane.setCellHeight(workPanel, \"100%\");\n    workPane.setCellWidth(workPanel, \"100%\");\n    initWidget(workPane);\n\n    ```", "```java\nDOM.setAttribute(hpanel.getElement(), \"id\", \"calDiv\");\nDOM.setAttribute(hpanel.getElement(), \"className\",\n\"CalendarWidgetHolder\");\nRico.corner(hpanel.getElement(), null);\n\n```", "```java\npublic boolean clearCell(int row, int column)\n{\nboolean retValue = super.clearCell(row, column);\nElement td = getCellFormatter().getElement(row, column);\nDOM.setInnerHTML(td, \"\");\nreturn retValue;\n}\n\n```", "```java\nprivate static class calendarCell extends HTML\n{\nprivate int day;\npublic calendarCell(String cellText, int day)\n{\nsuper(cellText);\nthis.day = day;\n}\npublic int getDay()\n{\nreturn day;\n}\n}\n\n```", "```java\npublic void computeCalendarForPreviousMonth()\n{\nint month = getMonth() - 1;\nif (month < 0)\n{\nsetDate(getYear() - 1, 11, getDay());\n}\nelse\n{\nsetMonth(month);\n}\nrenderCalendar();\n}\n\n```", "```java\ntodayButton.addClickListener(new ClickListener()\n{\npublic void onClick(Widget sender)\n{\ncurrentDate = new Date();\nrenderCalendar();\n}\n});\n\n```", "```java\n    private String zipCode = \"\";\n    private String chill = \"\";\n    private String direction = \"\";\n    private String speed = \"\";\n    private String humidity = \"\";\n    private String visibility = \"\";\n    private String pressure = \"\";\n    private String rising = \"\";\n    private String sunrise = \"\";\n    private String sunset = \"\";\n    private String latitude = \"\";\n    private String longitude = \"\";\n    private String currentCondition = \"\";\n    private String currentTemp = \"\";\n    private String imageUrl = \"\";\n    private String city = \"\";\n    private String state = \"\";\n    private String error = \"\";\n\n    ```", "```java\n    public String getChill()\n    {\n    return chill;\n    }\n    public void setChill(String chill)\n    {\n    this.chill = chill;\n    }\n    public String getCity()\n    {\n    return city;\n    }\n    public void setCity(String city)\n    {\n    this.city = city;\n    }\n    public String getCurrentCondition()\n    {\n    return currentCondition;\n    }\n    public void setCurrentCondition(String currentCondition)\n    {\n    this.currentCondition = currentCondition;\n    }\n    public String getCurrentTemp()\n    {\n    return currentTemp;\n    }\n    public void setCurrentTemp(String currentTemp)\n    {\n    this.currentTemp = currentTemp;\n    }\n\n    ```", "```java\n    public String getDirection()\n    {\n    return direction;\n    }\n    public void setDirection(String direction)\n    {\n    this.direction = direction;\n    }\n    public String getError()\n    {\n    return error;\n    }\n    public void setError(String error)\n    {\n    this.error = error;\n    }\n    public String getHumidity()\n    {\n    return humidity;\n    }\n    public void setHumidity(String humidity)\n    {\n    this.humidity = humidity;\n    }\n    public String getImageUrl()\n    {\n    return imageUrl;\n    }\n    public void setImageUrl(String imageUrl)\n    {\n    this.imageUrl = imageUrl;\n    }\n\n    ```", "```java\n    public String getLatitude()\n    {\n    return latitude;\n    }\n    public void setLatitude(String latitude)\n    {\n    this.latitude = latitude;\n    }\n    public String getLongitude()\n    {\n    return longitude;\n    }\n    public void setLongitude(String longitude)\n    {\n    this.longitude = longitude;\n    }\n    public String getPressure()\n    {\n    return pressure;\n    }\n    public void setPressure(String pressure)\n    {\n    this.pressure = pressure;\n    }\n    public String getRising()\n    {\n    return rising;\n    }\n    public void setRising(String rising)\n    {\n    this.rising = rising;\n    }\n\n    ```", "```java\n    public String getSpeed()\n    {\n    return speed;\n    }\n    public void setSpeed(String speed)\n    {\n    this.speed = speed;\n    }\n    public String getState()\n    {\n    return state;\n    }\n    public void setState(String state)\n    {\n    this.state = state;\n    }\n    public String getSunrise()\n    {\n    return sunrise;\n    }\n    public void setSunrise(String sunrise)\n    {\n    this.sunrise = sunrise;\n    }\n    public String getSunset()\n    {\n    return sunset;\n    }\n    public void setSunset(String sunset)\n    {\n    this.sunset = sunset;\n    }\n\n    ```", "```java\n    public String getVisibility()\n    {\n    return visibility;\n    }\n    public void setVisibility(String visibility)\n    {\n    this.visibility = visibility;\n    }\n    public String getZipCode()\n    {\n    return zipCode;\n    }\n    public void setZipCode(String zipCode)\n    {\n    this.zipCode = zipCode;\n    }\n\n    ```", "```java\n    public Weather(String zipCode, String chill, String direction,\n    String speed, String humidity, String visibility, String\n    pressure, String rising, String sunrise, String sunset,\n    String latitude, String longitude, String currentCondition,\n    String currentTemp, String imageUrl, String city, String\n    state)\n    {\n    this.zipCode = zipCode;\n    this.chill = chill;\n    this.direction = direction;\n    this.speed = speed;\n    this.humidity = humidity;\n    this.visibility = visibility;\n    this.pressure = pressure;\n    this.rising = rising;\n    this.sunrise = sunrise;\n    this.sunset = sunset;\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.currentCondition = currentCondition;\n    this.currentTemp = currentTemp;\n    this.imageUrl = imageUrl;\n    this.city = city;\n    this.state = state;\n    }\n\n    ```", "```java\n    public interface WeatherService extends RemoteService\n    {\n    public Weather getWeather(String zipCode);\n    }\n\n    ```", "```java\n    public interface WeatherServiceAsync\n    {\n    public void getWeather(String zipCode, AsyncCallback\n    callback);\n    }\n\n    ```", "```java\n    public Weather getWeather(String zipCode)\n    {\n    SAXReader reader = new SAXReader();\n    Weather weather = new Weather();\n    Document document;\n    }\n\n    ```", "```java\n    try\n    {\n    document = reader.read(new URL\n    (\"http://xml.weather.yahoo.com/forecastrss?p=\" + z ipCode));\n    }\n    catch (MalformedURLException e)\n    {\n    e.printStackTrace();\n    }\n    catch (DocumentException e)\n    {\n    e.printStackTrace();\n    }\n\n    ```", "```java\n    XPath expression = new Dom4jXPath(\"/rss/channel\");\n    expression.addNamespace(\"yweather\",\n    \"http://xml.weather.yahoo.com/ns/rss/1.0\");\n    expression.addNamespace(\"geo\",\n    \"http://www.w3.org/2003/01/geo/wgs84_pos#\");\n\n    ```", "```java\n    Node result = (Node) expression.selectSingleNode(document);\n    String error = result.valueOf(\"/rss/channel/description\");\n    if (error.equals(\"Yahoo! Weather Error\"))\n    {\n    weather.setError(\"Invalid zipcode \"+ zipCode+\n    \" provided. No weather information available for this\n    location.\");\n    return weather;\n    }\n\n    ```", "```java\n    String descriptionSection = result.valueOf\n    (\"/rss/channel/item/description\");\n    weather.setImageUrl(descriptionSection.substring\n    (descriptionSection.indexOf(\"src=\") + 5,\n    descriptionSection.indexOf(\".gif\") + 4));\n\n    ```", "```java\n    weather.setCity(result.valueOf(\"//yweather:location/@city\"));\n    weather.setState(result.valueOf\n    (\"//yweather:location/@region\"));\n    weather.setChill(result.valueOf(\"//yweather:wind/@chill\"));\n    weather.setDirection(result.valueOf\n    (\"//yweather:wind/@direction\"));\n    weather.setSpeed(result.valueOf(\"//yweather:wind/@speed\"));\n    weather.setHumidity(result.valueOf\n    (\"//yweather:atmosphere/@humidity\"));\n    weather.setVisibility(result.valueOf\n    (\"//yweather:atmosphere/@visibility\"));\n    weather.setPressure(result.valueOf\n    (\"//yweather:atmosphere/@pressure\"));\n    weather.setRising(result.valueOf\n    (\"//yweather:atmosphere/@rising\"));\n    weather.setSunrise(result.valueOf\n    (\"//yweather:astronomy/@sunrise\"));\n    weather.setSunset(result.valueOf\n    (\"//yweather:astronomy/@sunset\"));\n    weather.setCurrentCondition(result.valueOf\n    (\"//yweather:condition/@text\"));\n    weather.setCurrentTemp(result.valueOf\n    (\"//yweather:condition/@temp\"));\n    weather.setLatitude(result.valueOf(\"//geo:lat\"));\n    weather.setLongitude(result.valueOf(\"//geo:long\"));\n    return weather;\n\n    ```", "```java\n    public class WeatherWidget extends Composite implements\n    ChangeListener\n    {\n    }\n\n    ```", "```java\n    private VerticalPanel imagePanel = new VerticalPanel();\n    private HorizontalPanel tempPanel = new HorizontalPanel();\n    private VerticalPanel tempHolderPanel = new VerticalPanel();\n    private HorizontalPanel currentPanel = new HorizontalPanel();\n    private HorizontalPanel windPanel = new HorizontalPanel();\n    private HorizontalPanel windPanel2 = new HorizontalPanel();\n    private HorizontalPanel atmospherePanel = new\n    HorizontalPanel();\n    private HorizontalPanel atmospherePanel2 = new\n    HorizontalPanel();\n    private HorizontalPanel astronomyPanel = new HorizontalPanel();\n    private HorizontalPanel geoPanel = new HorizontalPanel();\n    private Image image = new Image();\n    private Label currentTemp = new Label(\"\");\n    private Label currentCondition = new Label(\"\");\n\n    ```", "```java\n    private Label windChill = new Label(\"\");\n    private Label windDirection = new Label(\"\");\n    private Label windSpeed = new Label(\"\");\n    private Label atmHumidity = new Label(\"\");\n    private Label atmVisibility = new Label(\"\");\n    private Label atmpressure = new Label(\"\");\n    private Label atmRising = new Label(\"\");\n    private Label astSunrise = new Label(\"\");\n    private Label astSunset = new Label(\"\");\n    private Label latitude = new Label(\"\");\n    private Label longitude = new Label(\"\");\n    private Label windLabel = new Label(\"Wind\");\n    private Label astLabel = new Label(\"Astronomy\");\n    private Label atmLabel = new Label(\"Atmosphere\");\n    private Label geoLabel = new Label(\"Geography\");\n    private Label cityLabel = new Label(\"\");\n    private TextBox zipCodeInput = new TextBox();\n\n    ```", "```java\n    final WeatherServiceAsync weatherService =\n    (WeatherServiceAsync) GWT.create(WeatherService.class);\n    ServiceDefTarget endpoint = (ServiceDefTarget) weatherService;\n    endpoint.setServiceEntryPoint(GWT.getModuleBaseURL() +\n    \"weather\");\n\n    ```", "```java\n    VerticalPanel workPanel = new VerticalPanel();\n    initWidget(workPanel);\n    this.sinkEvents(Event.ONCHANGE);\n\n    ```", "```java\n    DOM.setAttribute(workPanel.getElement(), \"id\", \"weatherDiv\");\n    DOM.setAttribute(workPanel.getElement(), \"className\",\n    \"weatherHolder\");\n    Rico.corner(workPanel.getElement(), null);\n\n    ```", "```java\n    image.setStyleName(\"weatherImage\");\n    imagePanel.add(image);\n    currentCondition.setStyleName(\"currentCondition\");\n    imagePanel.add(currentCondition);\n    currentPanel.add(imagePanel);\n    currentTemp.setStyleName(\"currentTemp\");\n    tempPanel.add(currentTemp);\n    tempPanel.add(new HTML(\"<div class='degrees'>&deg;</div>\"));\n    tempHolderPanel.add(tempPanel);\n    cityLabel.setStyleName(\"city\");\n    tempHolderPanel.add(cityLabel);\n    currentPanel.add(tempHolderPanel);\n    windDirection.setStyleName(\"currentMeasurementsDegrees\");\n    windChill.setStyleName(\"currentMeasurementsDegrees\");\n    windSpeed.setStyleName(\"currentMeasurements\");\n    windPanel.add(windDirection);\n    windPanel.add(new HTML\n    (\"<div class='measurementDegrees'>&deg;</div>\"));\n    windPanel.add(windSpeed);\n    windPanel2.add(windChill);\n    windPanel2.add(new HTML\n    (\"<div class='measurementDegrees'>&deg;</div>\"));\n    atmHumidity.setStyleName(\"currentMeasurements\");\n    atmpressure.setStyleName(\"currentMeasurements\");\n    atmVisibility.setStyleName(\"currentMeasurements\");\n    atmRising.setStyleName(\"currentMeasurements\");\n    atmospherePanel.add(atmHumidity);\n    atmospherePanel.add(atmVisibility);\n    atmospherePanel2.add(atmpressure);\n    astSunrise.setStyleName(\"currentMeasurements\");\n    astSunset.setStyleName(\"currentMeasurements\");\n    astronomyPanel.add(astSunrise);\n    astronomyPanel.add(astSunset);\n    latitude.setStyleName(\"currentMeasurements\");\n    longitude.setStyleName(\"currentMeasurements\");\n    geoPanel.add(latitude);\n    geoPanel.add(longitude);\n    windLabel.setStyleName(\"conditionPanel\");\n    atmLabel.setStyleName(\"conditionPanel\");\n    astLabel.setStyleName(\"conditionPanel\");\n    geoLabel.setStyleName(\"conditionPanel\");\n\n    ```", "```java\n    workPanel.add(currentPanel);\n    workPanel.add(windLabel);\n    workPanel.add(windPanel);\n    workPanel.add(windPanel2);\n    workPanel.add(atmLabel);\n    workPanel.add(atmospherePanel);\n    workPanel.add(atmospherePanel2);\n    workPanel.add(astLabel);\n    workPanel.add(astronomyPanel);\n    workPanel.add(geoLabel);\n    workPanel.add(geoPanel);\n\n    ```", "```java\n    HorizontalPanel bufferPanel = new HorizontalPanel();\n    bufferPanel.add(new HTML(\"<div>&nbsp;</div>\"));\n    HorizontalPanel zipCodeInputPanel = new HorizontalPanel();\n    Label zipCodeInputLabel = new Label(\"Enter Zip:\");\n    zipCodeInputLabel.setStyleName(\"zipCodeLabel\");\n    zipCodeInput.setStyleName(\"zipCodeInput\");\n    zipCodeInput.setText(\"90210\");\n    zipCodeInput.addChangeListener(this);\n    zipCodeInputPanel.add(zipCodeInputLabel);\n    zipCodeInputPanel.add(zipCodeInput);\n    workPanel.add(zipCodeInputPanel);\n    workPanel.add(bufferPanel);\n    getAndRenderWeather(zipCodeInput.getText());\n\n    ```", "```java\n    private void getAndRenderWeather(String zipCode)\n    {\n    AsyncCallback callback = new AsyncCallback()\n    {\n    public void onSuccess(Object result)\n    {\n    Weather weather = (Weather) result;\n    if (weather.getError().length() > 0)\n    {\n    Window.alert(weather.getError());\n    return;\n    }\n    image.setUrl(weather.getImageUrl());\n    currentTemp.setText(weather.getCurrentTemp());\n    currentCondition.setText(weather.getCurrentCondition());\n    windDirection.setText(\"Direction : \" +\n    weather.getDirection());\n    windChill.setText(\"Chill : \" + weather.getChill());\n    windSpeed.setText(\"Speed : \" + weather.getSpeed() +\n    \" mph\");\n    atmHumidity.setText(\"Humidity : \" + weather.getHumidity()\n    + \" %\");\n    atmpressure.setText(\"Barometer : \"+ weather.getPressure()\n    + \" in and \"+ getBarometerState(\n    Integer.parseInt(weather.getRising())));\n    atmVisibility.setText(\"Visibility : \"+\n    (Integer.parseInt(weather.getVisibility()) / 100) + \" mi\");\n    astSunrise.setText(\"Sunrise : \" + weather.getSunrise());\n    astSunset.setText(\"Sunset : \" + weather.getSunset());\n    latitude.setText(\"Latitude : \" + weather.getLatitude());\n    longitude.setText(\"Longitude : \" +\n    weather.getLongitude());\n    cityLabel.setText(weather.getCity() + \", \" +\n    weather.getState());\n    }\n    public void onFailure(Throwable caught)\n    {\n    Window.alert(caught.getMessage());\n    }\n    weatherService.getWeather(zipCode, callback);\n\n    ```", "```java\n    private String getBarometerState(int rising)\n    {\n    if (rising == 0)\n    {\n    return \"steady\";\n    }\n    else if (rising == 1)\n    {\n    return \"rising\";\n    }\n    else\n    {\n    return \"falling\";\n    }\n    }\n\n    ```", "```java\n    public void onChange(Widget sender)\n    {\n    if (zipCodeInput.getText().length() == 5)\n    {\n    getAndRenderWeather(zipCodeInput.getText());\n    }\n    }\n\n    ```", "```java\n    private VerticalPanel workPanel = new VerticalPanel();\n\n    ```", "```java\n    HorizontalPanel infoPanel = new HorizontalPanel();\n    infoPanel.add(new HTML\n    (\"<div class='infoProse'>A custom widget for viewing the\n    weather conditions for a US city by entering the zipcode\n    in the textbox.</div>\"));:\n    WeatherWidget weather = new WeatherWidget();\n    workPanel.add(weather);\n    DockPanel workPane = new DockPanel();\n    workPane.add(infoPanel, DockPanel.NORTH);\n    workPane.add(workPanel, DockPanel.CENTER);\n    workPane.setCellHeight(workPanel, \"100%\");\n    workPane.setCellWidth(workPanel, \"100%\");\n    initWidget(workPane);\n\n    ```", "```java\ndocument = reader.read(new URL\n(\"http://xml.weather.yahoo.com/forecastrss?p=\" + zipCode));\nXPath expression = new Dom4jXPath(\"/rss/channel\");\nexpression.addNamespace\n(\"yweather\",\"http://xml.weather.yahoo.com/ns/rss/1.0\");\nexpression.addNamespace\n(\"geo\",\"http://www.w3.org/2003/01/geo/wgs84_pos#\");\n\n```", "```java\nweather.setCity(result.valueOf(\"//yweather:location/@city\"));\nweather.setState(result.valueOf(\"//yweather:location/@region\"));\n\n```", "```java\nString descriptionSection = result.valueOf\n(\"/rss/channel/item/description\");\nweather.setImageUrl(descriptionSection.substring\n(descriptionSection.indexOf(\"src=\") + 5,\ndescriptionSection.indexOf(\".gif\") + 4));\n\n```", "```java\ntempPanel.add(new HTML(\"<div class='degrees'>&deg;</div>\"));\n\n```", "```java\n<servlet path=\"/Samples/weather\" class=\nweather widgetworking\"com.packtpub.gwtbook.widgets.server.WeatherServiceImpl\"/>\n\n```"]