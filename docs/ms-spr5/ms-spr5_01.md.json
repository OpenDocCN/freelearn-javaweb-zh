["```java\n    PreparedStatement st = null;\n    try {\n          st = conn.prepareStatement(INSERT_TODO_QUERY);\n          st.setString(1, bean.getDescription());\n          st.setBoolean(2, bean.isDone());\n          st.execute();\n        } \n    catch (SQLException e) {\n          logger.error(\"Failed : \" + INSERT_TODO_QUERY, e);\n     } finally {\n                if (st != null) {\n           try {\n           st.close();\n          } catch (SQLException e) {\n           // Ignore - nothing to do..\n          }\n       }\n     }\n```", "```java\n    jdbcTemplate.update(INSERT_TODO_QUERY, \n    bean.getDescription(), bean.isDone());\n```", "```java\n    RouterFunction<String> route =\n    route(GET(\"/hello-world\"),\n    request -> Response.ok().body(fromObject(\"Hello World\")));\n```", "```java\n    RouterFunction<?> route = route(GET(\"/todos/{id}\"),\n    request -> {\n       Mono<Todo> todo = Mono.justOrEmpty(request.pathVariable(\"id\"))\n       .map(Integer::valueOf)\n       .then(repository::getTodo);\n       return Response.ok().body(fromPublisher(todo, Todo.class));\n      })\n     .and(route(GET(\"/todos\"),\n     request -> {\n       Flux<Todo> people = repository.allTodos();\n       return Response.ok().body(fromPublisher(people, Todo.class));\n     }))\n    .and(route(POST(\"/todos\"),\n    request -> {\n      Mono<Todo> todo = request.body(toMono(Todo.class));\n      return Response.ok().build(repository.saveTodo(todo));\n    }));\n```", "```java\n    import java.util.*\n    data class Todo(var description: String, var name: String, var  \n    targetDate : Date)\n    fun main(args: Array<String>) {\n      var todo = Todo(\"Learn Spring Boot\", \"Jack\", Date())\n      println(todo)\n        //Todo(description=Learn Spring Boot, name=Jack, \n        //targetDate=Mon May 22 04:26:22 UTC 2017)\n      var todo2 = todo.copy(name = \"Jill\")\n      println(todo2)\n         //Todo(description=Learn Spring Boot, name=Jill, \n         //targetDate=Mon May 22 04:26:22 UTC 2017)\n      var todo3 = todo.copy()\n      println(todo3.equals(todo)) //true\n    }  \n```", "```java\n    val arrayList = arrayListOf(\"Item1\", \"Item2\", \"Item3\") \n    // Type is ArrayList\n```", "```java\n    var todo = Todo(description = \"Learn Spring Boot\", \n    name = \"Jack\", targetDate = Date())\n```", "```java\n    var first3TodosOfJack = students.filter { it.name == \"Jack\"   \n     }.take(3)\n```", "```java\n    import java.util.*\n    data class Todo(var description: String, var name: String, var\n    targetDate : Date = Date())\n    fun main(args: Array<String>) {\n      var todo = Todo(description = \"Learn Spring Boot\", name = \"Jack\")\n    }\n```"]