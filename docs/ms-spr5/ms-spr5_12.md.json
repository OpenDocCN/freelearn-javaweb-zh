["```java\n    <modules>\n      <module>api</module>\n      <module>impl</module>\n    </modules>\n```", "```java\n    <dependency>\n      <groupId>com.in28minutes.example.layering</groupId>\n      <artifactId>data-api</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>com.in28minutes.example.layering</groupId>\n      <artifactId>data-impl</artifactId>\n      <scope>runtime</scope>\n    </dependency>\n```", "```java\n    PreparedStatement st = null;\n    try {\n        st = conn.prepareStatement(INSERT_TODO_QUERY);\n        st.setString(1, bean.getDescription());\n        st.setBoolean(2, bean.isDone());\n        st.execute();\n        } catch (SQLException e) {\n          logger.error(\"Failed : \" + INSERT_TODO_QUERY, e);\n          } finally {\n            if (st != null) {\n              try {\n                st.close();\n                } catch (SQLException e) {\n                // Ignore - nothing to do..\n                }\n          }\n      }\n```", "```java\n    boolean execute() throws SQLException\n```", "```java\n    jdbcTemplate.update(INSERT_TODO_QUERY, \n    bean.getDescription(),bean.isDone());\n```", "```java\n    @ComponentScan(basePackageClasses = ApplicationController.class) \n    public class SomeApplication {\n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <beans \n\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n      http://www.springframework.org/schema/beans/spring-beans.xsd\n      http://www.springframework.org/schema/context/\n      http://www.springframework.org/schema/context/spring-\n      context.xsd\">\n      <!-- Other bean definitions-->\n    </beans>\n```", "```java\n    public class SomeClass {\n      private MandatoryDependency mandatoryDependency\n      private OptionalDependency optionalDependency;\n      public SomeClass(MandatoryDependency mandatoryDependency) {\n      this.mandatoryDependency = mandatoryDependency;\n    }\n    public void setOptionalDependency(\n    OptionalDependency optionalDependency) {\n      this.optionalDependency = optionalDependency;\n    }\n    //All other logic\n   }\n```", "```java\n    <parent>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-parent</artifactId>\n      <version>${spring-boot.version}</version>\n      <relativePath /> <!-- lookup parent from repository -->\n    </parent>\n```", "```java\n<activemq.version>5.14.3</activemq.version>\n <ehcache.version>2.10.3</ehcache.version>\n <elasticsearch.version>2.4.4</elasticsearch.version>\n <h2.version>1.4.193</h2.version>\n <jackson.version>2.8.7</jackson.version>\n <jersey.version>2.25.1</jersey.version>\n <junit.version>4.12</junit.version>\n <mockito.version>1.10.19</mockito.version>\n <mongodb.version>3.4.2</mongodb.version>\n <mysql.version>5.1.41</mysql.version>\n <reactor.version>2.0.8.RELEASE</reactor.version>\n <reactor-spring.version>2.0.7.RELEASE</reactor-spring.version>\n <selenium.version>2.53.1</selenium.version>\n <spring.version>4.3.7.RELEASE</spring.version>\n <spring-amqp.version>1.7.1.RELEASE</spring-amqp.version>\n <spring-cloud-connectors.version>1.2.3.RELEASE</spring-cloud-connectors.version>\n <spring-batch.version>3.0.7.RELEASE</spring-batch.version>\n <spring-hateoas.version>0.23.0.RELEASE</spring-hateoas.version>\n <spring-kafka.version>1.1.3.RELEASE</spring-kafka.version>\n <spring-restdocs.version>1.1.2.RELEASE</spring-restdocs.version>\n <spring-security.version>4.2.2.RELEASE</spring-security.version>\n<thymeleaf.version>2.1.5.RELEASE</thymeleaf.version>\n```", "```java\n    <dependencyManagement>\n      <dependencies>\n        <dependency>\n          <groupId>org.springframework.boot</groupId>\n          <artifactId>spring-boot-dependencies</artifactId>\n          <version>${spring-boot.version}</version>\n          <type>pom</type>\n          <scope>import</scope>\n        </dependency>\n      </dependencies>\n    </dependencyManagement>\n```", "```java\n    <dependencyManagement>\n      <dependencies>\n        <dependency>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-framework-bom</artifactId>\n          <version>${org.springframework-version}</version>\n          <type>pom</type>\n          <scope>import</scope>\n        </dependency>\n      </dependencies>\n    </dependencyManagement>\n```", "```java\n    @RunWith(MockitoJUnitRunner.class)\n    public class BusinessServiceMockitoTest {\n      private static final User DUMMY_USER = new User(\"dummy\");\n      @Mock\n      private DataService dataService;\n      @InjectMocks\n      private BusinessService service = new BusinessServiceImpl();\n      @Test\n      public void testCalculateSum() {\n        BDDMockito.given(dataService.retrieveData(\n        Matchers.any(User.class)))\n        .willReturn(Arrays.asList(\n        new Data(10), new Data(15), new Data(25)));\n        long sum = service.calculateSum(DUMMY_USER);\n        assertEquals(10 + 15 + 25, sum);\n       }\n     }\n```", "```java\n    @RunWith(SpringRunner.class)\n    @WebMvcTest(TodoController.class)\n    public class TodoControllerTest {\n      @Autowired\n      private MockMvc mvc;\n      @MockBean\n      private TodoService service;\n      //Tests\n    }\n```", "```java\n    @DataJpaTest\n    @RunWith(SpringRunner.class)\n    public class UserRepositoryTest {\n      @Autowired\n      UserRepository userRepository;\n      @Autowired\n      TestEntityManager entityManager;\n     //Test Methods\n    }\n```", "```java\n    app.profiles.active: production\n```", "```java\n    app.jpa.database: MYSQL\n    app.datasource.url: <<VALUE>>\n    app.datasource.username: <<VALUE>>\n    app.datasource.password: <<VALUE>>\n```", "```java\n    app.jpa.database: H2\n    app.datasource.url=jdbc:h2:mem:mydb\n    app.datasource.username=sa\n    app.datasource.pool-size=30\n```", "```java\n    <dependency>\n      <groupId>mysql</groupId>\n      <artifactId>mysql-connector-java</artifactId>\n      <scope>runtime</scope>\n   </dependency>\n\n   <dependency>\n     <groupId>com.h2database</groupId>\n     <artifactId>h2</artifactId>\n     <scope>test</scope>\n   </dependency>\n```", "```java\n    @ActiveProfiles(\"integration-test\")\n    @RunWith(SpringRunner.class)\n    @SpringBootTest(classes = Application.class, webEnvironment =    \n    SpringBootTest.WebEnvironment.RANDOM_PORT)\n    public class TodoControllerIT {\n      @LocalServerPort\n      private int port;\n      private TestRestTemplate template = new TestRestTemplate();\n      //Tests\n    }\n```", "```java\n    <dependency>\n      <groupId>org.springframework.session</groupId>\n      <artifactId>spring-session-data-redis</artifactId>\n      <type>pom</type>\n    </dependency>\n\n   <dependency>\n     <groupId>io.lettuce</groupId>\n     <artifactId>lettuce-core</artifactId>\n   </dependency>\n```", "```java\n    @EnableRedisHttpSession \n    public class ApplicationConfiguration {\n      @Bean \n      public LettuceConnectionFactory connectionFactory() {\n        return new LettuceConnectionFactory(); \n      } \n   }\n```", "```java\n    public class Initializer \n    extends AbstractHttpSessionApplicationInitializer {\n      public Initializer() {\n        super(ApplicationConfiguration.class); \n      }\n    }\n```", "```java\n    req.getSession().setAttribute(name, value);\n```", "```java\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-cache</artifactId>\n    </dependency>\n```", "```java\n    @Component\n    public class ExampleRepository implements Repository {\n      @Override\n      @Cacheable(\"something-cache-key\")\n      public Something getSomething(String id) {\n          //Other code\n      }\n    }\n```", "```java\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-logging</artifactId>\n    </dependency>\n```", "```java\n    <dependency>\n      <groupId>ch.qos.logback</groupId>\n      <artifactId>logback-classic</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>jcl-over-slf4j</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>jul-to-slf4j</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>log4j-over-slf4j</artifactId>\n    </dependency>\n```", "```java\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter</artifactId>\n      <exclusions>\n        <exclusion>\n          <groupId>org.springframework.boot</groupId>\n          <artifactId>spring-boot-starter-logging</artifactId>\n        </exclusion>\n       </exclusions>\n    </dependency>\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-log4j2</artifactId>\n    </dependency>\n```", "```java\n    <dependency>\n      <groupId>org.apache.logging.log4j</groupId>\n      <artifactId>log4j-slf4j-impl</artifactId>\n    </dependency>\n\n   <dependency>\n     <groupId>org.apache.logging.log4j</groupId>\n     <artifactId>log4j-api</artifactId>\n   </dependency>\n\n   <dependency>\n     <groupId>org.apache.logging.log4j</groupId>\n     <artifactId>log4j-core</artifactId>\n   </dependency>\n\n  <dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>jul-to-slf4j</artifactId>\n  </dependency>\n```", "```java\n   logging.level.org.springframework.web=DEBUG\n   logging.level.org.hibernate=ERROR \n   logging.file=<<PATH_TO_LOG_FILE>>\n```"]