["```java\n@OneToMany(cascade = CascadeType.ALL, mappedBy = \"company\")\nprivate List<Project> projects;\n```", "```java\npackage com.gieman.tttracker.domain;\n\nimport java.io.Serializable;\nimport java.util.List;\nimport javax.persistence.Basic;\nimport javax.persistence.CascadeType;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.NamedQueries;\nimport javax.persistence.NamedQuery;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\n@Entity\n@Table(name = \"ttt_company\")\n@NamedQueries({\n    @NamedQuery(name = \"Company.findAll\", query = \"SELECT c FROM Company c\"),\n    @NamedQuery(name = \"Company.findByIdCompany\", query = \"SELECT c FROM Company c WHERE c.idCompany = :idCompany\"),\n    @NamedQuery(name = \"Company.findByCompanyName\", query = \"SELECT c FROM Company c WHERE c.companyName = :companyName\")})\npublic class Company implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Basic(optional = false)\n    @Column(name = \"id_company\")\n    private Integer idCompany;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 200)\n    @Column(name = \"company_name\")\n    private String companyName;\n    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"company\")\n    private List<Project> projects;\n\n    public Company() {\n    }\n\n    public Company(Integer idCompany) {\n        this.idCompany = idCompany;\n    }\n\n    public Company(Integer idCompany, String companyName) {\n        this.idCompany = idCompany;\n        this.companyName = companyName;\n    }\n\n    public Integer getIdCompany() {\n        return idCompany;\n    }\n\n    public void setIdCompany(Integer idCompany) {\n        this.idCompany = idCompany;\n    }\n\n    public String getCompanyName() {\n        return companyName;\n    }\n\n    public void setCompanyName(String companyName) {\n        this.companyName = companyName;\n    }\n\n    public List<Project> getProjects() {\n        return projects;\n    }\n\n    public void setProjects(List<Project> projects) {\n        this.projects = projects;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 0;\n        hash += (idCompany != null ? idCompany.hashCode() : 0);\n        return hash;\n    }\n\n    @Override\n    public boolean equals(Object object) {\n        if (!(object instanceof Company)) {\n            return false;\n        }\n        Company other = (Company) object;\n        if ((this.idCompany == null && other.idCompany != null) || (this.idCompany != null && !this.idCompany.equals(other.idCompany))) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public String toString() {\n        return \"com.gieman.tttracker.domain.Company[ idCompany=\" + idCompany + \" ]\";\n    }\n\n}\n```", "```java\n@GeneratedValue(generator=\"gen_seq_company\")\n@SequenceGenerator(name=\"gen_seq_company\", sequenceName=\"seq_id_company\")\n```", "```java\npackage com.gieman.tttracker.domain;\n\nimport java.io.Serializable;\nimport java.util.List;\nimport javax.persistence.Basic;\nimport javax.persistence.CascadeType;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.NamedQueries;\nimport javax.persistence.NamedQuery;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\n@Entity\n@Table(name = \"ttt_project\")\n@NamedQueries({\n    @NamedQuery(name = \"Project.findAll\", query = \"SELECT p FROM Project p\"),\n    @NamedQuery(name = \"Project.findByIdProject\", query = \"SELECT p FROM Project p WHERE p.idProject = :idProject\"),\n    @NamedQuery(name = \"Project.findByProjectName\", query = \"SELECT p FROM Project p WHERE p.projectName = :projectName\")})\npublic class Project implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Basic(optional = false)\n    @Column(name = \"id_project\")\n    private Integer idProject;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 200)\n    @Column(name = \"project_name\")\n    private String projectName;\n    @JoinColumn(name = \"id_company\", referencedColumnName = \"id_company\")\n    @ManyToOne(optional = false)\n    private Company company;\n    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"project\")\n    private List<Task> tasks;\n\n    public Project() {\n    }\n    public Project(Integer idProject) {\n        this.idProject = idProject;\n    }\n\n    public Project(Integer idProject, String projectName) {\n        this.idProject = idProject;\n        this.projectName = projectName;\n    }\n\n    public Integer getIdProject() {\n        return idProject;\n    }\n\n    public void setIdProject(Integer idProject) {\n        this.idProject = idProject;\n    }\n\n    public String getProjectName() {\n        return projectName;\n    }\n\n    public void setProjectName(String projectName) {\n        this.projectName = projectName;\n    }\n\n    public Company getCompany() {\n        return company;\n    }\n\n    public void setCompany(Company company) {\n        this.company = company;\n    }\n\n    public List<Task> getTasks() {\n        return tasks;\n    }\n\n    public void setTasks(List<Task> tasks) {\n        this.tasks = tasks;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 0;\n        hash += (idProject != null ? idProject.hashCode() : 0);\n        return hash;\n    }\n\n    @Override\n    public boolean equals(Object object) {\n        if (!(object instanceof Project)) {\n            return false;\n        }\n        Project other = (Project) object;\n        if ((this.idProject == null && other.idProject != null) || (this.idProject != null && !this.idProject.equals(other.idProject))) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public String toString() {\n        return \"com.gieman.tttracker.domain.Project[ idProject=\" + idProject + \" ]\";\n    }\n\n}\n```", "```java\n@JoinColumn(name = \"id_company\", referencedColumnName = \"id_company\")\n```", "```java\n  @OneToMany(cascade = CascadeType.ALL, mappedBy = \"company\")\n  private List<Project> projects;\n```", "```java\n  @JoinColumn(name=\"id_company\", referencedColumnName=\"id_company\")\n  @ManyToOne(optional=false)\n  private Company company;\n```", "```java\n  @OneToMany(cascade = CascadeType.ALL, mappedBy = \"project\")\n  private List<Task> tasks;\n```", "```java\npackage com.gieman.tttracker.domain;\n\nimport java.io.Serializable;\nimport javax.persistence.Basic;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.NamedQueries;\nimport javax.persistence.NamedQuery;\nimport javax.persistence.Table;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\n@Entity\n@Table(name = \"ttt_task\")\n@NamedQueries({\n    @NamedQuery(name = \"Task.findAll\", query = \"SELECT t FROM Task t\"),\n    @NamedQuery(name = \"Task.findByIdTask\", query = \"SELECT t FROM Task t WHERE t.idTask = :idTask\"),\n    @NamedQuery(name = \"Task.findByTaskName\", query = \"SELECT t FROM Task t WHERE t.taskName = :taskName\")})\npublic class Task implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Basic(optional = false)\n    @Column(name = \"id_task\")\n    private Integer idTask;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 200)\n    @Column(name = \"task_name\")\n    private String taskName;\n    @JoinColumn(name = \"id_project\", referencedColumnName = \"id_project\")\n    @ManyToOne(optional = false)\n    private Project project;\n\n    public Task() {\n    }\n\n    public Task(Integer idTask) {\n        this.idTask = idTask;\n    }\n\n    public Task(Integer idTask, String taskName) {\n        this.idTask = idTask;\n        this.taskName = taskName;\n    }\n\n    public Integer getIdTask() {\n        return idTask;\n    }\n\n    public void setIdTask(Integer idTask) {\n        this.idTask = idTask;\n    }\n\n    public String getTaskName() {\n        return taskName;\n    }\n\n    public void setTaskName(String taskName) {\n        this.taskName = taskName;\n    }\n\n    public Project getProject() {\n        return project;\n    }\n\n    public void setProject(Project project) {\n        this.project = project;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 0;\n        hash += (idTask != null ? idTask.hashCode() : 0);\n        return hash;\n    }\n\n    @Override\n    public boolean equals(Object object) {\n        if (!(object instanceof Task)) {\n            return false;\n        }\n        Task other = (Task) object;\n        if ((this.idTask == null && other.idTask != null) || (this.idTask != null && !this.idTask.equals(other.idTask))) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public String toString() {\n        return \"com.gieman.tttracker.domain.Task[ idTask=\" + idTask + \" ]\";\n    }    \n}\n```", "```java\n  @OneToMany(cascade = CascadeType.ALL, mappedBy = \"username\")\n  private List<TaskLog> taskLogList;\n```", "```java\nimport javax.validation.constraints.Pattern;\n```", "```java\npackage com.gieman.tttracker.domain;\n\nimport java.io.Serializable;\nimport javax.persistence.Basic;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.NamedQueries;\nimport javax.persistence.NamedQuery;\nimport javax.persistence.Table;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Pattern;\nimport javax.validation.constraints.Size;\n\n@Entity\n@Table(name = \"ttt_user\")\n@NamedQueries({\n    @NamedQuery(name = \"User.findAll\", query = \"SELECT u FROM User u\"),\n    @NamedQuery(name = \"User.findByUsername\", query = \"SELECT u FROM User u WHERE u.username = :username\"),\n    @NamedQuery(name = \"User.findByFirstName\", query = \"SELECT u FROM User u WHERE u.firstName = :firstName\"),\n    @NamedQuery(name = \"User.findByLastName\", query = \"SELECT u FROM User u WHERE u.lastName = :lastName\"),\n    @NamedQuery(name = \"User.findByEmail\", query = \"SELECT u FROM User u WHERE u.email = :email\"),\n    @NamedQuery(name = \"User.findByPassword\", query = \"SELECT u FROM User u WHERE u.password = :password\"),\n    @NamedQuery(name = \"User.findByAdminRole\", query = \"SELECT u FROM User u WHERE u.adminRole = :adminRole\")})\npublic class User implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 10)\n    @Column(name = \"username\")\n    private String username;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 100)\n    @Column(name = \"first_name\")\n    private String firstName;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 100)\n    @Column(name = \"last_name\")\n    private String lastName;\n    @Pattern(regexp=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\", message=\"Invalid email\")\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 100)\n    @Column(name = \"email\")\n    private String email;\n    @Basic(optional = false)\n    @NotNull\n    @Size(min = 1, max = 100)\n    @Column(name = \"password\")\n    private String password;\n    @Column(name = \"admin_role\")\n    private Character adminRole;\n\n    public User() {\n    }\n\n    public User(String username) {\n        this.username = username;\n    }\n\n    public User(String username, String firstName, String lastName, String email, String password) {\n        this.username = username;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.email = email;\n        this.password = password;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public void setFirstName(String firstName) {\n        this.firstName = firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public void setLastName(String lastName) {\n        this.lastName = lastName;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public Character getAdminRole() {\n        return adminRole;\n    }\n\n    public void setAdminRole(Character adminRole) {\n        this.adminRole = adminRole;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 0;\n        hash += (username != null ? username.hashCode() : 0);\n        return hash;\n    }\n\n    @Override\n    public boolean equals(Object object) {\n         if (!(object instanceof User)) {\n            return false;\n        }\n        User other = (User) object;\n        if ((this.username == null && other.username != null) || (this.username != null && !this.username.equals(other.username))) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public String toString() {\n        return \"com.gieman.tttracker.domain.User[ username=\" + username + \" ]\";\n    }   \n}\n```", "```java\npackage com.tttracker.domain;\n\nimport java.io.Serializable;\nimport java.util.Date;\nimport javax.persistence.Basic;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.NamedQueries;\nimport javax.persistence.NamedQuery;\nimport javax.persistence.Table;\nimport javax.persistence.Temporal;\nimport javax.persistence.TemporalType;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\n@Entity\n@Table(name = \"ttt_task_log\")\n@NamedQueries({\n  @NamedQuery(name = \"TaskLog.findAll\", query = \"SELECT t FROM TaskLog t\"),\n  @NamedQuery(name = \"TaskLog.findByIdTaskLog\", query = \"SELECT t FROM TaskLog t WHERE t.idTaskLog = :idTaskLog\"),\n  @NamedQuery(name = \"TaskLog.findByTaskDescription\", query = \"SELECT t FROM TaskLog t WHERE t.taskDescription = :taskDescription\"),\n  @NamedQuery(name = \"TaskLog.findByTaskLogDate\", query = \"SELECT t FROM TaskLog t WHERE t.taskLogDate = :taskLogDate\"),\n  @NamedQuery(name = \"TaskLog.findByTaskMinutes\", query = \"SELECT t FROM TaskLog t WHERE t.taskMinutes = :taskMinutes\")})\npublic class TaskLog implements Serializable {\n  private static final long serialVersionUID = 1L;\n  @Id\n  @GeneratedValue(strategy = GenerationType.IDENTITY)\n  @Basic(optional = false)\n  @Column(name = \"id_task_log\")\n  private Integer idTaskLog;\n  @Basic(optional = false)\n  @NotNull\n  @Size(min = 1, max = 2000)\n  @Column(name = \"task_description\")\n  private String taskDescription;\n  @Basic(optional = false)\n  @NotNull\n  @Column(name = \"task_log_date\")\n  @Temporal(TemporalType.DATE)\n  private Date taskLogDate;\n  @Basic(optional = false)\n  @NotNull\n  @Column(name = \"task_minutes\")\n  private int taskMinutes;\n  @JoinColumn(name = \"username\", referencedColumnName = \"username\")\n  @ManyToOne(optional = false)\n  private User user;\n  @JoinColumn(name = \"id_task\", referencedColumnName = \"id_task\")\n  @ManyToOne(optional = false)\n  private Task task;\n\n  public TaskLog() {\n  }\n\n  public TaskLog(Integer idTaskLog) {\n    this.idTaskLog = idTaskLog;\n  }\n\n  public TaskLog(Integer idTaskLog, String taskDescription, Date taskLogDate, int taskMinutes) {\n    this.idTaskLog = idTaskLog;\n    this.taskDescription = taskDescription;\n    this.taskLogDate = taskLogDate;\n    this.taskMinutes = taskMinutes;\n  }\n\n  public Integer getIdTaskLog() {\n    return idTaskLog;\n  }\n\n  public void setIdTaskLog(Integer idTaskLog) {\n    this.idTaskLog = idTaskLog;\n  }\n\n  public String getTaskDescription() {\n    return taskDescription;\n  }\n\n  public void setTaskDescription(String taskDescription) {\n    this.taskDescription = taskDescription;\n  }\n\n  public Date getTaskLogDate() {\n    return taskLogDate;\n  }\n\n  public void setTaskLogDate(Date taskLogDate) {\n    this.taskLogDate = taskLogDate;\n  }\n\n  public int getTaskMinutes() {\n    return taskMinutes;\n  }\n\n  public void setTaskMinutes(int taskMinutes) {\n    this.taskMinutes = taskMinutes;\n  }\n\n  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user;\n  }\n\n  public Task getTask() {\n    return task;\n  }\n\n  public void setTask(Task task) {\n    this.task = task;\n  }\n\n  @Override\n  public int hashCode() {\n    int hash = 0;\n    hash += (idTaskLog != null ? idTaskLog.hashCode() : 0);\n    return hash;\n  }\n\n  @Override\n  public boolean equals(Object object) {\n    if (!(object instanceof TaskLog)) {\n      return false;\n    }\n    TaskLog other = (TaskLog) object;\n    if ((this.idTaskLog == null && other.idTaskLog != null) || (this.idTaskLog != null && !this.idTaskLog.equals(other.idTaskLog))) {\n      return false;\n    }\n    return true;\n  }\n\n  @Override\n  public String toString() {\n    return \"com.tttracker.domain.TaskLog[ idTaskLog=\" + idTaskLog + \" ]\";\n  }\n}\n```", "```java\nselect * from ttt_company\n```", "```java\nselect * from ttt_company where company_name like \"G%\"\n```", "```java\nSELECT c FROM Company c\n```", "```java\nSELECT c FROM Company c WHERE c.companyName LIKE 'G%'\n```", "```java\n    SELECT c FROM company c WHERE c.companyName LIKE 'G%'\n    ```", "```java\n    select c from Company c where c.companyName like 'G%'\n    ```", "```java\n@NamedQueries({\n  @NamedQuery(name = \"Company.findAll\", query = \"SELECT c FROM Company c\"),\n  @NamedQuery(name = \"Company.findByIdCompany\", query = \"SELECT c FROM Company c WHERE c.idCompany = :idCompany\"),\n  @NamedQuery(name = \"Company.findByCompanyName\", query = \"SELECT c FROM Company c WHERE c.companyName = :companyName\")}) \n```", "```java\nreturn Objects.equals(this.idCompany, other.idCompany);\n```"]