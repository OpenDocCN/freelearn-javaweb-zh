["```java\n<list>\n<orderItem>\n<name>Burger</name>\n<id>0</id>\n</orderItem>\n<orderItem>\n<name>Pizza</name>\n<id>1</id>\n</orderItem>\n<orderItem>\n<name>Sushi</name><id>2</id>\n</orderItem>\n<orderItem>\n<name>Salad</name>\n<id>3</id>\n</orderItem>\n</list> \n\n```", "```java\n@RequestMapping( value=\"/orderItem/{cayegoryId}\", method=RequestMethod.GET )\npublic ModelAndView loadOrderItems(@PathVariable String cayegoryId)\n{...}\n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\n    mvn clean package \n\n    ```", "```java\n    .... Created POST request for \"http://localhost:8080/LiveRestaurant/order/1\"\n    .....Setting request Accept header to [application/xml, text/xml, application/*+xml]\n    .... POST request for \"http://localhost:8080/LiveRestaurant/order/1\" resulted in 200 (OK)\n    .....Reading [com.packtpub.liverestaurant.domain.Order] as \"application/xml;charset=ISO-8859-1\"\n    .....\n    .....Created GET request for \"http://localhost:8080/LiveRestaurant/orderItems\"\n    .....Setting request Accept header to [application/xml, text/xml, application/*+xml]\n    .....GET request for \"http://localhost:8080/LiveRestaurant/orderItems\" resulted in 200 (OK) \n\n    ```", "```java\n<list>\n<orderItem>\n<name>Burger</name>\n<id>0</id>\n</orderItem>\n<orderItem>\n<name>Pizza</name>\n<id>1</id>\n</orderItem>\n<orderItem>\n<name>Sushi</name><id>2</id>\n</orderItem>\n<orderItem>\n<name>Salad</name>\n<id>3</id>\n</orderItem>\n</list> \n\n```", "```java\n<servlet>\n<servlet-name>order</servlet-name>\n<servlet-class>\norg.springframework.web.servlet.DispatcherServlet\n</servlet-class>\n<load-on-startup>1</load-on-startup>\n</servlet>\n<servlet-mapping>\n<servlet-name>order</servlet-name>\n<url-pattern>/*</url-pattern>\n</servlet-mapping>\n\n```", "```java\n<context:component-scan base-package= \"com.packtpub.liverestaurant.orderservice\" />\n<bean class= \"org.springframework.web.servlet.view.BeanNameViewResolver\" />\n<bean id=\"orderXmlView\" class= \"org.springframework.web.servlet.view.xml.MarshallingView\">\n...\n</bean>\n\n```", "```java\n@RequestMapping(value = \"/order/{orderId}\", method = RequestMethod.POST)\npublic ModelAndView placeOrder(@PathVariable String orderId) {..}\n\n```", "```java\nOrder order = orderService.placeOrder(orderId);\nModelAndView mav = new ModelAndView(\"orderXmlView\", BindingResult.MODEL_KEY_PREFIX + \"order\", order);\nreturn mav;\n\n```", "```java\n<bean id=\"orderXmlView\" class= \"org.springframework.web.servlet.view.xml.MarshallingView\">\n<constructor-arg>\n<bean class=\"org.springframework.oxm.xstream.XStreamMarshaller\">\n<property name=\"autodetectAnnotations\" value=\"true\"/>\n</bean>\n</constructor-arg>\n</bean>\n\n```", "```java\n@RequestMapping(value = \"/orderItems\", method = RequestMethod.GET)\npublic ModelAndView loadOrderItems() {\nList<OrderItem> orderItems = orderService.listOrderItems();\nModelAndView modelAndView = new ModelAndView(\"orderXmlView\", BindingResult.MODEL_KEY_PREFIX + \"orderItem\", orderItems);\nreturn modelAndView;\n}\n\n```", "```java\n<context:component-scan base-package= \"com.packtpub.liverestaurant.orderservice\" />\n<bean id=\"xStreamMarshaller\" class= \"org.springframework.oxm.xstream.XStreamMarshaller\"/>\n<bean class=\"org.springframework. web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping\" />\n<bean class=\"org.springframework. web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">\n<property name=\"messageConverters\">\n<list>\n<ref bean=\"marshallingConverter\" />\n<ref bean=\"jsonConverter\" />\n<ref bean=\"atomConverter\" />\n</list>\n</property>\n</bean>\n<bean id=\"marshallingConverter\" class=\"org.springframework. http.converter.xml.MarshallingHttpMessageConverter\">\n<constructor-arg>\n<bean class=\"org.springframework.oxm.xstream.XStreamMarshaller\">\n<property name=\"autodetectAnnotations\" value=\"true\"/>\n</bean>\n</constructor-arg>\n<property name=\"supportedMediaTypes\" value=\"application/xml\"/>\n</bean>\n<bean id=\"jsonConverter\" class=\"org.springframework. http.converter.json.MappingJacksonHttpMessageConverter\">\n<property name=\"supportedMediaTypes\" value=\"application/json\" />\n</bean>\n<bean id=\"atomConverter\"class=\"org.springframework. http.converter.feed.AtomFeedHttpMessageConverter\">\n<property name=\"supportedMediaTypes\" value=\"application/atom+xml\" />\n</bean>\n\n```", "```java\n@RequestMapping(method=RequestMethod.POST, value=\"/orderJson/{orderId}\", headers=\"Accept=application/json\")\npublic @ResponseBody Order placeOrderJson(@PathVariable String orderId) {\nOrder order=orderService.placeOrder(orderId);\nreturn order;\n}\n\n```", "```java\n{\"message\":\"Order Pizza has been placed\",\"ref\":\"Ref:1\",\"orderItemId\":\"1\"} \n\n```", "```java\n@RequestMapping(method=RequestMethod.GET, value=\"/orderItemsFeed\", headers=\"Accept=application/atom+xml\")\npublic @ResponseBody Feed loadOrderItemsAtom() {\nFeed feed = null;\ntry {\nfeed= getOrderItemsFeed(orderService.listOrderItems());\n} catch (Exception e) {\nthrow new RuntimeException(e);\n}\nreturn feed;\n}\n\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<feed >\n<title>OrderItems Atom Feed</title>\n<entry>\n<title>Burger</title>\n<id>0</id>\n<content type=\"xml\">\n&lt;com.packtpub.liverestaurant.domain.OrderItem&gt;&lt;name&gt; Burger&lt;/name&gt;&lt;id&gt;0&lt;/id&gt;&lt;/com.packtpub. liverestaurant.domain.OrderItem&gt;\n</content>\n</entry>\n<entry>\n<title>Pizza</title>\n<id>1</id>\n<content type=\"xml\">&lt;com.packtpub.liverestaurant.domain. OrderItem&gt;&lt;name&gt;Pizza&lt;/name&gt;&lt;id&gt;1&lt; /id&gt;&lt;/com.packtpub.liverestaurant.domain.OrderItem&gt;\n</content>\n</entry>\n...\n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\n....\n.. Created GET request for \"http://localhost:8080/LiveRestaurant/orderItems\"\n.. Setting request Accept header to [application/xml, text/xml, application/*+xml, application/json]\n.. GET request for \"http://localhost:8080/LiveRestaurant/orderItems\" resulted in 200 (OK)\n.. Reading [java.util.List] as \"application/xml\" using ....\n.. Created POST request for \"http://localhost:8080/LiveRestaurant/orderJson/1\"\n.. Setting request Accept header to [application/xml, text/xml, application/*+xml, application/json]\n.. POST request for \"http://localhost:8080/LiveRestaurant/orderJson/1\" resulted in 200 (OK)\n.. Reading [com.packtpub.liverestaurant.domain.Order] as \"application/xml\" using ...\n...Created GET request for \"http://localhost:8080/LiveRestaurant/orderItemsFeed\"\n.. Setting request Accept header to [application/xml, text/xml, application/*+xml, application/json, application/atom+xml]\n.. GET request for \"http://localhost:8080/LiveRestaurant/orderItemsFeed\" resulted in 200 (OK)\n.. Reading [com.sun.syndication.feed.atom.Feed] as \"application/xml\" using ... \n\n```", "```java\n......\n<bean id=\"restTemplate\" class=\"org.springframework.web.client.RestTemplate\">\n<property name=\"messageConverters\">\n<list>\n<ref bean=\"xmlMarshallingHttpMessageConverter\" />\n<ref bean=\"jsonConverter\" />\n<ref bean=\"atomConverter\" />\n</list>\n</property>\n</bean>\n<bean id=\"xmlMarshallingHttpMessageConverter\" class=\"org.springframework. http.converter.xml.MarshallingHttpMessageConverter\">\n<constructor-arg>\n<ref bean=\"xStreamMarshaller\" />\n</constructor-arg>\n</bean>\n<bean id=\"xStreamMarshaller\" class=\"org.springframework.oxm.xstream.XStreamMarshaller\">\n<property name=\"annotatedClasses\">\n<list>\n<value>com.packtpub.liverestaurant.domain.Order</value>\n<value>com.packtpub.liverestaurant.domain.OrderItem</value>\n</list>\n</property>\n</bean>\n<bean id=\"atomConverter\" class=\"org.springframework. http.converter.feed.AtomFeedHttpMessageConverter\">\n<property name=\"supportedMediaTypes\" value=\"application/atom+xml\" />\n</bean>\n<bean id=\"jsonConverter\" class=\"org.springframework. http.converter.json.MappingJacksonHttpMessageConverter\">\n<property name=\"supportedMediaTypes\" value=\"application/json\" />\n</bean>\n\n```", "```java\nprotected RestTemplate restTemplate;\nprivate final static String serviceUrl = \"http://localhost:8080/LiveRestaurant/\";\n@SuppressWarnings(\"unchecked\")\npublic List<OrderItem> loadOrderItemsXML() {\nHttpEntity<String> entity = getHttpEntity(MediaType.APPLICATION_XML);\nResponseEntity<List> response = restTemplate.exchange(serviceUrl + \"orderItems\", HttpMethod.GET, entity, List.class);\nreturn response.getBody();\n}\n.....\n...\npublic String loadOrderItemsAtom() {\nHttpEntity<String> httpEntity = getHttpEntity(MediaType.APPLICATION_ATOM_XML);\nString outputStr = null;\nResponseEntity<Feed> responseEntity = restTemplate.exchange(serviceUrl + \"orderItemsFeed\", HttpMethod.GET, httpEntity, Feed.class);\nWireFeed wireFeed = responseEntity.getBody();\nWireFeedOutput wireFeedOutput = new WireFeedOutput();\ntry {\noutputStr = wireFeedOutput.outputString(wireFeed);\n} catch (Exception e) {\nthrow new RuntimeException(e);\n}\nreturn outputStr;\n}\nprivate HttpEntity<String> getHttpEntity(MediaType mediaType) {\nHttpHeaders httpHeaders = new HttpHeaders();\nhttpHeaders.setContentType(mediaType);\nHttpEntity<String> httpEntity = new HttpEntity<String>(httpHeaders);\nreturn httpEntity;\n}\n\n```"]