["```java\n<xwss:SecurityConfiguration ...>\n<xwss:RequireTimestamp .../>\n<xwss:RequireUsernameToken ...../>\n........\n</xwss:SecurityConfiguration>\n\n```", "```java\n<sws:interceptors>\n<bean\nclass=\"...XwsSecurityInterceptor\">\n<property name=\"policyConfiguration\" value=\"/WEB-INF/securityPolicy.xml\" />\n<property name=\"policyConfiguration\" value=\"/WEB-INF/securityPolicy.xml\" />\n<property name=\"callbackHandlers\">\n<list>\n<ref bean=\"callbackHandler1\" />\n<ref bean=\"callbackHandler2\" />\n..............\n</list>\n</property>\n</bean>\n</sws:interceptors>\n<bean id=\"callbackHandler1\"\nclass=\".....SimplePasswordValidationCallbackHandler\">\n<property name=\"users\">\n<props>\n<prop key=\"admin\">secret</prop>\n<prop key=\"clinetUser\">pass</prop>\n</props>\n</property>\n</bean>\n.........\n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nINFO: ==== Sending Message Start ====\n<SOAP-ENV:Envelope ...\">\n<SOAP-ENV:Header>\n<wsse:Security ..>\n<wsu:Timestamp ...>\n<wsu:Created>2011-11-06T07:19:16.225Z</wsu:Created>\n<wsu:Expires>2011-11-06T07:24:16.225Z</wsu:Expires>\n</wsu:Timestamp>\n<wsse:UsernameToken .....>\n<wsse:Username>clinetUser</wsse:Username>\n<wsse:Password ...#PasswordText\">****</wsse:Password>\n<wsse:Nonce ..#Base64Binary\">...</wsse:Nonce>\n<wsu:Created>2011-11-06T07:19:16.272Z</wsu:Created>\n</wsse:UsernameToken>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderRequest >\n.....\n.......\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\n.....\nINFO: ==== Received Message Start ====\n......\n<SOAP-ENV:Envelope....\">\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse .....>\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nNov 6, 2011 12:19:25 PM com.sun.xml.wss.impl.filter.DumpFilter process\nINFO: ==== Sending Message Start ====\n..\n<SOAP-ENV:Envelope .../\">\n<SOAP-ENV:Header>\n<wsse:Security ...>\n<wsu:Timestamp ..>\n<wsu:Created>2011-11-06T08:19:25.515Z</wsu:Created>\n<wsu:Expires>2011-11-06T08:24:25.515Z</wsu:Expires>\n</wsu:Timestamp>\n<wsse:UsernameToken...>\n<wsse:Username>clinetUser</wsse:Username>\n<wsse:Password ...#PasswordDigest\">****</wsse:Password>\n<wsse:Nonce ...#Base64Binary\">...</wsse:Nonce>\n<wsu:Created>2011-11-06T08:19:25.562Z</wsu:Created>\n</wsse:UsernameToken>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderRequest..\">\n......\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\n........\nINFO: ==== Received Message Start ====\n<?xml version=\"1.0\" ...>\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse ...>\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n<sws:interceptors>\n...\n<bean class=\"org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor\">\n<property name=\"policyConfiguration\" value=\"/WEB-INF/securityPolicy.xml\" />\n<property name=\"callbackHandlers\">\n<list>\n<ref bean=\"callbackHandler\" />\n</list>\n</property>\n</bean>\n</sws:interceptors>\n<bean id=\"callbackHandler\"\nclass=\"org.springframework.ws.soap.security.xwss.callback.SimplePasswordValidationCallbackHandler\">\n<property name=\"users\">\n<props>\n<prop key=\"admin\">secret</prop>\n<prop key=\"clinetUser\">pass</prop>\n</props>\n</property> \n</bean>\n\n```", "```java\n<xwss:SecurityConfiguration dumpMessages=\"true\" >\n<xwss:RequireTimestamp maxClockSkew=\"60\" timestampFreshnessLimit=\"300\"/>\n<xwss:RequireUsernameToken passwordDigestRequired=\"false\" nonceRequired=\"true\"/>\n</xwss:SecurityConfiguration>\n\n```", "```java\n<bean id=\"webServiceTemplate\" class=\"org.springframework.ws.client.core.WebServiceTemplate\">\n....\n<property name=\"interceptors\">\n<list>\n<ref local=\"xwsSecurityInterceptor\" />\n</list>\n</property>\n</bean>\n<bean id=\"xwsSecurityInterceptor\"\nclass=\"org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor\">\n<property name=\"policyConfiguration\" value=\"/securityPolicy.xml\"/>\n<property name=\"callbackHandlers\">\n<list>\n<ref bean=\"callbackHandler\"/>\n</list>\n</property>\n</bean>\n<bean id=\"callbackHandler\" class=\"org.springframework.ws.soap.security.xwss.callback.SimplePasswordValidationCallbackHandler\"/>\n\n```", "```java\n<xwss:SecurityConfiguration dumpMessages=\"true\" >\n<xwss:Timestamp />\n<xwss:UsernameToken name=\"clinetUser\" password=\"pass\" digestPassword=\"false\" useNonce=\"true\"/> ...\n</xwss:SecurityConfiguration>\n\n```", "```java\n<wsse:UsernameToken ....>\n<wsse:Username>clinetUser</wsse:Username>\n<wsse:Password ..>****</wsse:Password>\n...\n</wsse:UsernameToken> \n\n```", "```java\n<wsse:UsernameToken ....>\n<wsse:Username>clinetUser</wsse:Username>\n<wsse:Password ...#PasswordDigest\">****</wsse:Password>\n...\n</wsse:UsernameToken> \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nNov 6, 2011 1:42:37 PM com.sun.xml.wss.impl.filter.DumpFilter process\nINFO: ==== Sending Message Start ====\n...\n<SOAP-ENV:Envelope ....>\n<SOAP-ENV:Header>\n<wsse:Security ...>\n<wsu:Timestamp....>\n<wsu:Created>2011-11-06T09:42:37.391Z</wsu:Created>\n<wsu:Expires>2011-11-06T09:47:37.391Z</wsu:Expires>\n</wsu:Timestamp>\n<wsse:UsernameToken ...>\n<wsse:Username>clinetUser</wsse:Username>\n<wsse:Password ...#PasswordText\">****</wsse:Password>\n<wsse:Nonce ...#Base64Binary\">...</wsse:Nonce>\n<wsu:Created>2011-11-06T09:42:37.442Z</wsu:Created>\n</wsse:UsernameToken>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderRequest ...>\n......\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\nINFO: ==== Received Message Start ====\n<SOAP-ENV:Envelope ...\">\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse ....\">\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nNov 6, 2011 2:04:37 PM com.sun.xml.wss.impl.filter.DumpFilter process\nINFO: ==== Sending Message Start ====\n...\n<SOAP-ENV:Envelope ...>\n<SOAP-ENV:Header>\n<wsse:Security ...>\n<wsu:Timestamp ...>\n<wsu:Created>2011-11-06T10:04:36.622Z</wsu:Created>\n<wsu:Expires>2011-11-06T10:09:36.622Z</wsu:Expires>\n</wsu:Timestamp>\n<wsse:UsernameToken...>\n<wsse:Username>clinetUser</wsse:Username>\n<wsse:Password #PasswordDigest\">****</wsse:Password>\n<wsse:Nonce #Base64Binary\">...</wsse:Nonce>\n<wsu:Created>2011-11-06T10:04:36.683Z</wsu:Created>\n</wsse:UsernameToken>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderRequest >\n......\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\nNov 6, 2011 2:04:37 PM com.sun.xml.wss.impl.filter.DumpFilter process\nINFO: ==== Received Message Start ====\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse...\">\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n<sws:interceptors>\n<bean\n....\n<bean class=\"org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor\">\n<property name=\"policyConfiguration\" value=\"/WEB-INF/securityPolicy.xml\"/>\n<property name=\"callbackHandlers\">\n<list>\n<ref bean=\"springSecurityHandler\"/>\n</list>\n</property>\n</bean>\n</sws:interceptors>\n<bean id=\"springSecurityHandler\"\nclass=\"org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandler\">\n<property name=\"authenticationManager\" ref=\"authenticationManager\"/>\n</bean>\n....\n\n```", "```java\n<bean id=\"springSecurityHandler\"\nclass=\"org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandler\">\n<property name=\"userDetailsService\" ref=\"userDetailsService\"/>\n</bean>\n\n```", "```java\npublic class MyUserDetailService implements UserDetailsService {\n@Override\npublic UserDetails loadUserByUsername(String username)\nthrows UsernameNotFoundException, DataAccessException {\nreturn getUserDataFromDao(username);\n}\nprivate MyUserDetail getUserDataFromDao(String username) {\n/**\n*Real scenario: find user data from a DAO layer by userName,\n* if this user name found, populate MyUserDetail with its data(username, password,Role, ....).\n*/\nMyUserDetail mydetail=new MyUserDetail(username,\"pass\",true,true,true,true);\nmydetail.getAuthorities().add(new GrantedAuthorityImpl(\"ROLE_GENERAL_OPERATOR\"));\nreturn mydetail;\n}\n\n```", "```java\npublic class MyUserDetail implements UserDetails {\nprivate String password;\nprivate String userName;\nprivate boolean isAccountNonExpired;\nprivate boolean isAccountNonLocked;\nprivate boolean isCredentialsNonExpired;\nprivate boolean isEnabled;\npublic static Collection<GrantedAuthority> authority =\nnew ArrayList<GrantedAuthority>();\npublic MyUserDetail( String userName, String password,boolean isAccountNonExpired, boolean isAccountNonlocked,boolean isCredentialsNonExpired, boolean isEnabled){\nthis.userName=userName;\nthis.password=password;\nthis.isAccountNonExpired=isAccountNonExpired;\nthis.isAccountNonLocked=isAccountNonlocked;\nthis.isCredentialsNonExpired=isCredentialsNonExpired;\nthis.isEnabled=isEnabled;\n}\n@Override\npublic Collection<GrantedAuthority> getAuthorities() {\nreturn authority;\n}\n.....\n}\n\n```", "```java\n    mvn clean package tomcat:run -Djava.security.auth.login.config=\"src/main/resources/jaas.config\" \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nINFO: ==== Sending Message Start ====\n....\n<SOAP-ENV:Envelope ....\">\n<SOAP-ENV:Header>\n<wsse:Security ....>\n<wsu:Timestamp ...>\n<wsu:Created>2011-11-06T11:59:09.712Z</wsu:Created>\n<wsu:Expires>2011-11-06T12:04:09.712Z</wsu:Expires>\n</wsu:Timestamp>\n<wsse:UsernameToken ...>\n<wsse:Username>clinetUser</wsse:Username>\n<wsse:Password ....#PasswordText\">****</wsse:Password>\n<wsse:Nonce ...0#Base64Binary\">...</wsse:Nonce>\n<wsu:Created>2011-11-06T11:59:09.774Z</wsu:Created>\n</wsse:UsernameToken>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderRequest...>\n.....\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\n...\nINFO: ==== Received Message Start ====\n...\n<SOAP-ENV:Envelope ...>\n<SOAP-ENV:Header>\n<wsse:Security ...>\n<wsu:Timestamp ....>\n<wsu:Created>2011-11-06T11:59:11.630Z</wsu:Created>\n<wsu:Expires>2011-11-06T12:04:11.630Z</wsu:Expires>\n</wsu:Timestamp>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse ...>\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n<sws:interceptors>\n.......\n<bean class=\"org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor\">\n<property name=\"policyConfiguration\" value=\"/WEB-INF/securityPolicy.xml\" />\n<property name=\"callbackHandlers\">\n<list>\n<ref bean=\"jaasValidationHandler\" />\n</list>\n</property>\n</bean>\n</sws:interceptors>\n<bean id=\"jaasValidationHandler\" class=\"org.springframework.ws.soap.security.xwss.callback.jaas.JaasPlainTextPasswordValidationCallbackHandler\">\n<property name=\"loginContextName\" value=\"RdbmsPlainText\" />\n</bean>\n\n```", "```java\nRdbmsPlainText {\ncom.packtpub.liverestaurant.service.security.RdbmsPlainTextLoginModule Required;\n};\n\n```", "```java\npublic class RdbmsPlainTextLoginModule implements LoginModule {\nprivate Subject subject;\nprivate CallbackHandler callbackHandler;\nprivate boolean success;\nprivate List<RdbmsPrincipal> principals = new ArrayList<RdbmsPrincipal>();\nprivate List<RdbmsCredential> credentials = new ArrayList<RdbmsCredential>();\n@Override\npublic void initialize(Subject subject, CallbackHandler callbackHandler,\nMap<String, ?> sharedState, Map<String, ?> options) {\n.....\n}\n@Override\npublic boolean login() throws LoginException {\n......\n}\nprivate List<String> getAllPermission(String username) {\n......\n}\nprivate boolean authenticate(String username,String password)\n{\n....\n}\npublic boolean commit() throws LoginException {\n.....\n}\n@Override\npublic boolean logout() throws LoginException {\n.....\n}\n}\n\n```", "```java\nkeytool -genseckey -alias 'symmetric' -keyalg 'DESede' -keystore symmetricStore.jks -storepass 'symmetricPassword' -keypass 'keyPassword' -storetype \"JCEKS\" \n\n```", "```java\n    keytool -genkey -alias server -keyalg RSA -keystore serverStore.jks -validity 3653\n    Enter keystore password:serverPassword\n    Re-enter new password:serverPassword\n    What is your first and last name?\n    [Unknown]: MyFirstName MyLastName\n    What is the name of your organizational unit?\n    [Unknown]: Software\n    What is the name of your organization?\n    [Unknown]: MyCompany\n    What is the name of your City or Locality?\n    [Unknown]: MyCity\n    What is the name of your State or Province?\n    [Unknown]: MyProvince\n    What is the two-letter country code for this unit?\n    [Unknown]: ME\n    Is CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME correct?\n    [no]: yes\n    Enter key password for <server>\n    (RETURN if same as keystore password):serPkPassword\n    Re-enter new password:serPkPassword \n\n    ```", "```java\n    keytool -genkey -alias client -keyalg RSA -keystore clientStore.jks -validity 3653\n    Enter keystore password:clientPassword\n    Re-enter new password:clientPassword\n    What is your first and last name?\n    [Unknown]: MyFirstName MyLastName\n    What is the name of your organizational unit?\n    [Unknown]: Software\n    What is the name of your organization?\n    [Unknown]: MyCompany\n    What is the name of your City or Locality?\n    [Unknown]: MyCity\n    What is the name of your State or Province?\n    [Unknown]: MyProvince\n    What is the two-letter country code for this unit?\n    [Unknown]: ME\n    Is CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME correct?\n    [no]: yes\n    Enter key password for <server>\n    (RETURN if same as keystore password):cliPkPassword\n    Re-enter new password:cliPkPassword \n\n    ```", "```java\n    keytool -list -v -keystore serverStore.jks -storepass serverPassword\n    Keystore type: JKS\n    Keystore provider: SUN\n    Your keystore contains 1 entry\n    Alias name: server\n    Creation date: 26-Jul-2011\n    Entry type: PrivateKeyEntry\n    Certificate chain length: 1\n    Certificate[1]:\n    Owner: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Issuer: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Serial number: 4e2ebd0c\n    Valid from: Tue Jul 26 17:11:40 GST 2011 until: Mon Jul 26 17:11:40 GST 2021\n    Certificate fingerprints:\n    MD5: 9E:DF:5E:18:F5:F6:52:4A:B6:9F:67:04:39:C9:57:66\n    SHA1: C5:0B:8C:E6:B6:02:BD:38:56:CD:BB:50:CC:C6:BA:74:86:27:6C:C7\n    Signature algorithm name: SHA1withRSA\n    Version: 3 \n\n    ```", "```java\n    keytool -export -file clientStore.cert -keystore clientStore.jks -storepass clientPassword -alias client\n    keytool -export -file serverStore.cert -keystore serverStore.jks -storepass serverPassword -alias server \n\n    ```", "```java\n    keytool -import -file clientStore.cert -keystore serverStore.jks -storepass serverPassword -alias client\n    Owner: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Issuer: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Serial number: 4e2ebf1e\n    Valid from: Tue Jul 26 17:20:30 GST 2011 until: Mon Jul 26 17:20:30 GST 2021\n    Certificate fingerprints:\n    MD5: FD:BE:98:72:F0:C8:50:D5:4B:10:B0:80:3F:D4:43:E8\n    SHA1: 91:FB:9D:1B:69:E9:5F:0B:97:8C:E2:FE:49:0E:D8:CD:25:FB:D8:18\n    Signature algorithm name: SHA1withRSA\n    Version: 3\n    Trust this certificate? [no]: yes\n    Certificate was added to keystore \n\n    ```", "```java\n    keytool -import -file serverStore.cert -keystore clientStore.jks -storepass clientPassword -alias server\n    Owner: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Issuer: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Serial number: 4e2ebf1e\n    Valid from: Tue Jul 26 17:20:30 GST 2011 until: Mon Jul 26 17:20:30 GST 2021\n    Certificate fingerprints:\n    MD5: FD:BE:98:72:F0:C8:50:D5:4B:10:B0:80:3F:D4:43:E8\n    SHA1: 91:FB:9D:1B:69:E9:5F:0B:97:8C:E2:FE:49:0E:D8:CD:25:FB:D8:18\n    Signature algorithm name: SHA1withRSA\n    Version: 3\n    Trust this certificate? [no]: yes\n    Certificate was added to keystore \n\n    ```", "```java\n    keytool -list -v -keystore serverStore.jks -storepass serverPassword\n    Keystore type: JKS\n    Keystore provider: SUN\n    Your keystore contains 2 entries\n    Alias name: client\n    Creation date: 26-Jul-2011\n    Entry type: trustedCertEntry\n    Owner: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Issuer: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Serial number: 4e2ebf1e\n    Valid from: Tue Jul 26 17:20:30 GST 2011 until: Mon Jul 26 17:20:30 GST 2021\n    Certificate fingerprints:\n    MD5: FD:BE:98:72:F0:C8:50:D5:4B:10:B0:80:3F:D4:43:E8\n    SHA1: 91:FB:9D:1B:69:E9:5F:0B:97:8C:E2:FE:49:0E:D8:CD:25:FB:D8:18\n    Signature algorithm name: SHA1withRSA\n    Version: 3\n    *******************************************\n    *******************************************\n    Alias name: server\n    Creation date: 26-Jul-2011\n    Entry type: PrivateKeyEntry\n    Certificate chain length: 1\n    Certificate[1]:\n    Owner: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Issuer: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\n    Serial number: 4e2ebd0c\n    Valid from: Tue Jul 26 17:11:40 GST 2011 until: Mon Jul 26 17:11:40 GST 2021\n    Certificate fingerprints:\n    MD5: 9E:DF:5E:18:F5:F6:52:4A:B6:9F:67:04:39:C9:57:66\n    SHA1: C5:0B:8C:E6:B6:02:BD:38:56:CD:BB:50:CC:C6:BA:74:86:27:6C:C7\n    Signature algorithm name: SHA1withRSA\n    Version: 3\n    *******************************************\n    ******************************************* \n\n    ```", "```java\nkeytool -list -v -keystore clientStore.jks -storepass clientPassword\nKeystore type: JKS\nKeystore provider: SUN\nYour keystore contains 2 entries\nAlias name: client\nCreation date: 26-Jul-2011\nEntry type: PrivateKeyEntry\nCertificate chain length: 1\nCertificate[1]:\nOwner: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\nIssuer: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\nSerial number: 4e2ebf1e\nValid from: Tue Jul 26 17:20:30 GST 2011 until: Mon Jul 26 17:20:30 GST 2021\nCertificate fingerprints:\nMD5: FD:BE:98:72:F0:C8:50:D5:4B:10:B0:80:3F:D4:43:E8\nSHA1: 91:FB:9D:1B:69:E9:5F:0B:97:8C:E2:FE:49:0E:D8:CD:25:FB:D8:18\nSignature algorithm name: SHA1withRSA\nVersion: 3\n*******************************************\n******************************************\nAlias name: server\nCreation date: 26-Jul-2011\nEntry type: trustedCertEntry\nOwner: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\nIssuer: CN=MyFirstName MyLastName, OU=Software, O=MyCompany, L=MyCity, ST=MyProvince, C=ME\nSerial number: 4e2ebd0c\nValid from: Tue Jul 26 17:11:40 GST 2011 until: Mon Jul 26 17:11:40 GST 2021\nCertificate fingerprints:\nMD5: 9E:DF:5E:18:F5:F6:52:4A:B6:9F:67:04:39:C9:57:66\nSHA1: C5:0B:8C:E6:B6:02:BD:38:56:CD:BB:50:CC:C6:BA:74:86:27:6C:C7\nSignature algorithm name: SHA1withRSA\nVersion: 3\n*******************************************\n******************************************* \n\n```", "```java\nkeytool -genseckey -alias 'symmetric' -keyalg 'DESede' -keystore symmetricStore.jks -storepass 'symmetricPassword' -keypass 'keyPassword' -storetype \"JCEKS\" \n\n```", "```java\nkeytool -genkey -alias aliasName -keyalg RSA -keystore keyStoreFileName.jks -validity 3653 \n\n```", "```java\nkeytool -export -file clientStore.cert -keystore clientStore.jks -storepass clientPassword -alias client \n\n```", "```java\nkeytool -import -file clientStore.cert -keystore serverStore.jks -storepass serverPassword -alias client\n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nINFO: ==== Sending Message Start ====\n....\n<SOAP-ENV:Envelope.....>\n<SOAP-ENV:Header>\n<wsse:Security ....>\n...\n<ds:Signature ....>\n<ds:SignedInfo>\n.....\n</ds:SignedInfo>\n<ds:SignatureValue>....</ds:SignatureValue>\n<ds:KeyInfo>\n<wsse:SecurityTokenReference .........>\n<wsse:Reference ..../>\n</wsse:SecurityTokenReference>\n</ds:KeyInfo>\n</ds:Signature>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body....>\n<tns:placeOrderRequest ...>\n......\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====....\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse ....>\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n<xwss:RequireSignature requireTimestamp=\"false\" />\n</xwss:SecurityConfiguration>\n\n```", "```java\n<xwss:Sign includeTimestamp=\"false\">\n</xwss:Sign>\n\n```", "```java\n<bean id=\"keyStore\" class=\"org.springframework.ws.soap.security.support.KeyStoreFactoryBean\">\n<property name=\"password\" value=\"clientPassword\" />\n<property name=\"location\" value=\"/clientStore.jks\" />\n</bean>\n<bean id=\"keyStoreHandler\" class=\"org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler\">\n<property name=\"keyStore\" ref=\"keyStore\" />\n<property name=\"privateKeyPassword\" value=\"cliPkPassword\" />\n<property name=\"defaultAlias\" value=\"client\" />\n</bean>\n\n```", "```java\n<bean id=\"keyStoreHandler\" class=\"org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler\">\n<property name=\"trustStore\" ref=\"trustStore\"/>\n</bean>\n<bean id=\"trustStore\" class=\"org.springframework.ws.soap.security.support.KeyStoreFactoryBean\">\n<property name=\"location\" value=\"/WEB-INF/serverStore.jks\" />\n<property name=\"password\" value=\"serverPassword\" />\n</bean>\n\n```", "```java\nINFO: ==== Sending Message Start ====\n<?xml...>\n<SOAP-ENV:Header>\n<wsse:Security ...>\n<wsse:BinarySecurityToken...wss-x509-token-..>.....</wsse:BinarySecurityToken>\n<ds:Signature .....>\n<ds:SignedInfo>\n......\n</ds:SignedInfo>\n<ds:SignatureValue>.....</ds:SignatureValue>\n<ds:KeyInfo>\n<wsse:SecurityTokenReference...>\n<wsse:Reference ...wss-x509-token-profile-1.0.../>\n</wsse:SecurityTokenReference>\n</ds:KeyInfo>\n</ds:Signature>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body ....>\n<tns:placeOrderRequest ...>\n.....\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\nINFO: ==== Received Message Start ====\n<?xml version=\"1.0\" ....>\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n<xwss:X509Token certificateAlias=\"client\" />\n\n```", "```java\n<bean class=\"org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor\">\n<property name=\"policyConfiguration\" value=\"/WEB-INF/securityPolicy.xml\"/>\n<property name=\"secureResponse\" value=\"false\" />\n<property name=\"callbackHandlers\">\n<list>\n<ref bean=\"keyStoreHandler\"/>\n<ref bean=\"springSecurityCertificateHandler\"/>\n</list>\n</property>\n</bean>\n</sws:interceptors>\n<bean id=\"springSecurityCertificateHandler\"\nclass=\"org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandler\">\n<property name=\"authenticationManager\" ref=\"authenticationManager\"/>\n</bean>\n<bean id=\"authenticationManager\"\nclass=\"org.springframework.security.authentication.ProviderManager\">\n<property name=\"providers\">\n<bean class=\"org.springframework.ws.soap.security.x509.X509AuthenticationProvider\">\n<property name=\"x509AuthoritiesPopulator\">\n<bean class=\"org.springframework.ws.soap.security.x509.populator.DaoX509AuthoritiesPopulator\">\n<property name=\"userDetailsService\" ref=\"userDetailsService\"/>\n</bean>\n</property>\n</bean>\n</property>\n</bean>\n<bean id=\"userDetailsService\" class=\"com.packtpub.liverestaurant.service.dao.MyUserDetailService\" />\n\n```", "```java\npublic class MyUserDetailService implements UserDetailsService {\n@Override\npublic UserDetails loadUserByUsername(String username)\nthrows UsernameNotFoundException, DataAccessException {\nreturn findUserDetailFromDAO(username);\n}\nprivate UserDetails findUserDetailFromDAO(String userName)throws UsernameNotFoundException{\nMyUserDetail mydetail=null;\n/**\n*Real scenario: Find user-name from DAO layer, if user found, get data from the DAO and set MyUserDetail otherwise throw UsernameNotFoundException.\n*/\nif(! userName.equals(\"MyFirstName MyLastName\")){\nthrow new UsernameNotFoundException(\"User name not found\");\n}\nmydetail=new MyUserDetail(userName,\"fetchedPassword\",true,true,true,true,new GrantedAuthorityImpl(\"ROLE_GENERAL_OPERATOR\"));\nreturn mydetail;\n}\n}\n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nINFO: ==== Received Message Start ====\n....\n<SOAP-ENV:Envelope ....>\n<SOAP-ENV:Header>\n<wsse:Security ....>\n.......\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<xenc:EncryptedData.....\">\n<xenc:EncryptionMethod ....>\n<ds:KeyInfo ...xmldsig#\">\n<ds:KeyName>symmetric</ds:KeyName>\n</ds:KeyInfo>\n<xenc:CipherData>\n<xenc:CipherValue>\n3esI76ANNDEIZ5RWJt.....\n</xenc:CipherValue>\n</xenc:CipherData>\n</xenc:EncryptedData>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ====\nNov 7, 2011 11:48:46 PM com.sun.xml.wss.impl.filter.DumpFilter process\nINFO: ==== Sending Message Start ====\n<?xml version=\"1.0\" ...\n><SOAP-ENV:Envelope ...>\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ==== \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nINFO: ==== Sending Message Start ====\n...\n<SOAP-ENV:Envelope ....>\n<SOAP-ENV:Header>\n<wsse:Security ...>\n........\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<xenc:EncryptedData....>\n<xenc:EncryptionMethod .../>\n<ds:KeyInfo >\n<wsse:SecurityTokenReference...>\n<wsse:Reference ..../>\n</wsse:SecurityTokenReference>\n</ds:KeyInfo>\n<xenc:CipherData>\n...\n</xenc:CipherValue>\n</xenc:CipherData>\n</xenc:EncryptedData>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\nNov 8, 2011 12:12:11 AM com.sun.xml.wss.impl.filter.DumpFilter process\nINFO: ==== Received Message Start ====\n<SOAP-ENV:Envelope ....>\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nINFO: ==== Sending Message Start ====\n...\n<SOAP-ENV:Envelope ....>\n<SOAP-ENV:Header>\n<wsse:Security ....>\n........\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderRequest ...>\n<xenc:EncryptedData .....>\n..........\n<xenc:CipherData>\n<xenc:CipherValue>NEeTuduV....\n..........\n</xenc:CipherValue>\n</xenc:CipherData>\n</xenc:EncryptedData>\n</tns:placeOrderRequest>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Sending Message End ====\nNov 8, 2011 12:18:39 AM com.sun.xml.wss.impl.filter.DumpFilter process\nINFO: ==== Received Message Start ====\n....\n<SOAP-ENV:Envelope ...>\n<SOAP-ENV:Header/>\n<SOAP-ENV:Body>\n<tns:placeOrderResponse ....>\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\n==== Received Message End ==== \n\n```", "```java\n---server policy file\n<xwss:RequireEncryption>\n<xwss:SymmetricKey keyAlias=\"symmetric\" />\n<xwss:EncryptionTarget type=\"qname\" value=\"{http://schemas.xmlsoap.org/soap/envelope/}Body\" enforce=\"true\"\ncontentOnly=\"true\" />\n</xwss:RequireEncryption>\n---client policy file\n<xwss:Encrypt>\n<xwss:SymmetricKey keyAlias=\"symmetric\" />\n<xwss:Target type=\"qname\">{http://schemas.xmlsoap.org/soap/envelope/}Body\n</xwss:Target>\n</xwss:Encrypt>\n\n```", "```java\n<bean id=\"keyStoreHandler\" class=\"org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler\">\n<property name=\"symmetricStore\" ref=\"symmetricStore\" />\n<property name=\"symmetricKeyPassword\" value=\"keyPassword\" />\n</bean>\n<bean id=\"symmetricStore\"\nclass=\"org.springframework.ws.soap.security.support.KeyStoreFactoryBean\">\n<property name=\"password\" value=\"symmetricPassword\" />\n<property name=\"location\" value=\"/WEB-INF/symmetricStore.jks\" />\n<property name=\"type\" value=\"JCEKS\" />\n</bean>\n\n```", "```java\n---server configuration\n<bean id=\"keyStoreHandler\"\nclass=\"org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler\">\n<property name=\"keyStore\" ref=\"keyStore\" />\n<property name=\"privateKeyPassword\" value=\"serPkPassword\" />\n<property name=\"defaultAlias\" value=\"server\" />\n</bean>\n<bean id=\"keyStore\"\nclass=\"org.springframework.ws.soap.security.support.KeyStoreFactoryBean\">\n<property name=\"location\" value=\"/WEB-INF/serverStore.jks\" />\n<property name=\"password\" value=\"serverPassword\" />\n</bean>\n\n```", "```java\n---client configuration\n<bean id=\"keyStoreHandler\"\nclass=\"org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler\">\n<property name=\"trustStore\" ref=\"trustStore\"/>\n</bean>\n<bean id=\"trustStore\"\nclass=\"org.springframework.ws.soap.security.support.KeyStoreFactoryBean\">\n<property name=\"location\" value=\"/clientStore.jks\" />\n<property name=\"password\" value=\"clientPassword\" />\n</bean>\n\n```", "```java\n<xwss:X509Token certificateAlias=\"server\"/>\n\n```", "```java\n<xwss:Target type=\"qname\">{http://www.packtpub.com/LiveRestaurant/placeOrderService/schema}OrderRequest</xwss:Target>\n\n```"]