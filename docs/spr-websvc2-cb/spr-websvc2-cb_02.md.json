["```java\nmvn eclipse:eclipse -Declipse.projectNameTemplate=\"LiveRestaurant_R-2.1-Client\" \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\n    Received response ....\n    <tns:placeOrderResponse > <tns:refNumber>order-John_Smith_9999</tns:refNumber>\n    </tns:placeOrderResponse>\n    for request...\n    <tns:placeOrderRequest >\n    <tns:order>\n    <tns:refNumber>9999</tns:refNumber>\n    <tns:customer>\n    .......\n    </tns:customer>\n    <tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n    <tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n    <tns:items>\n    <tns:type>Snacks</tns:type>\n    <tns:name>Pitza</tns:name>\n    <tns:quantity>2</tns:quantity>\n    </tns:items>\n    </tns:order>\n    </tns:placeOrderRequest>.... \n\n    ```", "```java\nReceived response ..\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_9999</tns:refNumber>\n</tns:placeOrderResponse>..\n......\n<tns:placeOrderRequest >\n<tns:order>\n<tns:refNumber>9999</tns:refNumber>\n<tns:customer>\n......\n</tns:customer>\n<tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n<tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n<tns:items>\n<tns:type>Snacks</tns:type>\n<tns:name>Pitza</tns:name>\n<tns:quantity>2</tns:quantity>\n</tns:items>\n</tns:order>\n</tns:placeOrderRequest> \n\n```", "```java\njava -classpath com.packtpub.liverestaurant.client.OrderServiceClient \n\n```", "```java\njava -classpath com.packtpub.liverestaurant.client.OrderServiceClientTest \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\n    mvn clean package exec:java \n\n    ```", "```java\n    Received response ....\n    <placeOrderResponse >\n    <refNumber>order-John_Smith_9999</refNumber>\n    </placeOrderResponse>....\n    <tns:placeOrderRequest >\n    <tns:order>\n    <tns:refNumber>9999</tns:refNumber>\n    <tns:customer>\n    .....\n    </tns:customer>\n    <tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n    <tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n    <tns:items>\n    <tns:type>Snacks</tns:type>\n    <tns:name>Pitza</tns:name>\n    <tns:quantity>2</tns:quantity>\n    </tns:items>\n    </tns:order>\n    </tns:placeOrderRequest> \n\n    ```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nReceived response ...\n<placeOrderResponse >\n<refNumber>order-John_Smith_9999</refNumber>\n</placeOrderResponse>...\nfor request ...\n<tns:placeOrderRequest >\n<tns:order>\n<tns:refNumber>9999</tns:refNumber>\n<tns:customer>\n.....\n</tns:customer>\n<tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n<tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n<tns:items>\n<tns:type>Snacks</tns:type>\n<tns:name>Pitza</tns:name>\n<tns:quantity>2</tns:quantity>\n</tns:items>\n</tns:order>\n</tns:placeOrderRequest></SOAP-ENV:Body></SOAP-ENV:Envelope>]\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.702 sec\nResults :\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0 \n\n```", "```java\n<build>\n<finalName>LiveRestaurant_Client</finalName>\n<plugins>\n.......\n</plugin>\n<plugin>\n<groupId>org.codehaus.mojo</groupId>\n<artifactId>exec-maven-plugin</artifactId>\n<version>1.2.1</version>\n<executions>\n<execution>\n<goals>\n<goal>java</goal>\n</goals>\n</execution>\n</executions>\n<configuration>\n<mainClass>com.packtpub.liverestaurant.client.OrderServiceClient</mainClass>\n</configuration>\n</plugin>\n</plugins>\n</build>\n\n```", "```java\njava -classpath com.packtpub.liverestaurant.client.OrderServiceClient\n\n```", "```java\njava -classpath ...;junit.jar.. junit.textui.TestRunner com.packtpub.liverestaurant.client.OrderServiceClientTest ) . \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nReceived response ....\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>...\n<tns:placeOrderRequest >\n<tns:order>\n<tns:refNumber>9999</tns:refNumber>\n<tns:customer>\n......\n</tns:customer>\n<tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n<tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n<tns:items>\n<tns:type>Snacks</tns:type>\n<tns:name>Pitza</tns:name>\n<tns:quantity>2</tns:quantity>\n</tns:items>\n</tns:order>\n</tns:placeOrderRequest>\n.....\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.749 sec\nResults :\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0 \n\n```", "```java\n<bean id=\"messageFactory\" class=\"org.springframework.ws.soap.saaj.SaajSoapMessageFactory\" />\n<bean id=\"webServiceTemplate\" class=\"org.springframework.ws.client.core.WebServiceTemplate\">\n<constructor-arg ref=\"messageFactory\" />\n<property name=\"defaultUri\" value=\"http://localhost:8080/LiveRestaurant/spring-ws/OrderService\" />\n</bean>\n\n```", "```java\nprivate static WebServiceTemplate wsTemplate = null;\nprivate static InputStream isPlace;\nprivate static InputStream isCancel;\n@BeforeClass\npublic static void setUpBeforeClass() throws Exception {\nClassPathXmlApplicationContext appContext = new ClassPathXmlApplicationContext(\"/applicationContext.xml\");\nwsTemplate = (WebServiceTemplate) appContext.getBean(\"webServiceTemplate\");\nisPlace = new OrderServiceClientTest().getClass().getResourceAsStream(\"placeOrderRequest.xml\");\nisCancel = new OrderServiceClientTest().getClass().getResourceAsStream(\"cancelOrderRequest.xml\");\n}\n@Test\npublic final void testPlaceOrderRequest() throws Exception {\nResult result = invokeWS(isPlace);\nAssert.assertTrue(result.toString().indexOf(\"placeOrderResponse\")>0);\n}\n@Test\npublic final void testCancelOrderRequest() throws Exception {\nResult result = invokeWS(isCancel);\nAssert.assertTrue(result.toString().indexOf(\"cancelOrderResponse\")>0);\n}\nprivate static Result invokeWS(InputStream is) {\nStreamSource source = new StreamSource(is);\nStringResult result = new StringResult();\nwsTemplate.sendSourceAndReceiveToResult(source, result);\nreturn result;\n}\n\n```", "```java\nReceived response ..\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>....\n<tns:placeOrderRequest >\n<tns:order>\n<tns:refNumber>9999</tns:refNumber>\n<tns:customer>\n.....\n</tns:customer>\n<tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n<tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n<tns:items>\n<tns:type>Snacks</tns:type>\n<tns:name>Pitza</tns:name>\n<tns:quantity>2</tns:quantity>\n</tns:items>\n</tns:order>\n</tns:placeOrderRequest> \n\n```", "```java\n<bean id=\"webServiceTemplate\" class=\"org.springframework.ws.client.core.WebServiceTemplate\">\n<constructor-arg ref=\"messageFactory\"/>\n<property name=\"messageSender\">\n<bean class=\"org.springframework.ws.transport.jms.JmsMessageSender\">\n<property name=\"connectionFactory\" ref=\"connectionFactory\"/>\n</bean>\n</property>\n<property name=\"defaultUri\" value=\"jms:RequestQueue?deliveryMode=NON_PERSISTENT\"/>\n</bean>\n\n```", "```java\n@Test\npublic void testSendReceive() throws Exception {\nInputStream is = new JmsTransportWebServiceIntegrationTest().getClass().getResourceAsStream(\"placeOrderRequest.xml\");\nStreamSource source = new StreamSource(is);\nStringResult result = new StringResult();\nwebServiceTemplate.sendSourceAndReceiveToResult(source, result);\nXMLAssert.assertXMLEqual(\"Invalid content received\", expectedResponseContent, result.toString());\n}\n\n```", "```java\nReceived response\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>....\n<tns:placeOrderRequest >\n<tns:order>\n<tns:refNumber>9999</tns:refNumber>\n<tns:customer>\n.....\n</tns:customer>\n<tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n<tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n<tns:items>\n<tns:type>Snacks</tns:type>\n<tns:name>Pitza</tns:name>\n<tns:quantity>2</tns:quantity>\n</tns:items>\n</tns:order>\n</tns:placeOrderRequest> \n\n```", "```java\n<bean id=\"webServiceTemplate\" class=\"org.springframework.ws.client.core.WebServiceTemplate\">\n<constructor-arg ref=\"messageFactory\"/>\n<property name=\"messageSender\">\n<bean class=\"org.springframework.ws.transport.mail.MailMessageSender\">\n<property name=\"from\" value=\"client@packtpubtest.com\"/>\n<property name=\"transportUri\" value=\"smtp://smtp.packtpubtest.com\"/>\n<property name=\"storeUri\" value=\"imap://client@packtpubtest.com/INBOX\"/>\n<property name=\"receiveSleepTime\" value=\"1500\"/>\n<property name=\"session\" ref=\"session\"/>\n</bean>\n</property>\n<property name=\"defaultUri\" value=\"mailto:server@packtpubtest.com\"/>\n</bean>\n<bean id=\"session\" class=\"javax.mail.Session\" factory-method=\"getInstance\">\n<constructor-arg>\n<props/>\n</constructor-arg>\n</bean>\n\n```", "```java\n@Test\npublic void testWebServiceOnMailTransport() throws Exception {\nInputStream is = new MailTransportWebServiceIntegrationTest().getClass().getResourceAsStream(\"placeOrderRequest.xml\");\nStreamSource source = new StreamSource(is);\nStringResult result = new StringResult();\nwebServiceTemplate.sendSourceAndReceiveToResult(source, result);\napplicationContext.close();\nXMLAssert.assertXMLEqual(\"Invalid content received\", expectedResponseContent, result.toString());\n}\n\n```", "```java\nReceived response ..\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber>\n</tns:placeOrderResponse>....\n<tns:placeOrderRequest >\n<tns:order>\n<tns:refNumber>9999</tns:refNumber>\n<tns:customer>\n.....\n</tns:customer>\n<tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n<tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n<tns:items>\n<tns:type>Snacks</tns:type>\n<tns:name>Pitza</tns:name>\n<tns:quantity>2</tns:quantity>\n</tns:items>\n</tns:order>\n</tns:placeOrderRequest> \n\n```", "```java\n<bean id=\"webServiceTemplate\" class=\"org.springframework.ws.client.core.WebServiceTemplate\">\n<constructor-arg ref=\"messageFactory\"/>\n<property name=\"messageSender\">\n<bean class=\"org.springframework.ws.transport.xmpp.XmppMessageSender\">\n<property name=\"connection\" ref=\"connection\"/>\n</bean>\n</property>\n<property name=\"defaultUri\" value=\"xmpp:yourUserName@gmail.com\"/>\n</bean>\n\n```", "```java\n@Autowired\nprivate GenericApplicationContext applicationContext;\n@Test\npublic void testWebServiceOnXMPPTransport() throws Exception {\nStringResult result = new StringResult();\nStringSource sc=new StringSource(requestContent);\nwebServiceTemplate.sendSourceAndReceiveToResult(sc, result);\nXMLAssert.assertXMLEqual(\"Invalid content received\", requestContent, result.toString());\napplicationContext.close();\n}\n\n```", "```java\nmvn clean package. \n\n```", "```java\n--Request\n<tns:placeOrderRequest >\n<tns:order>\n<tns:refNumber>9999</tns:refNumber>\n<tns:customer>\n<tns:addressPrimary>\n<tns:doorNo>808</tns:doorNo>\n<tns:building>W8</tns:building>\n<tns:street>St two</tns:street>\n<tns:city>NY</tns:city>\n<tns:country>US</tns:country>\n<tns:phoneMobile>0018884488</tns:phoneMobile>\n<tns:phoneLandLine>0017773366</tns:phoneLandLine>\n<tns:email>d@b.c</tns:email>\n</tns:addressPrimary>\n<tns:addressSecondary>\n<tns:doorNo>409</tns:doorNo>\n<tns:building>W2</tns:building>\n<tns:street>St one</tns:street>\n<tns:city>NY</tns:city>\n<tns:country>US</tns:country>\n<tns:phoneMobile>0018882244</tns:phoneMobile>\n<tns:phoneLandLine>0019991122</tns:phoneLandLine>\n<tns:email>a@b.c</tns:email>\n</tns:addressSecondary>\n<tns:name>\n<tns:fName>John</tns:fName>\n<tns:mName>Paul</tns:mName>\n<tns:lName>Smith</tns:lName>\n</tns:name>\n</tns:customer>\n<tns:dateSubmitted>2008-09-29T05:49:45</tns:dateSubmitted>\n<tns:orderDate>2014-09-19T03:18:33</tns:orderDate>\n<tns:items>\n<tns:type>Snacks</tns:type>\n<tns:name>Pitza</tns:name>\n<tns:quantity>2</tns:quantity>\n</tns:items>\n</tns:order>\n</tns:placeOrderRequest>\n<!--Received response-->\n<tns:placeOrderResponse >\n<tns:refNumber>order-John_Smith_1234</tns:refNumber></tns:placeOrderResponse>\n...Request\n<tns:cancelOrderRequest >\n<tns:refNumber>9999</tns:refNumber>\n</tns:cancelOrderRequest></SOAP-ENV:Body></SOAP-ENV:Envelope>]\n...Received response..\n<tns:cancelOrderResponse >\n<tns:cancelled>true</tns:cancelled></tns:cancelOrderResponse> \n\n```", "```java\n<bean id=\"xpathExpCancel\"\nclass=\"org.springframework.xml.xpath.XPathExpressionFactoryBean\">\n<property name=\"expression\" value=\"/tns:cancelOrderResponse/tns:cancelled\" />\n<property name=\"namespaces\">\n<props>\n<prop key=\"tns\">http://www.packtpub.com/liverestaurant/OrderService/schema</prop>\n</props>\n</property>\n</bean>\n<bean id=\"xpathExpPlace\"\nclass=\"org.springframework.xml.xpath.XPathExpressionFactoryBean\">\n<property name=\"expression\" value=\"/tns:placeOrderResponse/tns:refNumber\" />\n<property name=\"namespaces\">\n<props>\n<prop key=\"tns\">http://www.packtpub.com/liverestaurant/OrderService/schema</prop>\n</props>\n</property>\n</bean>\n\n```", "```java\n@Test\npublic final void testPlaceOrderRequest() {\nDOMResult result=invokeWS(isPlace);\nString message = xpathExpPlace.evaluateAsString(result.getNode());\nAssert.assertTrue(message.contains(\"Smith\"));\n}\n@Test\npublic final void testCancelOrderRequest() {\nDOMResult result= invokeWS(isCancel);\nBoolean cancelled = xpathExpCancel.evaluateAsBoolean(result.getNode());\nAssert.assertTrue(cancelled);\n}\n\n```", "```java\n<SOAP-ENV:Header >\n<wsa:To>server_uri</wsa:To>\n<wsa:Action>action_uri</wsa:Action>\n<wsa:From>client_address </wsa:From>\n<wsa:ReplyTo>client_address</wsa:ReplyTo>\n<wsa:FaultTo>admen_uri </wsa:FaultTo>\n<wsa:MessageID>..</wsa:MessageID>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:placeOrderRequest>....</tns:placeOrderReques>\n</SOAP-ENV:Body></SOAP-ENV:Envelope>] \n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nReceived response [<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"..../\">\n<SOAP-ENV:Header >\n<wsa:To SOAP-ENV:mustUnderstand=\"1\">....</wsa:To><wsa:Action>http://www.packtpub.com/OrderService/CanOrdReqResponse</wsa:Action>\n<wsa:MessageID>....</wsa:MessageID>\n<wsa:RelatesTo>...</wsa:RelatesTo>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<tns:cancelOrderResponse >\n<tns:cancelled>true</tns:cancelled></tns:cancelOrderResponse>\n</SOAP-ENV:Body></SOAP-ENV:Envelope>]\nfor request ...\n<SOAP-ENV:Envelope xmlns:SOAP\n-ENV=\"..\"><SOAP-ENV:Header >\n<wsa:To SOAP-ENV:mustUnderstand=\"1\">http://www.packtpub.com/liverestaurant/OrderService/schema</wsa:To>\n<wsa:To SOAP-ENV:mustUnderstand=\"1\">http://www.packtpub.com/liverestaurant/OrderService/schema</wsa:To>\n<wsa:Action>http://www.packtpub.com/OrderService/CanOrdReq</wsa:Action>\n<wsa:MessageID>..</wsa:MessageID>\n</SOAP-ENV:Header><SOAP-ENV:Body/>\n</SOAP-ENV:Envelope>]\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<tns:cancelOrderResponse >\n<tns:cancelled>true</tns:cancelled></tns:cancelOrderResponse> \n\n```", "```java\n@Test\npublic final void testPlaceOrderRequest() throws URISyntaxException {\ninvokeWS(isPlace,\"http://www.packtpub.com/OrderService/OrdReq\");\n}\n@Test\npublic final void testCancelOrderRequest() throws URISyntaxException {\ninvokeWS(isCancel,\"http://www.packtpub.com/OrderService/CanOrdReq\");\n}\nprivate static Result invokeWS(InputStream is,String action) throws URISyntaxException {\nStreamSource source = new StreamSource(is);\nStringResult result = new StringResult();\nwsTemplate.sendSourceAndReceiveToResult(source, new ActionCallback(new URI(action),new Addressing10(),new URI(\"http://www.packtpub.com/liverestaurant/OrderService/schema\")),\nresult);\nreturn result;\n}\n\n```", "```java\n    mvn clean package tomcat:run \n\n    ```", "```java\nmvn clean package \n\n```", "```java\nReceived response...\n<ns:OrderResponse  message=\"Order Accepted!\"/>...\nfor request ....\n<OrderRequest  message=\"This is a sample Order Message\"/> \n\n```", "```java\nactual request ..\n<ns:OrderRequest >\n<ns:message>This is a sample Order Message</ns:message></ns:OrderRequest>\nactual response = <ns:OrderResponse >\n<ns:message>Order Accepted!</ns:message></ns:OrderResponse> \n\n```", "```java\n. <bean class=\"org.springframework.ws.server.endpoint.mapping.SimpleMethodEndpointMapping\">\n<property name=\"endpoints\">\n<ref bean=\"OrderServiceEndpoint\" />\n</property>\n<property name=\"methodPrefix\" value=\"handle\"></property>\n<property name=\"interceptors\">\n<list>\n<bean\nclass=\"org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor\">\n<property name=\"logRequest\" value=\"true\" />\n<property name=\"logResponse\" value=\"true\" />\n</bean>\n<bean id=\"transformingInterceptor\"\nclass=\"org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptor\">\n<property name=\"requestXslt\" value=\"/WEB-INF/oldRequests.xslt\" />\n<property name=\"responseXslt\" value=\"/WEB-INF/oldResponse.xslt\" />\n</bean>\n</list>\n</property>\n</bean>\n\n```"]