["```java\npackage com.packtpub.aop;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Before;\nimport org.springframework.stereotype.Component;\n@Aspect\n@Component\npublic class TokenRequiredAspect {  \n  @Before(\"execution(* com.packtpub.restapp.HomeController.testAOPExecution())\")\n  public void tokenRequiredWithoutAnnoation() throws Throwable{\n    System.out.println(\"Before tokenRequiredWithExecution\");\n  }\n}\n```", "```java\n    <dependency>\n        <groupId>org.aspectj</groupId>\n        <artifactId>aspectjweaver</artifactId>\n        <version>1.8.13</version>\n    </dependency>\n```", "```java\n  @ResponseBody\n  @RequestMapping(\"/test/aop/with/execution\") \n  public Map<String, Object> testAOPExecution(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Aloha\");\n    return map;\n  }\n```", "```java\nBefore tokenRequiredWithExecution\n```", "```java\npackage com.packtpub.aop;\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\npublic @interface TokenRequired {\n}\n```", "```java\n@Aspect\n@Component\npublic class TokenRequiredAspect {\n  // old method (with execution)  \n  @Before(\"@annotation(tokenRequired)\")\n  public void tokenRequiredWithAnnotation(TokenRequired tokenRequired) throws Throwable{\n    System.out.println(\"Before tokenRequiredWithAnnotation\");\n  } \n}\n```", "```java\n  @ResponseBody\n  @RequestMapping(\"/test/aop/with/annotation\")\n  @TokenRequired\n  public Map<String, Object> testAOPAnnotation(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Aloha\");   \n    return map;\n  }\n```", "```java\nBefore tokenRequiredWithAnnotation\n```", "```java\n@Before(\"@annotation(tokenRequired)\")\npublic void tokenRequiredWithAnnotation(TokenRequired tokenRequired) throws Throwable{   \n       ServletRequestAttributes reqAttributes = (ServletRequestAttributes)RequestContextHolder.currentRequestAttributes();\n       HttpServletRequest request = reqAttributes.getRequest();    \n       // checks for token in request header\n       String tokenInHeader = request.getHeader(\"token\");    \n       if(StringUtils.isEmpty(tokenInHeader)){\n              throw new IllegalArgumentException(\"Empty token\");\n           }    \n       Claims claims = Jwts.parser() .setSigningKey(DatatypeConverter.parseBase64Binary(SecurityServiceImpl.secretKey))\n       .parseClaimsJws(tokenInHeader).getBody();    \n       if(claims == null || claims.getSubject() == null){\n                throw new IllegalArgumentException(\"Token Error : Claim is null\");\n             }    \n       if(!claims.getSubject().equalsIgnoreCase(\"packt\")){\n                throw new IllegalArgumentExceptionception(\"Subject doesn't match in the token\");\n          }\n       }\n```", "```java\n  @ResponseBody\n  @TokenRequired\n  @RequestMapping(value = \"\", method = RequestMethod.DELETE)\n  public Map<String, Object> deleteUser(\n      @RequestParam(value=\"userid\") Integer userid){\n    Map<String, Object> map = new LinkedHashMap<>();   \n    userSevice.deleteUser(userid);   \n    map.put(\"result\", \"deleted\");\n    return map;\n  }\n```", "```java\n{\n   \"timestamp\": 1509949209993,\n   \"status\": 500,\n   \"error\": \"Internal Server Error\",\n   \"exception\": \"java.lang.reflect.UndeclaredThrowableException\",\n   \"message\": \"No message available\",\n   \"path\": \"/user\"\n}\n```", "```java\n{\n    \"result\": \"deleted\"\n} \n```", "```java\n{\n   \"timestamp\": 1509948248281,\n   \"status\": 500,\n   \"error\": \"Internal Server Error\",\n   \"exception\": \"java.lang.IllegalArgumentException\",\n   \"message\": \"JWT String argument cannot be null or empty.\",\n   \"path\": \"/user\"\n}\n```", "```java\n {\n   \"timestamp\": 1509947985415,\n   \"status\": 500,\n   \"error\": \"Internal Server Error\",\n   \"exception\": \"io.jsonwebtoken.ExpiredJwtException\",\n   \"message\": \"JWT expired at 2017-11-06T00:54:22-0500\\. Current time: 2017-11-06T00:59:45-0500\",\n   \"path\": \"/test/aop/with/annotation\"\n} \n```", "```java\nmvn dependency:tree\n```", "```java\n[INFO] | +- org.springframework.boot:spring-boot-starter:jar:1.5.7.RELEASE:compile\n[INFO] | +- org.springframework.boot:spring-boot:jar:1.5.7.RELEASE:compile\n[INFO] | +- org.springframework.boot:spring-boot-autoconfigure:jar:1.5.7.RELEASE:compile\n[INFO] | +- org.springframework.boot:spring-boot-starter-logging:jar:1.5.7.RELEASE:compile\n[INFO] | | +- ch.qos.logback:logback-classic:jar:1.1.11:compile\n[INFO] | | | \\- ch.qos.logback:logback-core:jar:1.1.11:compile\n[INFO] | | +- org.slf4j:jcl-over-slf4j:jar:1.7.25:compile\n[INFO] | | +- org.slf4j:jul-to-slf4j:jar:1.7.25:compile\n[INFO] | | \\- org.slf4j:log4j-over-slf4j:jar:1.7.25:compile\n[INFO] | \\- org.yaml:snakeyaml:jar:1.17:runtime\n[INFO] +- com.fasterxml.jackson.core:jackson-databind:jar:2\n```", "```java\n# spring framework logging \nlogging.level.org.springframework = ERROR\n\n# local application logging\nlogging.level.com.packtpub.restapp = INFO\n```", "```java\nprivate static final Logger _logger = LoggerFactory.getLogger(HomeController.class);\n```", "```java\npackage com.packtpub.restapp;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n// other imports\n@RestController\n@RequestMapping(\"/\")\npublic class HomeController {  \n  private static final Logger _logger = LoggerFactory.getLogger(HomeController.class);  \n  @Autowired\n  SecurityService securityService;  \n  @ResponseBody\n  @RequestMapping(\"\")\n  public Map<String, Object> test() {\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Aloha\");    \n    _logger.trace(\"{test} trace\");\n    _logger.debug(\"{test} debug\");\n    _logger.info(\"{test} info\");\n    _logger.warn(\"{test} warn \");\n    _logger.error(\"{test} error\");    \n    return map;\n  }\n```", "```java\n2018-01-15 16:29:55.951 INFO 17812 --- [nio-8080-exec-1] com.packtpub.restapp.HomeController : {test} info\n2018-01-15 16:29:55.951 WARN 17812 --- [nio-8080-exec-1] com.packtpub.restapp.HomeController : {test} warn \n2018-01-15 16:29:55.951 ERROR 17812 --- [nio-8080-exec-1] com.packtpub.restapp.HomeController : {test} error\n```"]