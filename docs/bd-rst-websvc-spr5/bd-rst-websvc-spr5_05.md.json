["```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.packtpub.restapp</groupId>\n  <artifactId>ticket-management</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n  <name>ticket-management</name>\n  <description>Demo project for Spring Boot</description>\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.5.9.RELEASE</version>\n    <relativePath/> <!-- lookup parent from repository -->\n  </parent>\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n  </properties>\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```", "```java\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.5.9.RELEASE</version>\n    <relativePath/> <!-- lookup parent from repository -->\n  </parent>\n```", "```java\n<dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n      <version>1.5.9.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n      <version>1.5.9.RELEASE</version>\n    </dependency>\n  </dependencies>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.packtpub.restapp</groupId>\n  <artifactId>ticket-management</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n  <name>ticket-management</name>\n  <description>Demo project for Spring Boot</description> \n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n  </properties>\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n      <version>1.5.9.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n      <version>1.5.9.RELEASE</version>\n    </dependency>\n  </dependencies>\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```", "```java\n@SpringBootApplication\npublic class TicketManagementApplication {  \n  public static void main(String[] args) {\n    SpringApplication.run(TicketManagementApplication.class, args);\n  }\n}\n```", "```java\n\n . ____ _ __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __ __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/ ___)| |_)| | | | | || (_| | ) ) ) )\n ' |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot :: (v1.5.7.RELEASE)\n\n2017-11-05 15:49:21.380 INFO 8668 --- [ main] c.p.restapp.TicketManagementApplication : Starting TicketManagementApplication on DESKTOP-6JP2FNB with PID 8668 (C:\\d\\spring-book-sts-space\\ticket-management\\target\\classes started by infoadmin in C:\\d\\spring-book-sts-space\\ticket-management)\n2017-11-05 15:49:21.382 INFO 8668 --- [ main] c.p.restapp.TicketManagementApplication : No active profile set, falling back to default profiles: default\n2017-11-05 15:49:21.421 INFO 8668 --- [ main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ea434c8: startup date [Sun Nov 05 15:49:21 EST 2017]; root of context hierarchy\n2017-11-05 15:49:22.205 INFO 8668 --- [ main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)\n2017-11-05 15:49:22.213 INFO 8668 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]\n...\n..\n\n...\n...\n2017-11-05 15:49:22.834 INFO 8668 --- [ main] o.s.j.e.a.AnnotationMBeanExporter : Registering beans for JMX exposure on startup\n2017-11-05 15:49:22.881 INFO 8668 --- [ main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)\n```", "```java\nWhitelabel Error Page\n\nThis application has no explicit mapping for /error, so you are seeing this as a fallback.\n\nSun Nov {current date}\nThere was an unexpected error (type=Not Found, status=404).\nNo message available\n```", "```java\npackage com.packtpub.restapp;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\nimport org.springframework.web.bind.annotation.RestController;\n@RestController\n@RequestMapping(\"/\")\npublic class HomeController {\n  @ResponseBody\n  @RequestMapping(\"\")\n  public Map<String, Object> test(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Aloha\");    \n    return map;\n  }\n}\n```", "```java\npackage com.packtpub.restapp.ticketmanagement;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.ComponentScan;\n@ComponentScan(\"com.packtpub\")\n@SpringBootApplication\npublic class TicketManagementApplication {\n  public static void main(String[] args) {\n    SpringApplication.run(TicketManagementApplication.class, args);\n  }\n}\n```", "```java\n{\n  result: \"Aloha\"\n}\n```", "```java\npackage com.packtpub.restapp;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.ResponseBody;\nimport org.springframework.web.bind.annotation.RestController;\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {  \n  @ResponseBody\n  @RequestMapping(\"\")\n  public Map<String, Object> getAllUsers(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Get All Users Implementation\");    \n    return map;\n  }  \n  @ResponseBody\n  @RequestMapping(\"/{id}\")\n  public Map<String, Object> getUser(@PathVariable(\"id\") Integer id){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Get User Implementation\");    \n    return map;\n  } \n  @ResponseBody\n  @RequestMapping(value = \"\", method = RequestMethod.POST)\n  public Map<String, Object> createUser(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Create User Implementation\");    \n    return map;\n  }  \n  @ResponseBody\n  @RequestMapping(value = \"\", method = RequestMethod.PUT)\n  public Map<String, Object> updateUser(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Update User Implementation\");    \n    return map;\n  }\n  @ResponseBody\n  @RequestMapping(value = \"\", method = RequestMethod.DELETE)\n  public Map<String, Object> deleteUser(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"Delete User Implementation\");    \n    return map;\n  }\n}\n```", "```java\n{\n  result: \"Get All Users Implementation\"\n}\n```", "```java\npackage com.packtpub.model;\npublic class User {\n  private Integer userid;  \n  private String username;   \n  public User(Integer userid, String username){\n    this.userid = userid;\n    this.username = username;\n  }  \n  // getter and setter methods \n}\n```", "```java\npackage com.packtpub.service;\nimport java.util.List;\nimport com.packtpub.model.User;\npublic interface UserService {\n  List<User> getAllUsers();\n}\n```", "```java\npackage com.packtpub.service;\nimport java.util.LinkedList;\nimport java.util.List;\nimport org.springframework.stereotype.Service;\nimport com.packtpub.model.User;\n@Service\npublic class UserServiceImpl implements UserService {\n  @Override\n  public List<User> getAllUsers() {    \n    return this.users;\n  }  \n  // Dummy users\n  public static List<User> users; \n  public UserServiceImpl() {\n    users = new LinkedList<>();   \n    users.add(new User(100, \"David\"));\n    users.add(new User(101, \"Peter\"));\n    users.add(new User(102, \"John\"));\n  }\n}\n```", "```java\n@Autowired\nUserService userSevice;\n@ResponseBody\n@RequestMapping(\"\")\npublic List<User> getAllUsers(){\n    return userSevice.getAllUsers();\n}\n```", "```java\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nField userSevice in com.packtpub.restapp.UserController required a bean of type 'com.packtpub.service.UserService' that could not be found.\n\nAction:\n\nConsider defining a bean of type 'com.packtpub.service.UserService' in your configuration.\n```", "```java\n@ComponentScan(\"com.packtpub\")\n@SpringBootApplication\npublic class TicketManagementApplication {  \n  public static void main(String[] args) {\n    SpringApplication.run(TicketManagementApplication.class, args);\n  }\n}\n```", "```java\n[\n  {\n    userid: 100,\n    username: \"David\"\n  },\n  {\n    userid: 101,\n    username: \"Peter\"\n  },\n  {\n    userid: 102,\n    username: \"John\"\n  }\n]\n```", "```java\nUser getUser(Integer userid);\n```", "```java\n@Override\npublic User getUser(Integer userid) {     \n    return users.stream()\n    .filter(x -> x.getUserid() == userid)\n    .findAny()\n    .orElse(new User(0, \"Not Available\")); \n}\n```", "```java\n@ResponseBody\n@RequestMapping(\"/{id}\")\npublic User getUser(@PathVariable(\"id\") Integer id){  \n  return userSevice.getUser(100);\n}\n```", "```java\n{\n  userid: 100,\n  username: \"David\"\n}\n```", "```java\nvoid createUser(Integer userid, String username);\n```", "```java\n@Override\npublic void createUser(Integer userid, String username) {    \n    User user = new User(userid, username); \n    this.users.add(user); \n}\n```", "```java\n@ResponseBody\n  @RequestMapping(value = \"\", method = RequestMethod.POST)\n  public Map<String, Object> createUser(\n    @RequestParam(value=\"userid\") Integer userid,\n    @RequestParam(value=\"username\") String username\n    ){    \n    Map<String, Object> map = new LinkedHashMap<>(); \n    userSevice.createUser(userid, username);    \n    map.put(\"result\", \"added\");\n    return map;\n}\n```", "```java\n{\"result\": \"added\"}\n```", "```java\nvoid updateUser(Integer userid, String username);\n```", "```java\n@Override\npublic void updateUser(Integer userid, String username) {\n    users.stream()\n        .filter(x -> x.getUserid() == userid)\n        .findAny()\n        .orElseThrow(() -> new RuntimeException(\"Item not found\"))\n        .setUsername(username); \n}\n```", "```java\n@ResponseBody\n  @RequestMapping(value = \"\", method = RequestMethod.PUT)\n  public Map<String, Object> updateUser(\n      @RequestParam(value=\"userid\") Integer userid,\n      @RequestParam(value=\"username\") String username\n    ){\n    Map<String, Object> map = new LinkedHashMap<>();\n    userSevice.updateUser(userid, username);    \n    map.put(\"result\", \"updated\");    \n    return map;\n  }\n```", "```java\n{\"result\": \"updated\"}\n```", "```java\n[\n  {\n    \"userid\": 100,\n    \"username\": \"Sammy\"\n  },\n  {\n    \"userid\": 101,\n    \"username\": \"Peter\"\n  },\n  {\n    \"userid\": 102,\n    \"username\": \"John\"\n  },\n  {\n    \"userid\": 104,\n    \"username\": \"Kevin\"\n  }\n]\n```", "```java\nvoid deleteUser(Integer userid);\n```", "```java\n@Override\npublic void deleteUser(Integer userid) { \n\n   users.removeIf((User u) -> u.getUserid() == userid);\n\n}\n```", "```java\n@ResponseBody\n@RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\npublic Map<String, Object> deleteUser(\n      @PathVariable(\"id\") Integer userid) {\n    Map<String, Object> map = new LinkedHashMap<>(); \n      userSevice.deleteUser(userid); \n      map.put(\"result\", \"deleted\");\n      return map;\n}\n```", "```java\n{\"result\": \"deleted\"}\n```", "```java\npackage com.packtpub.service;\nimport org.springframework.web.multipart.MultipartFile;\npublic interface FileUploadService {\n  void uploadFile(MultipartFile file) throws IOException;\n}\n```", "```java\npackage com.packtpub.service;\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.nio.file.StandardCopyOption;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.multipart.MultipartFile;\n@Service\npublic class FileUploadServerImpl implements FileUploadService {\n  private Path location;  \n  public FileUploadServerImpl() throws IOException {\n    location = Paths.get(\"c:/test/\");\n    Files.createDirectories(location);\n  }\n  @Override\n  public void uploadFile(MultipartFile file) throws IOException {\n    String fileName = StringUtils.cleanPath(file.getOriginalFilename());\n    if (fileName.isEmpty()) {\n      throw new IOException(\"File is empty \" + fileName);\n    } try {\n      Files.copy(file.getInputStream(), \n            this.location.resolve(fileName),     \n            StandardCopyOption.REPLACE_EXISTING);\n    } catch (IOException e) {\n      throw new IOException(\"File Upload Error : \" + fileName);\n    }\n  }\n}\n```", "```java\nString fileName = StringUtils.cleanPath(file.getOriginalFilename());\n```", "```java\n    if(fileName.isEmpty()){\n      throw new IOException(\"File is empty \" + fileName);\n    }\n```", "```java\ntry {\n      Files.copy(\n        file.getInputStream(), this.location.resolve(fileName),  \n        StandardCopyOption.REPLACE_EXISTING\n      );\n    } catch (IOException e) { \n      throw new IOException(\"File Upload Error : \" + fileName);\n    }\n```", "```java\npackage com.packtpub.restapp;\nimport java.io.IOException;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseBody;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.multipart.MultipartFile;\nimport com.packtpub.service.FileUploadService;\n@RestController\n@RequestMapping(\"/file\")\npublic class FileController {  \n  @Autowired\n  FileUploadService fileUploadSevice;\n  @ResponseBody\n  @RequestMapping(value = \"/upload\", method = RequestMethod.POST)\n  public Map<String, Object> uploadFile(@RequestParam(\"file\") MultipartFile file) {\n    Map<String, Object> map = new LinkedHashMap<>();\n    try {\n      fileUploadSevice.uploadFile(file);      \n      map.put(\"result\", \"file uploaded\");\n    } catch (IOException e) {\n      map.put(\"result\", \"error while uploading : \"+e.getMessage());\n    }    \n    return map;\n  }\n} \n```", "```java\n<!DOCTYPE html>\n<html>\n<body>\n<form action=\"http://localhost:8080/file/upload\" method=\"post\" enctype=\"multipart/form-data\">\n    Select image to upload:\n    <input type=\"file\" name=\"file\" id=\"file\">\n    <input type=\"submit\" value=\"Upload Image\" name=\"submit\">\n</form>\n</body>\n</html>\n```"]