["```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.client.RestTemplate;\n@Configuration\npublic class AppConfig {\n  @Bean\n  public RestTemplate restTemplate() {\n      return new RestTemplate();\n  }\n}\n```", "```java\n@RestController\n@RequestMapping(\"/client\")\npublic class ClientController {  \n  private final Logger _log = LoggerFactory.getLogger(this.getClass());    \n  @Autowired\n  RestTemplate template;  \n  @ResponseBody\n  @RequestMapping(\"/test\") \n  public Map<String, Object> test(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    String content = template.getForObject(\"http://localhost:8080/\", String.class); \n    map.put(\"result\", content);    \n    return map;\n  }  \n}\n```", "```java\n{\n  result: \"{\\\"result\\\":\"\\Aloha\\\"}\"\n}\n```", "```java\n@ResponseBody\n  @RequestMapping(\"/test/user\") \n  public Map<String, Object> testGetUser(){\n    Map<String, Object> map = new LinkedHashMap<>();\n    User user = template.getForObject(\"http://localhost:8080/user/100\", User.class); \n    map.put(\"result\", user);    \n    return map;\n  }\n```", "```java\npublic class User implements Serializable {  \n  private static final long serialVersionUID = 3453281303625368221L;  \n  public User(){ \n  }\n  private Integer userid;  \n  private String username;   \n  public User(Integer userid, String username){\n    this.userid = userid;\n    this.username = username;\n  }\n  public Integer getUserid() {\n    return userid;\n  }\n  public void setUserid(Integer userid) {\n    this.userid = userid;\n  }\n  public String getUsername() {\n    return username;\n  }\n  public void setUsername(String username) {\n    this.username = username;\n  }  \n  @Override\n  public String toString() {\n    return \"User [userid=\" + userid + \", username=\" + username + \"]\";\n  }\n}\n```", "```java\n{\n  result: {\n    userid: 100,\n    username: \"David\"\n  }\n}\n```", "```java\npublic class ErrorHandler {\n  @ExceptionHandler(Exception.class)\n  public @ResponseBody <T> T handleException(Exception ex) {    \n    Map<String, Object> errorMap = new LinkedHashMap<>();\n    if(ex instanceof org.springframework.web.bind.MissingServletRequestParameterException){      \n      errorMap.put(\"Parameter Missing\", ex.getMessage());\n      return (T) errorMap;\n    }    \n    errorMap.put(\"Generic Error \", ex.getMessage());\n    return (T) errorMap;\n  }\n}\n```", "```java\n@RestController\n@RequestMapping(\"/\")\npublic class HomeController extends ErrorHandler {    \n    // other methods\n  @ResponseBody\n  @RequestMapping(\"/test/error\") \n  public Map<String, Object> testError(@RequestParam(value=\"item\") String item){\n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"item\", item);    \n    return map;\n  }   \n}\n```", "```java\n{\n  Parameter Missing: \"Required String parameter 'item' is not present\"\n}\n```", "```java\n@RestController\n@RequestMapping(\"/\")\npublic class HomeController extends ErrorHandler {  \n    // other methods  \n  @ResponseBody\n  @RequestMapping(\"/test/error/{id}\")\n  public Map<String, Object> testRuntimeError(@PathVariable(\"id\") Integer id){    \n    if(id == 1){\n      throw new RuntimeException(\"some exception\");\n    }    \n    Map<String, Object> map = new LinkedHashMap<>();\n    map.put(\"result\", \"one\");    \n    return map;\n  }\n}\n```", "```java\n{\n  Generic Error : \"some exception\"\n}\n```"]