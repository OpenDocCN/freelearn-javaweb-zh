["```java\n    //build.gradle\n\n    dependencies {\n    // CAS:\n    compile('org.springframework.security:spring-security-cas')\n    ...\n    }\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/CasConfig.java\n\n    static{\n    System.setProperty(\"cas.server\", \"https://localhost:9443/cas\");\n     System.setProperty(\"cas.server.login\", \n     \"https://localhost:9443/cas/login\");\n    System.setProperty(\"cas.service\", \n     \"https://localhost:8443\");\n    System.setProperty(\"cas.service.login\", \n    \"https://localhost:8443/login\");\n     }\n    @Value(\"#{systemProperties['cas.service.login']}\")\n    private String calendarServiceLogin;\n    @Bean\n    public ServiceProperties serviceProperties(){\n     return new ServiceProperties(){{\n    setService(calendarServiceLogin);\n     }};\n    }\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/CasConfig.java\n\n    @Value(\"#{systemProperties['cas.server.login']}\")\n    private String casServerLogin;\n    @Bean\n    public CasAuthenticationEntryPoint casAuthenticationEntryPoint(){\n     return new CasAuthenticationEntryPoint(){{\n     setServiceProperties(serviceProperties());\n     setLoginUrl(casServerLogin);\n     }};\n    }\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/\n    SecurityConfig.java\n\n    @Autowired\n    private CasAuthenticationEntryPoint casAuthenticationEntryPoint;\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n      ...\n    // Exception Handling\n     http.exceptionHandling()\n     .authenticationEntryPoint(casAuthenticationEntryPoint)\n     .accessDeniedPage(\"/errors/403\");\n    ...\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/\n    SecurityConfig.java\n\n    @Configuration\n    @EnableWebSecurity(debug = true)\n    @EnableGlobalAuthentication\n    @Import(CasConfig.class)\n    public class SecurityConfig extends WebSecurityConfigurerAdapter {\n```", "```java\n    src/main/java/com/packtpub/springsecurity/configuration/\n    SecurityConfig.java\n    @Override\n    public void configure(AuthenticationManagerBuilder auth)\n    throws Exception {\n    super.configure(auth);\n    //auth.userDetailsService(userDetailsService)\n     // .passwordEncoder(passwordEncoder());\n    }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public CasAuthenticationProvider casAuthenticationProvider() {\n           CasAuthenticationProvider casAuthenticationProvider = new\n           CasAuthenticationProvider();\n           casAuthenticationProvider.setTicketValidator(ticketValidator());\n           casAuthenticationProvider.setServiceProperties\n           (serviceProperties());\n           casAuthenticationProvider.setKey(\"casJbcpCalendar\");\n           casAuthenticationProvider.setAuthenticationUserDetailsService(\n             userDetailsByNameServiceWrapper);\n             return casAuthenticationProvider;\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        SecurityConfig.java\n\n        @Autowired\n        private CasAuthenticationProvider casAuthenticationProvider;\n        @Override\n        public void configure(final AuthenticationManagerBuilder auth)\n        throws Exception   \n        {\n         auth.authenticationProvider(casAuthenticationProvider);\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public Cas30ProxyTicketValidator ticketValidator(){\n         return new Cas30ProxyTicketValidator(casServer);\n        }\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/CasConfig.java\n\n    @Bean\n    public UserDetailsByNameServiceWrapper\n    authenticationUserDetailsService(\n      final UserDetailsService userDetailsService){\n      return new UserDetailsByNameServiceWrapper(){{\n      setUserDetailsService(userDetailsService);\n      }};\n    }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        SecurityConfig.java\n\n        @Value(\"#{systemProperties['cas.server']}/logout\")\n        private static String casServerLogout;\n        @Override\n        protected void configure(final HttpSecurity http)\n        throws Exception {\n         ...\n         http.logout()\n        .logoutUrl(\"/logout\")\n        .logoutSuccessUrl(casServerLogout)\n        .permitAll();\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public SingleSignOutFilter singleSignOutFilter() {\n           return new SingleSignOutFilter();\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        SecurityConfig.java\n\n        @Autowired\n        private SingleSignOutFilter singleSignOutFilter;\n        @Override\n        protected void configure(HttpSecurity http) throws Exception {\n          ...\n         http.addFilterAt(casFilter, CasAuthenticationFilter.class);\n         http.addFilterBefore(singleSignOutFilter, LogoutFilter.class);\n        // Logout\n        http.logout()\n         .logoutUrl(\"/logout\")\n         .logoutSuccessUrl(casServerLogout)\n         .permitAll();\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public ServletListenerRegistrationBean\n        <SingleSignOutHttpSessionListener>\n        singleSignOutHttpSessionListener() {\n          ServletListenerRegistrationBean<SingleSignOutHttpSessionListener> \n          listener = new     \n          ServletListenerRegistrationBean<>();\n          listener.setEnabled(true);\n          listener.setListener(new SingleSignOutHttpSessionListener());\n          listener.setOrder(1);\n          return listener;\n        }\n        @Bean\n        public FilterRegistrationBean \n        characterEncodingFilterRegistration() {\n          FilterRegistrationBean registrationBean = \n          new FilterRegistrationBean\n          (characterEncodingFilter());\n          registrationBean.setName(\"CharacterEncodingFilter\");\n          registrationBean.addUrlPatterns(\"/*\");\n          registrationBean.setOrder(1);\n          return registrationBean;\n        }\n        private CharacterEncodingFilter characterEncodingFilter() {\n           CharacterEncodingFilter filter = new CharacterEncodingFilter(\n             filter.setEncoding(\"UTF-8\");\n             filter.setForceEncoding(true);\n             return filter;\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n       @Bean\n       public ProxyGrantingTicketStorage pgtStorage() {\n        return new ProxyGrantingTicketStorageImpl();\n        }\n        @Scheduled(fixedRate = 300_000)\n        public void proxyGrantingTicketStorageCleaner(){\n          pgtStorage().cleanUp();\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Value(\"#{systemProperties['cas.calendar.service']}/pgtUrl\")\n        private String calendarServiceProxyCallbackUrl;\n        @Bean\n        public Cas30ProxyTicketValidator ticketValidator(){\n          Cas30ProxyTicketValidator tv = new \n          Cas30ProxyTicketValidator(casServer);\n          tv.setProxyCallbackUrl(calendarServiceProxyCallbackUrl);\n          tv.setProxyGrantingTicketStorage(pgtStorage());\n          return tv;\n            }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public CasAuthenticationFilter casFilter() {\n           CasAuthenticationFilter caf = new CasAuthenticationFilter();\n        caf.setAuthenticationManager(authenticationManager);\n        caf.setFilterProcessesUrl(\"/login\");\n        caf.setProxyGrantingTicketStorage(pgtStorage());\n        caf.setProxyReceptorUrl(\"/pgtUrl\");\n         return caf;\n        }\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/web/controllers/\n    EchoController.java\n\n    @ResponseBody\n   @RequestMapping(\"/echo\")\n    public String echo() throws UnsupportedEncodingException {\n      final CasAuthenticationToken token = (CasAuthenticationToken)\n     SecurityContextHolder.getContext().getAuthentication();\n    final String proxyTicket = token.getAssertion().getPrincipal()\n    .getProxyTicketFor(targetUrl);\n    return restClient.getForObject(targetUrl+\"?ticket={pt}\",\n    String.class, proxyTicket);\n    }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public ServiceProperties serviceProperties(){\n          return new ServiceProperties(){{\n             setService(calendarServiceLogin);\n             setAuthenticateAllArtifacts(true);\n          }};\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public CasAuthenticationFilter casFilter() {\n          CasAuthenticationFilter caf = new CasAuthenticationFilter();\n          caf.setAuthenticationManager(authenticationManager);\n          caf.setFilterProcessesUrl(\"/login\");\n          caf.setProxyGrantingTicketStorage(pgtStorage());\n          caf.setProxyReceptorUrl(\"/pgtUrl\");\n          caf.setServiceProperties(serviceProperties());\n          caf.setAuthenticationDetailsSource(new        \n          ServiceAuthenticationDetailsSource(serviceProperties())\n        );\n         return caf;\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public Cas30ProxyTicketValidator ticketValidator(){\n          Cas30ProxyTicketValidator tv = new \n          Cas30ProxyTicketValidator(casServer);\n          tv.setProxyCallbackUrl(calendarServiceProxyCallbackUrl);\n```", "```java\n          tv.setProxyGrantingTicketStorage(pgtStorage());\n          tv.setAcceptAnyProxy(true);\n          return tv;\n        }\n```", "```java\n        //src/main/java/com/packtpub/springsecurity/configuration/\n        CasConfig.java\n\n        @Bean\n        public CasAuthenticationProvider casAuthenticationProvider() {\n         CasAuthenticationProvider cap = new CasAuthenticationProvider();\n         cap.setTicketValidator(ticketValidator());\n         cap.setServiceProperties(serviceProperties());\n         cap.setKey(\"casJbcpCalendar\");\n         cap.setAuthenticationUserDetailsService\n         (userDetailsByNameServiceWrapper);\n         cap.setStatelessTicketCache(ehCacheBasedTicketCache());\n         return cap;\n       }\n      @Bean\n      public EhCacheBasedTicketCache ehCacheBasedTicketCache() {\n        EhCacheBasedTicketCache cache = new EhCacheBasedTicketCache();\n        cache.setCache(ehcache());\n        return cache;\n      }\n     @Bean(initMethod = \"initialise\", destroyMethod = \"dispose\")\n     public Cache ehcache() {\n       Cache cache = new Cache(\"casTickets\", 50, true, false, 3_600,  900);\n       return cache;\n     }\n```", "```java\n        //cas-server/src/main/webapp/WEB-INF/deployerConfigContext.xml\n\n        <property name=\"authenticationHandlers\">\n        <list>\n         ... remove ONLY\n        SimpleTestUsernamePasswordAuthenticationHandler ...\n        <bean class=\"org.jasig.cas.adaptors\n        .ldap.BindLdapAuthenticationHandler\">\n        <property name=\"filter\" value=\"uid=%u\"/>\n        <property name=\"searchBase\" value=\"ou=Users\"/>\n        <property name=\"contextSource\" ref=\"contextSource\"/>\n         </bean>\n        </list>\n        </property>\n```", "```java\n    //cas-server/src/main/webapp/WEB-INF/deployerConfigContext.xml\n\n    <sec:ldap-server id=\"contextSource\"  \n     ldif=\"classpath:ldif/calendar.ldif\" root=\"dc=jbcpcalendar,dc=com\" />\n    </beans>\n```", "```java\n        //cas-server/src/main/webapp/WEB-INF/deployerConfigContext.xml\n\n       <property name=\"credentialsToPrincipalResolvers\">\n        <list>\n        <!-- REMOVE UsernamePasswordCredentialsToPrincipalResolver -->\n        <bean class=\"org.jasig.cas.authentication.principal\n        .HttpBasedServiceCredentialsToPrincipalResolver\" />\n        <bean class=\"org.jasig.cas.authentication.principal\n        .CredentialsToLDAPAttributePrincipalResolver\">\n        <property name=\"credentialsToPrincipalResolver\">\n        <bean class=\"org.jasig.cas.authentication.principal\n        .UsernamePasswordCredentialsToPrincipalResolver\"/>\n        </property>\n        <property name=\"filter\" value=\"(uid=%u)\"/>\n        <property name=\"principalAttributeName\" value=\"uid\"/>\n        <property name=\"searchBase\" value=\"ou=Users\"/>\n        <property name=\"contextSource\" ref=\"contextSource\"/>\n        <property name=\"attributeRepository\" ref=\"attributeRepository\"/>\n        </bean>\n        </list>\n        </property>\n```", "```java\n    //cas-server/src/main/webapp/WEB-INF/deployerConfigContext.xml\n\n    <bean id=\"attributeRepository\" class=\"org.jasig.services.persondir\n    .support.ldap.LdapPersonAttributeDao\">\n    <property name=\"contextSource\" ref=\"contextSource\"/>\n    <property name=\"requireAllQueryAttributes\" value=\"true\"/>\n    <property name=\"baseDN\" value=\"ou=Users\"/>\n    <property name=\"queryAttributeMapping\">\n    <map>\n     <entry key=\"username\" value=\"uid\"/>\n    </map>\n     </property>\n    <property name=\"resultAttributeMapping\">\n    <map>\n    <entry key=\"cn\" value=\"FullName\"/>\n    <entry key=\"sn\" value=\"LastName\"/>\n    <entry key=\"description\" value=\"role\"/>\n    </map>\n    </property>\n    </bean>\n```", "```java\n    //cas-server/src/main/webapp/WEB-INF/deployerConfigContext.xml\n\n    <bean class=\"org.jasig.cas.services.RegisteredServiceImpl\">\n      <property name=\"id\" value=\"1\" />\n      <property name=\"name\" value=\"HTTPS\" />\n      <property name=\"description\" value=\"Only Allows HTTPS Urls\" />\n      <property name=\"serviceId\" value=\"https://**\" />\n      <property name=\"evaluationOrder\" value=\"10000002\" />\n      <property name=\"allowedAttributes\">\n      <list>\n        <value>FullName</value>\n        <value>LastName</value>\n        <value>role</value>\n     </list>\n    </property>\n    </bean>\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/CasConfig.java\n\n    @Bean\n    public AuthenticationUserDetailsService userDetailsService(){\n       GrantedAuthorityFromAssertionAttributesUserDetailsService uds\n       = new GrantedAuthorityFromAssertionAttributesUserDetailsService(\n       new String[]{\"role\"}\n    );\n     return uds;\n    }\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/CasConfig.java\n\n    @Bean\n    public Saml11TicketValidator ticketValidator(){\n      return new Saml11TicketValidator(casServer);\n    }\n```"]