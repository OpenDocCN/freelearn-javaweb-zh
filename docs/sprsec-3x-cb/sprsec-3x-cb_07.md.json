["```java\nCREATE TABLE `users1` (\n  `USER_ID` INT(10) UNSIGNED NOT NULL,\n  `USERNAME` VARCHAR(45) NOT NULL,\n  `PASSWORD` VARCHAR(45) NOT NULL,\n  `ENABLED` tinyint(1) NOT NULL,\n  PRIMARY KEY (`USER_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\nCREATE TABLE `user_roles` (\n  `USER_ROLE_ID` INT(10) UNSIGNED NOT NULL,\n  `USER_ID` INT(10) UNSIGNED NOT NULL,\n  `AUTHORITY` VARCHAR(45) NOT NULL,\n  PRIMARY KEY (`USER_ROLE_ID`),\n  KEY `FK_user_roles` (`USER_ID`),\n  CONSTRAINT `FK_user_roles` FOREIGN KEY (`USER_ID`) REFERENCES `users` (`USER_ID`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n```", "```java\nmvn archetype:generate -DarchetypeGroupId=org.apache.wicket -DarchetypeArtifactId=wicket-archetype-quickstart -DarchetypeVersion=6.9.1 -DgroupId=com.packt -DartifactId=spring-security-wicket -DarchetypeRepository=https://repository.apache.org/ -DinteractiveMode=false\n\n```", "```java\n[INFO] Parameter: groupId, Value: com.packt\n[INFO] Parameter: artifactId, Value: spring-security-wicket\n[INFO] Parameter: version, Value: 1.0-SNAPSHOT\n[INFO] Parameter: package, Value: com.packt\n[INFO] Parameter: packageInPathFormat, Value: com/packt\n[INFO] Parameter: version, Value: 1.0-SNAPSHOT\n[INFO] Parameter: package, Value: com.packt\n[INFO] Parameter: groupId, Value: com.packt\n[INFO] Parameter: artifactId, Value: spring-security-wicket\n[INFO] project created from Archetype in dir: E:\\spring-security-wicket\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1:22.610s\n[INFO] Finished at: Mon Jul 15 21:17:24 IST 2013\n[INFO] Final Memory: 7M/13M\n[INFO] ------------------------------------------------------------------------\n\n```", "```java\nSpring-security-wicket>mvn clean compile install\nSpring-security-wicket>mvn tomcat:run\nSpring-security-wicket>mvn eclipse: eclipse\n\n```", "```java\n    <!-- Spring dependecncies -->\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-core</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-web</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-webmvc</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n\n      <!-- Spring Security -->\n      <dependency>\n        <groupId>org.springframework.security</groupId>\n        <artifactId>spring-security-core</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.springframework.security</groupId>\n        <artifactId>spring-security-web</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.springframework.security</groupId>\n        <artifactId>spring-security-config</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <!-- WICKET DEPENDENCIES -->\n      <dependency>\n        <groupId>org.apache.wicket</groupId>\n        <artifactId>wicket-core</artifactId>\n        <version>${wicket.version}</version>\n      </dependency>\n      <!-- WICKET Authentication-DEPENDENCIES -->\n      <dependency>\n        <groupId>org.apache.wicket</groupId>\n        <artifactId>wicket-auth-roles</artifactId>\n        <version>6.9.1</version>\n      </dependency>\n    ```", "```java\n    <filter>\n      <filter-name>springSecurityFilterChain</filter-name>\n      <filter-class>\n        org.springframework.web.filter.DelegatingFilterProxy\n        </filter-class>\n    </filter>\n\n    <filter-mapping>\n      <filter-name>springSecurityFilterChain</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <listener>\n      <listener-class>\n        org.springframework.web.context.ContextLoaderListener\n        </listener-class>\n    </listener>\n\n    <filter>\n      <filter-name>wicket.spring-security-wicket</filter-name>\n    <filter-class>\n      org.apache.wicket.protocol.http.WicketFilter</filter-class>\n      <init-param>\n        <param-name>applicationClassName</param-name>\n        <param-value>com.packt.WicketApplication</param-value>\n      </init-param>\n    </filter>\n\n    <filter-mapping>\n      <filter-name>wicket.spring-security-wicket</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n    ```", "```java\n    <global-method-security pre-post-annotations=\"enabled\" />\n\n    <http auto-config=\"true\">\n      <intercept-url pattern=\"/spring-security-wicket/**\" \n        access=\"ROLE_SELLER\"/> \n      <intercept-url pattern=\"/spring-security-wicket/*.*\" \n        access=\"ROLE_SELLER\"/> \n      <intercept-url pattern=\"/**\"access=\"ROLE_SELLER\" />\n      <http-basic />\n    </http>\n\n    <authentication-manager>\n      <authentication-provider>\n        <jdbc-user-service data-source-ref=\"MySqlDS\" \n          users-by-username-query=\" \n          select username,password, enabled   \n          from users1 where username=?\"  \n          authorities-by-username-query=\" \n          select u.username, ur.role from users1 u,user_roles ur  \n        where u.user_id = ur.user_id and u.username =?  \" />\n      </authentication-provider>\n    </authentication-manager>\n    ```", "```java\n<global-method-security pre-post-annotations=\"enabled\" />\n\n<http auto-config=\"true\">\n  <intercept-url pattern=\"/spring-security-wicket/**\" \n    access=\"ROLE_SELLER\"/> \n  <intercept-url pattern=\"/spring-security-wicket/*.*\" \n    access=\"ROLE_SELLER\"/> \n  <intercept-url pattern=\"/**\" access=\"ROLE_SELLER\" />\n</http>\n\n<authentication-manager> \n  <authentication-provider> \n    <jdbc-user-service data-source-ref=\"MySqlDS\" \n    users-by-username-query=\" \n    select username,password, enabled   \n    from users1 where username=?\"  \n\n    authorities-by-username-query=\" \n    select u.username, ur.role from users1 u, user_roles ur  \n    where u.user_id = ur.user_id and u.username =?  \" /> \n  </authentication-provider>\n</authentication-manager>\n```", "```java\n    <global-method-security pre-post-annotations=\"enabled\" />\n\n    <http auto-config='true'>\n      <intercept-url pattern=\"/jsp/login*\" \n        access=\"IS_AUTHENTICATED_ANONYMOUSLY\" />\n      <intercept-url pattern=\"/jsp/login_error*\" \n        access=\"IS_AUTHENTICATED_ANONYMOUSLY\" />\n      <intercept-url pattern=\"/**\" access=\"ROLE_SELLER\" />\n      <form-login login-page='/jsp/login' \n        authentication-failure-url=\"/jsp/login_error\" />\n    </http> \n    <authentication-manager> \n      <authentication-provider> \n        <jdbc-user-service data-source-ref=\"MySqlDS\" \n        users-by-username-query=\" \n        select username,password, enabled   \n        from users1 where username=?\"  \n\n        authorities-by-username-query=\" \n        select u.username, ur.role from users1 u, user_roles ur  \n        where u.user_id = ur.user_id and u.username =?  \" /> \n      </authentication-provider>\n    </authentication-manager>\n    ```", "```java\n    <servlet>\n      <servlet-name>login</servlet-name>\n      <jsp-file>/jsp/login.jsp</jsp-file>\n    </servlet>\n\n    <servlet>\n      <servlet-name>login_error</servlet-name>\n      <jsp-file>/jsp/login_error.jsp</jsp-file>\n    </servlet>\n\n    <servlet-mapping>\n      <servlet-name>login</servlet-name>\n      <url-pattern>/jsp/login</url-pattern>\n    </servlet-mapping>\n\n    <servlet-mapping>\n      <servlet-name>login_error</servlet-name>\n      <url-pattern>/jsp/login_error</url-pattern>\n    </servlet-mapping>\n    ```", "```java\n    <!-- Enable annotation scanning -->\n    <context:component-scan base-package=\"com.packt.wicket\" />\n\n    </beans>\n    ```", "```java\n    <security:authentication-manager alias=\"springauthenticationManager\">\n      <security:authentication-provider>\n    <!--  TODO change this to reference a real production environment user service -->\n        <security:user-service>\n          <security:user name=\"jimmy\" password=\"jimmy\" authorities=\"ROLE_EDITOR, ROLE_AUTHOR\"/>\n          <security:user name=\"tommy\" password=\"tommy\" authorities=\"ROLE_EDITOR\"/>\n        </security:user-service>\n      </security:authentication-provider>\n    </security:authentication-manager>\n\n    <security:global-method-security secured-annotations=\"enabled\" />\n    ```", "```java\n    @AuthorizeInstantiation(\"ROLE_AUTHOR\")\n    public class AuthorPage extends WebPage {\n\n      @SpringBean\n      private SomeInterfaceImpl someInterfaceImpl;\n\n      public AuthorPage(final PageParameters parameters) {\n        super(parameters);\n        add(new Label(\"msg\", someInterfaceImpl.method1()));\n        add(new Link(\"Editor\"){\n          @Override\n          public void onClick() {\n            Page next = new EditorPage();\n            setResponsePage(next);\n          }\n        });\n        add(new Link(\"Logout\"){\n          @Override\n          public void onClick() {\n            getSession().invalidate();\n            Page next = new HomePage(parameters);\n            setResponsePage(next);\n          }\n        });\n      }\n    }\n    ```", "```java\n    public final class SignInPage extends WebPage\n    {\n      /**\n      * Constructor\n      */\n      public SignInPage()\n      {\n        final SignInForm form = new SignInForm(\"signinForm\");\n        add(form);\n      }\n\n      /**\n      * Sign in form\n      */\n      public final class SignInForm extends Form<Void>\n      {\n        private String username;\n        private String password;\n\n        public SignInForm(final String id)\n        {\n          super(id);\n          setModel(new CompoundPropertyModel(this));\n          add(new RequiredTextField(\"username\"));\n          add(new PasswordTextField(\"password\"));\n          add(new FeedbackPanel(\"feedback\"));\n        }\n\n        @Override\n        public final void onSubmit()\n        {\n          MyWebSession session = getMySession();\n          if (session.signIn(username,password))\n          {\n\n            setResponsePage(getApplication().getHomePage());\n\n          }\n          else\n          {\n            String errmsg = getString(\"loginError\", null,\n               \"Unable to sign you in\");\n\n          }\n        }\n        private MyWebSession getMySession()\n        {\n          return (MyWebSession)getSession();\n        }\n      }\n    }\n    ```", "```java\n    public class HomePage extends WebPage {\n      private static final long serialVersionUID = 1L;\n      @SpringBean\n      private SomeInterfaceImpl someInterfaceImpl;\n      public HomePage(final PageParameters parameters) {\n        super(parameters);\n        add(new Label(\"version\", getApplication()\n          .getFrameworkSettings().getVersion()));\n        add(new Label(\"msg\", someInterfaceImpl.method1()));\n        add(new Link(\"click if you are Editor\"){\n          @Override\n          public void onClick() {\n            Page next = new EditorPage();\n            setResponsePage(next);\n          }\n        });\n\n        add(new Link(\"Click if You are Author\"){\n          @Override\n          public void onClick() {\n            Page next = new AuthorPage(parameters);\n            setResponsePage(next);\n          }\n        });\n\n      }\n\n    }\n    ```", "```java\n    public class HomePage extends WebPage {\n      private static final long serialVersionUID = 1L;\n      @SpringBean\n      private SomeInterfaceImpl someInterfaceImpl;\n      public HomePage(final PageParameters parameters) {\n        super(parameters);\n        add(new Label(\"version\", getApplication()\n          .getFrameworkSettings().getVersion()));\n        add(new Label(\"msg\", someInterfaceImpl.method1()));\n        add(new Link(\"click if you are Editor\"){\n          @Override\n          public void onClick() {\n            Page next = new EditorPage();\n            setResponsePage(next);\n          }\n        });\n\n        add(new Link(\"Click if You are Author\"){\n          @Override\n          public void onClick() {\n            Page next = new AuthorPage(parameters);\n            setResponsePage(next);\n          }\n        });\n\n      }\n\n    }\n    ```", "```java\n    <!-- Enable annotation scanning -->\n    <context:component-scan base-package=\"com.packt.wicket\" />\n\n      <bean id=\"derbydataSource\" class=\"com.packt.wicket.TenantRoutingDataSource \">\n        <property name=\"targetDataSources\">\n          <map>\n            <entry key=\"Tenant1\" value-ref=\"tenant1DataSource\"/>\n            <entry key=\"Tenant2\" value-ref=\"tenant2DataSource\"/>\n          </map>\n        </property>\n      </bean>\n     <bean id=\"tenant1DataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n     <property name=\"driverClassName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\" />\n     <property name=\"url\" value=\"jdbc:derby://localhost:1527/client1\" />\n     <property name=\"username\" value=\"client1\" />\n     <property name=\"password\" value=\"client1\" />\n\n     </bean>\n    <bean id=\"tenant2DataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n     <property name=\"driverClassName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\" />\n     <property name=\"url\" value=\"jdbc:derby://localhost:1527/client2\" />\n     <property name=\"username\" value=\"client2\" />\n     <property name=\"password\" value=\"client2\" />\n\n    </bean>\n\n    ```", "```java\n    <bean id=\"authenticationFailureHandler\"\n      class=\"org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler\">\n      <property name=\"exceptionMappings\">\n        <props>\n          <prop key=\"org.springframework.security.authentication.BadCredentialsException\">/jsp/login?error='badCredentials'</prop>\n          <prop key=\"org.springframework.security.authentication.CredentialsExpiredException\">/jsp/login?error='credentialsExpired'</prop>\n          <prop key=\"org.springframework.security.authentication.LockedException\">/jsp/login?error='accountLocked'</prop>\n          <prop key=\"org.springframework.security.authentication.DisabledException\">/jsp/login?error='accountDisabled'</prop>\n          </props>\n        </property>\n      </bean>\n      <security:http auto-config='true'>\n        <security:intercept-url pattern=\"/jsp/login*\" access=\"IS_AUTHENTICATED_ANONYMOUSLY\" />\n        <security:intercept-url pattern=\"/jsp/login_error*\"access=\"IS_AUTHENTICATED_ANONYMOUSLY\" />\n        <security:intercept-url pattern=\"/**\" access=\"ROLE_SELLER\" />\n        <security:form-login login-page='/jsp/login' authentication-failure-handler-ref=\"authenticationFailureHandler\" />\n      </security:http>\n      <security:authentication-manager>\n        <security:authentication-provider>\n          <security:jdbc-user-service data-source-ref=\"derbydataSource\"\n              users-by-username-query=\" select username,password,'true'as enabled from users where username=?\"  \n\n              authorities-by-username-query=\" \n              select u.username as username, ur.authority as authority from users u, user_roles ur  \n              where u.user_id = ur.user_id and u.username =?\"\n          /> \n        </security:authentication-provider>  \n      </security:authentication-manager>\n\n    <security:global-method-security secured-annotations=\"enabled\" />\n    ```", "```java\n    Login here--customized---login page\n    <form action=\"/ /Multitenant-spring-security-\n      wicket//j_spring_security_check\" method=\"post\">\n      <table>\n        <tr>\n          <td>\n            User\n          </td>\n          <td>\n            <input name=\"j_username\">\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Password\n          </td>\n          <td>\n            <input type=\"password\" name=\"j_password\"/>\n          </td>\n        </tr>\n\n        <tr><td><label>Tenant:&nbsp;</label></td><td> \n          <select style=\"width:146px\" id=\"tenant\" name=\"tenant\">\n          <option value=\"\">Choose Tenant</option>\n          <option value=\"Tenant1\">Tenant 1</option>\n          <option value=\"Tenant2\">Tenant 2</option></select></td>\n        </tr>\n        <tr>\n          <td>\n            <input type=\"submit\" value=\"login\">\n          </td>\n        </tr>\n      </table>\n    </form>\n    </div>\n    ```", "```java\n    public class TenantRoutingDataSource extends AbstractRoutingDataSource {\n      protected final Log logger = LogFactory.getLog(this.getClass());\n\n      protected Object determineCurrentLookupKey() {\n\n        String lookupKey = (String)ThreadLocalContextUtil.getTenantId();\n        System.out.println(lookupKey+\"------lookupKey\");\n\n        return lookupKey;\n      }\n    }\n    ```", "```java\n    public void doFilter(ServletRequest request,\n       ServletResponse response,FilterChain chain)\n       throws IOException, ServletException {\n      if (null == filterConfig) {\n        return;\n      }\n      HttpServletRequest httpRequest = (HttpServletRequest)\n         request;\n\n      ThreadLocalContextUtil.clearTenant();\n      if (httpRequest.getRequestURI()\n        .endsWith(SPRING_SECURITY_LOGOUT_MAPPING)) {\n        httpRequest.getSession()\n          .removeAttribute(TENANT_HTTP_KEY);\n      }\n\n      String tenantID = null;\n      if (httpRequest.getRequestURI()\n        .endsWith(SPRING_SECURITY_CHECK_MAPPING)) {\n        tenantID = request.getParameter(TENANT_HTTP_KEY);\n        httpRequest.getSession().setAttribute\n          (TENANT_HTTP_KEY, tenantID);\n      } else {\n        tenantID = (String) httpRequest.getSession()\n          .getAttribute(TENANT_HTTP_KEY);\n      }\n\n      if (null != tenantID) {\n        ThreadLocalContextUtil.setTenantId(tenantID);\n        if (logger.isInfoEnabled()) logger.info\n          (\"Tenant context set with Tenant ID: \" + tenantID);\n        }\n\n      chain.doFilter(request, response);\n    }\n    ```"]