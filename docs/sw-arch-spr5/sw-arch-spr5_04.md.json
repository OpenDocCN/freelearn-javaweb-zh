["```java\nGET https://api.github.com/users/{{GITHUB_USERNAME}}/repos\n```", "```java\ndef \"when the credentials are not found, an UNAUTHORIZED code is returned\"() \n{\n  given:\n  def nonExistentCredentials = \n  new Credentials(username: \"foo\", password: \"bar\")\n  def loginService = Mock(LoginService)\n  loginService.login(nonExistentCredentials) >> \n  {\n    throw new LoginException()\n  }\n  def securityController = new SecurityController(loginService)\n  when:\n  def response = securityController.auth(nonExistentCredentials)\n  then:\n  response.statusCode == HttpStatus.UNAUTHORIZED\n}\n```", "```java\ncompile(\"org.springframework.boot:spring-boot-starter-actuator\")\n```", "```java\nendpoints.endpoint_name.property\n```", "```java\nendpoints.health.id = status\nendpoints.health.sensitive = false\nendpoints.health.enabled = true\n```", "```java\nnewman run https://www.getpostman.com/collections/8930b54ce719908646ae\n```", "```java\npublic interface SecurityApi \n{\n  @POST(\"/api/public/auth\")\n  Call<String> login(@Body Credentials credentials);\n}\n```", "```java\npublic interface BankingApi \n{\n  @GET(\"/api/secure/balance\")\n  Call<BalanceInformation> queryBalance(@Header(\"x-auth-token\") \n  String token);\n}\n```", "```java\nRetrofit retrofit = new Retrofit.Builder()\n        .baseUrl(\"http://IP:PORT\")\n        .addConverterFactory(GsonConverterFactory.create(gson))\n        .build();\n```", "```java\nSecurityApi api = BankClient.getRetrofit().create(SecurityApi.class);\nCall<String> call = api.login(\n            new Credentials(username.getText(), password.getText()));\nResponse<String> response = call.execute();\n// do something with the response\n```", "```java\nSecurityApi api = BankClient.getRetrofit().create(SecurityApi.class);\nCall<String> call = api.login(new Credentials(username, password));\ncall.enqueue(new Callback<String>() \n{\n  @Override\n  public void onResponse(Call<String> call, \n  Response<String> response)\n  {\n    // do something with the reponse\n  }\n  @Override\n  public void onFailure(Call<String> call, Throwable t) \n  {\n    // handle the error properly\n  }\n}\n```", "```java\n$ curl -H \"Content-Type: application/json\" \\\n-X POST -d '{\"username\":\"rene\",\"password\":\"rene\"}' \\\nhttp://localhost:8080/api/public/auth\n```", "```java\n$ curl -H \"x-auth-token: JWT_TOKEN\" \\\n-X GET http://localhost:8080/api/secure/balance\n```"]