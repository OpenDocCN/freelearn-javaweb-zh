["```java\n@Test \npublic void \ntheNotificationChannelsAreSavedByTheDataRepository() \nthrows Exception \n{ \n  // Test here \n} \n```", "```java\n@Test \npublic void \ntheBankStatementIsSendUsingThePreferredNotificationChannels() \n throws Exception \n{ \n  // Test here \n} \n```", "```java\npublic void sendBankStatement(Customer customer) \n{\n  List<NotificationChannel> preferredChannels = customerRepository\n  .getPreferredNotificationChannels(customer);\n  BankStatement bankStatement = bankStatementRepository\n  .getCustomerBankStatement(customer);\n  preferredChannels.forEach\n  (\n    channel -> \n    {\n      if (\"email\".equals(channel.getChannelName())) \n      {\n        notificationService.sendByEmail(bankStatement);\n      } \n      else if (\"fax\".equals(channel.getChannelName())) \n      {\n        notificationService.sendByFax(bankStatement);\n      }\n    }\n  );\n}\n```", "```java\npublic void sendBankStatement(Customer customer) \n{\n  List<NotificationType> preferredChannels = customerRepository\n  .getPreferredNotificationChannels(customer);\n  BankStatement bankStatement = bankStatementRepository\n  .getCustomerBankStatement(customer);\n  preferredChannels.forEach\n  (\n    channel ->\n    notificationChannelFactory\n    .getNotificationChannel(channel)\n    .send(bankStatement)\n  );\n}\n```", "```java\npublic  class Abc implements Xyz \n{ \n  @Override \n  public void doSomething(Param a) \n  { \n throw new UnsupportedOperationException \n    (\"A good explanation here\"); \n  } \n  // Other method implementations \n} \n\n```", "```java\npublic  class Abc implements Xyz \n{ \n  @Override \n  public void doSomething(Param a) \n  { \n // This method is not necessary here because of ... \n  } \n  // Other method implementations \n} \n```"]