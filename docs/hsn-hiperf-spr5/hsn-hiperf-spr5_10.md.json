["```java\n<property name=\"hibernate.c3p0.min_size\">5</property>\n<property name=\"hibernate.c3p0.max_size\">20</property>\n<property name=\"hibernate.c3p0.timeout\">300</property>\n<property name=\"hibernate.c3p0.max_statements\">50</property>\n<property name=\"hibernate.c3p0.idle_test_period\">3000</property>\n```", "```java\n<property name=\"hibernate.dbcp.initialSize\">8</property>\n<property name=\"hibernate.dbcp.maxActive\">20</property>\n<property name=\"hibernate.dbcp.maxIdle\">20</property>\n<property name=\"hibernate.dbcp.minIdle\">0</property>\n```", "```java\norg.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure\n```", "```java\nhibernate.connection.datasource=java:/comp/env/jdbc/AB_DB\n```", "```java\n@Transactional(readOnly=true)\npublic void someBusinessMethod() {\n    ....\n}\n```", "```java\nentityManager.flush();\nentityManager.clear();\n```", "```java\n@Id\n@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"your_key_generator\")\nprivate Long id;\n```", "```java\nlogger.debug (\"one log message\" + param_1 + \"text\" + param_2);\n```", "```java\nif (logger.isDebugEnabled ()) {\n  logger.debug (\"One log message\" + param_1 + \"Text\" + param_2);\n}\n```", "```java\npackage com.springhighperformance.jmx;\n\npublic class Calculator {\n  private String name;\n  private int lastCalculation;\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public int getLastCalculation() {\n    return lastCalculation;\n  }\n\n  public void calculate(int x, int y) {\n    lastCalculation = x + y;\n  }\n}\n```", "```java\n<beans>\n  <bean id=\"exporter\"     \n    class=\"org.springframework.jmx.export.MBeanExporter\n    \" lazy-init=\"false\">\n    <property name=\"beans\">\n      <map>\n        <entry key=\"bean:name=calculatorBean1\" value-\n        ref=\"calculatorBean\"/>\n      </map>\n    </property>\n  </bean>\n\n  <bean id=\"calculatorBean\" \n    class=\"com.springhighperformance.jmx.Calculator\">\n    <property name=\"name\" value=\"Test\"/>\n    <property name=\"lastCalculation\" value=\"10\"/>\n  </bean>\n</beans>\n```", "```java\n<beans>\n  <bean id=\"mbeanServer\" class=\"org.springframework.jmx.support.\n    MBeanServerFactoryBean\"/>\n\n  <bean id=\"exporter\" \n   class=\"org.springframework.jmx.export.MBeanExporter\">\n    <property name=\"beans\">\n      <map>\n        <entry key=\"bean:name=calculatorBean1\" value-\n         ref=\"calculatorBean\"/>\n      </map>\n    </property>\n    <property name=\"server\" ref=\"mbeanServer\"/>\n  </bean>\n\n  <bean id=\"calculatorBean\" \n   class=\"com.springhighperformance.jmx.Calculator\">\n    <property name=\"name\" value=\"Test\"/>\n    <property name=\"lastCalculation\" value=\"10\"/>\n  </bean>\n</beans>\n```", "```java\npackage com.springhighperformance.jmx;\n\nimport org.springframework.jmx.export.annotation.ManagedAttribute;\nimport org.springframework.jmx.export.annotation.ManagedOperation;\nimport org.springframework.jmx.export.annotation.ManagedOperationParameter;\nimport org.springframework.jmx.export.annotation.ManagedOperationParameters;\nimport org.springframework.jmx.export.annotation.ManagedResource;\n\n  @ManagedResource(objectName = \"Examples:type=JMX,name=Calculator\",\n    description = \"A calculator to demonstrate JMX in the \n    SpringFramework\")\n  public class Calculator {\n  private String name;\n  private int lastCalculation;\n\n  @ManagedAttribute(description = \"Calculator name\")\n  public String getName() {\n    return name;\n  }\n\n  @ManagedAttribute(description = \"Calculator name\")\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  @ManagedAttribute(description = \"The last calculation\")\n  public int getLastCalculation() {\n    return lastCalculation;\n  }\n\n  @ManagedOperation(description = \"Calculate two numbers\")\n  @ManagedOperationParameters({\n      @ManagedOperationParameter(name = \"x\",\n          description = \"The first number\"),\n      @ManagedOperationParameter(name = \"y\",\n          description = \"The second number\") })\n  public void calculate(int x, int y) {\n    lastCalculation = x + y;\n  }\n}\n```", "```java\npackage com.springhighperformance.jmx;\nimport java.util.Random;\n\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.EnableMBeanExport;\n\n@Configuration\n@EnableMBeanExport\npublic class JmxSpringMain {\n  private static final Random rand = new Random();\n\n    @Bean\n    public Resource jmxResource() {\n        return new Resource();\n    }\n\n    @Bean\n    public Calculator calculator() {\n        return new Calculator();\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        ApplicationContext context = new \n        AnnotationConfigApplicationContext(JmxSpringMain.class);\n        do {\n          Calculator cal = context.getBean(Calculator.class);\n          cal.calculate(rand.nextInt(), rand.nextInt());\n          Thread.sleep(Long.MAX_VALUE);\n        } while(true);\n    }\n}\n```"]