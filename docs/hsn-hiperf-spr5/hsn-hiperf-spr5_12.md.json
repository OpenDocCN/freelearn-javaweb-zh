["```java\n> curl https://start.spring.io/starter.zip -d dependencies=web,jpa -d bootVersion=2.0.0 -o ch-09-spring-boot-example-1.zip\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0         \n    http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.packt.springhighperformance.ch09</groupId>\n  <artifactId>ch-09-boot-example</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>boot-example</name>\n  <description>Demo project for Spring boot</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.0.0.RELEASE</version>\n    <relativePath/> <!-- lookup parent from repository -->\n  </parent>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-\n    8</project.reporting.outputEncoding>\n    <java.version>1.8</java.version>\n    <spring-cloud.version>Finchley.M9</spring-cloud.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```", "```java\npackage com.packt.springhighperformance.ch09;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class BootExampleApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(BootExampleApplication.class, args);\n  }\n}\n```", "```java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@Configuration\n@EnableAutoConfiguration\n@ComponentScan\npublic @interface SpringBootApplication {\n......\n```", "```java\n\n  . ____ _ __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __ __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/ ___)| |_)| | | | | || (_| | ) ) ) )\n  ' |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot :: (v2.0.0.RELEASE)\n\n2018-05-23 16:29:21.382 INFO 32268 --- [ main] c.p.s.ch09.BootExampleApplication : Starting BootExampleApplication on DESKTOP-4DS55MC with PID 32268 (E:\\projects\\spring-high-performance\\ch-09\\boot-example\\target\\classes started by baps in E:\\projects\\spring-high-performance\\ch-09\\boot-example)\n2018-05-23 16:29:21.386 INFO 32268 --- [ main] c.p.s.ch09.BootExampleApplication : No active profile set, falling back to default profiles: default\n2018-05-23 16:29:21.441 INFO 32268 --- [ main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58ce9668: startup date [Wed May 23 16:29:21 IST 2018]; root of context hierarchy\n2018-05-23 16:29:23.854 INFO 32268 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)\n2018-05-23 16:29:23.881 INFO 32268 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]\n2018-05-23 16:29:23.881 INFO 32268 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet Engine: Apache Tomcat/8.5.28\n2018-05-23 16:29:23.888 INFO 32268 --- [ost-startStop-1] o.a.catalina.core.AprLifecycleListener : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: ...\n2018-05-23 16:29:24.015 INFO 32268 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext\n2018-05-23 16:29:24.016 INFO 32268 --- [ost-startStop-1] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 2581 ms\n2018-05-23 16:29:25.011 INFO 32268 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean : Servlet dispatcherServlet mapped to [/]\n2018-05-23 16:29:25.015 INFO 32268 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'characterEncodingFilter' to: [/*]\n2018-05-23 16:29:25.016 INFO 32268 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]\n2018-05-23 16:29:25.016 INFO 32268 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'httpPutFormContentFilter' to: [/*]\n2018-05-23 16:29:25.016 INFO 32268 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'requestContextFilter' to: [/*]\n2018-05-23 16:29:25.016 INFO 32268 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'httpTraceFilter' to: [/*]\n2018-05-23 16:29:25.016 INFO 32268 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean : Mapping filter: 'webMvcMetricsFilter' to: [/*]\n2018-05-23 16:29:26.283 INFO 32268 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/welcome]}\" onto public java.lang.String com.packt.springhighperformance.ch09.controllers.MainController.helloMessage(java.lang.String)\n2018-05-23 16:29:26.284 INFO 32268 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/]}\" onto public java.lang.String com.packt.springhighperformance.ch09.controllers.MainController.helloWorld()\n2018-05-23 16:29:26.291 INFO 32268 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)\n2018-05-23 16:29:26.292 INFO 32268 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/error],produces=[text/html]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\n2018-05-23 16:29:26.358 INFO 32268 --- [ main] o.s.w.s.handler.SimpleUrlHandlerMapping : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n2018-05-23 16:29:26.359 INFO 32268 --- [ main] o.s.w.s.handler.SimpleUrlHandlerMapping : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n2018-05-23 16:29:26.410 INFO 32268 --- [ main] o.s.w.s.handler.SimpleUrlHandlerMapping : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n2018-05-23 16:29:27.033 INFO 32268 --- [ main] o.s.j.e.a.AnnotationMBeanExporter : Registering beans for JMX exposure on startup\n2018-05-23 16:29:27.082 INFO 32268 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''\n2018-05-23 16:29:27.085 INFO 32268 --- [ main] c.p.s.ch09.BootExampleApplication : Started BootExampleApplication in 6.068 seconds (JVM running for 7.496)\n```", "```java\npackage com.packt.springhighperformance.ch09.controllers;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\n@Controller\npublic class MainController {\n\n  @RequestMapping(value=\"/\")\n  @ResponseBody\n  public String helloWorld() {\n    return \"<h1>Hello World<h1>\";\n  }\n\n  @RequestMapping(value=\"/welcome\")\n  @ResponseBody\n  public String showMessage(@RequestParam(name=\"name\") String name) {\n    return \"<h1>Hello \" + name + \"<h1>\";\n  }\n\n}\n```", "```java\n2018-03-24 10:26:26.154 INFO 11148 --- [ main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3c153a1: startup date [Sat Mar 24 10:26:24 IST 2018]; root of context hierarchy\n2018-03-24 10:26:26.214 INFO 11148 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/]}\" onto public java.lang.String com.packt.springhighperformance.ch09.controllers.MainController.helloWorld()\n2018-03-24 10:26:26.218 INFO 11148 --- [ main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/welcome]}\" onto public java.lang.String com.packt.springhighperformance.ch09.controllers.MainController.helloMessage(java.lang.String)\n```", "```java\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-actuator</artifactId>\n</dependency>\n```", "```java\nmanagement.endpoint.<id>.enabled=true\n```", "```java\nmanagement.endpoint.shutdown.enabled=true\n```", "```java\n2018-03-24 17:51:36.687 INFO 8516 --- [ main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped \"{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)\n2018-03-24 17:51:36.696 INFO 8516 --- [ main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped \"{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}\" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)\n2018-03-24 17:51:36.697 INFO 8516 --- [ main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped \"{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}\" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\n```", "```java\n{\n  \"status\": \"UP\",\n  \"details\": {\n    \"diskSpace\": {\n      \"status\": \"UP\",\n      \"details\": {\n        \"total\": 407250137088,\n        \"free\": 392089661440,\n        \"threshold\": 10485760\n      }\n    }\n  }\n}\n```", "```java\npackage com.packt.springhighperformance.ch09.healthindicators;\n\nimport org.springframework.boot.actuate.health.AbstractHealthIndicator;\nimport org.springframework.boot.actuate.health.Health;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ExampleHealthCheck extends AbstractHealthIndicator {\n    @Override\n      protected void doHealthCheck(Health.Builder builder) \n      throws Exception   \n   {\n        // TODO implement some check\n        boolean running = true;\n        if (running) {\n          builder.up();\n        } else {\n          builder.down();\n        }\n    }\n}\n```", "```java\n{\n  \"status\": \"UP\",\n  \"details\": {\n    \"exampleHealthCheck\": {\n \"status\": \"UP\"\n },\n    \"diskSpace\": {\n      \"status\": \"UP\",\n      \"details\": {\n        \"total\": 407250137088,\n        \"free\": 392071581696,\n        \"threshold\": 10485760\n      }\n    },\n    \"db\": {\n      \"status\": \"UP\",\n      \"details\": {\n        \"database\": \"MySQL\",\n        \"hello\": 1\n      }\n    }\n  }\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n  http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.packt.springhighperformance.ch09</groupId>\n  <artifactId>ch-09-accounting-service</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>accounting-service</name>\n  <description>Example accounting service</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.0.0.RELEASE</version>\n    <relativePath /> <!-- lookup parent from repository -->\n  </parent>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-    \n    8</project.reporting.outputEncoding>\n    <java.version>1.8</java.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-data-jpa</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-data-rest</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-hateoas</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.data</groupId>\n      <artifactId>spring-data-rest-hal-browser</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>mysql</groupId>\n      <artifactId>mysql-connector-java</artifactId>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```", "```java\npackage com.packt.springhighperformance.ch09.accountingservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class AccountingServiceApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(AccountingServiceApplication.class, args);\n  }\n}\n```", "```java\npackage com.packt.springhighperformance.ch09.accountingservice.models;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"accounts\")\npublic class Account {\n\n  @Id\n  @GeneratedValue(strategy = GenerationType.AUTO)\n  @Column(name = \"ACCT_ID\")\n  private Long id;\n\n  @Column(name = \"ACCT_NAME\")\n      private String accountName;\n\n  public Account() {\n  }\n\n  public Account(String accountName) {\n    this.accountName = accountName;\n  }\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getAccountName() {\n    return accountName;\n  }\n\n  public void setAccountName(String accountName) {\n    this.accountName = accountName;\n  }\n\n  @Override\n  public String toString() {\n    return \"Account{\"\n        + \"id=\" + id + \n        \", accountName='\" + accountName + '\\'' +\n        '}';\n  }\n\n}\n```", "```java\npackage com.packt.springhighperformance.ch09.\naccountingservice.repositories;\n\nimport java.util.Collection;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.repository.query.Param;\nimport org.springframework.data.rest.core.annotation.RepositoryRestResource;\n\nimport com.packt.springhighperformance.ch09.accountingservice.models.Account;\n\n@RepositoryRestResource\npublic interface AccountsRepository extends JpaRepository<Account, Long> {\n\n  Collection<Account> findByAccountName(@Param(\"an\") String an);\n}\n```", "```java\npackage com.packt.springhighperformance.ch09\n.accountingservice.controllers;\n\nimport java.util.Collections;\nimport java.util.Map;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class AccountsController {\n  @GetMapping(value = \"/account/{name}\")\n  Map<String, Object> getAccount(@PathVariable String name) {\n    return Collections.singletonMap(\"Account : \", name);\n  }\n}\n```", "```java\nspring.jpa.hibernate.ddl-auto=create-drop\nspring.datasource.url=jdbc:mysql://localhost:3306/db_example?useSSL=false\nspring.datasource.username=root\nspring.datasource.password=root\n```", "```java\nEstablishing SSL connection without server's identity verification is not recommended.\n```", "```java\nspring.datasource.initialization-mode=always\n```", "```java\nINSERT INTO accounts (ACCT_NAME) VALUES\n  ('Savings'),\n  ('Current'),\n  ('Fixed Deposit'),\n  ('Recurring Deposit'),\n  ('Loan');\n```", "```java\npackage com.packt.springhighperformance.ch09.accountingservice;\n\nimport java.util.stream.Stream;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.ApplicationArguments;\nimport org.springframework.boot.ApplicationRunner;\nimport org.springframework.stereotype.Component;\n\nimport com.packt.springhighperformance.ch09.accountingservice.models.Account;\nimport com.packt.springhighperformance.ch09.accountingservice.repositories.AccountsRepository;\n\n@Component\npublic class AccountsDataRunner implements ApplicationRunner {\n\n  @Autowired\n  private AccountsRepository acctRepository;\n\n  @Override\n  public void run(ApplicationArguments args) throws Exception {\n    Stream.of(\"Savings\", \"Current\", \"Recurring\", \"Fixed Deposit\")\n    .forEach(name -> acctRepository.save(new Account(name)));\n    acctRepository.findAll().forEach(System.out::println);\n  }\n\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n  http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.packt.springhighperformance.ch09</groupId>\n  <artifactId>ch-09-accounting-service-client</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>accounting-service-client</name>\n  <description>Example accounting service client</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.0.0.RELEASE</version>\n    <relativePath /> <!-- lookup parent from repository -->\n  </parent>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-\n    8</project.reporting.outputEncoding>\n    <java.version>1.8</java.version>\n    <spring-cloud.version>Finchley.M9</spring-cloud.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n <groupId>org.springframework.cloud</groupId>\n <artifactId>spring-cloud-starter-openfeign</artifactId>\n </dependency>\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <dependencyManagement>\n <dependencies>\n <dependency>\n <groupId>org.springframework.cloud</groupId>\n <artifactId>spring-cloud-dependencies</artifactId>\n <version>${spring-cloud.version}</version>\n <type>pom</type>\n <scope>import</scope>\n </dependency>\n </dependencies>\n </dependencyManagement>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n\n  <repositories>\n    <repository>\n      <id>spring-milestones</id>\n      <name>Spring Milestones</name>\n      <url>https://repo.spring.io/milestone</url>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n\n</project>\n```", "```java\npackage com.packt.springhighperformance.ch09.accountingclient;\n\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.json.BasicJsonParser;\nimport org.springframework.boot.json.JsonParser;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestTemplate;\n\n@SpringBootApplication\npublic class AccountingServiceClientApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(AccountingServiceClientApplication.class, \n    args);\n  }\n}\n\n@RestController\nclass MainController {\n\n  @Value(\"${accounting.service.url}\")\n  private String accountingServiceUrl;\n\n  @GetMapping(\"/account\")\n  public String getAccountName(@RequestParam(\"id\") Long id) {\n    ResponseEntity<String> responseEntity = new \n    RestTemplate().getForEntity(accountingServiceUrl + \"/\" + id,\n    String.class);\n    JsonParser parser = new BasicJsonParser();\n    Map<String, Object> responseMap = \n    parser.parseMap(responseEntity.getBody());\n    return (String) responseMap.get(\"accountName\");\n  }\n}\n```", "```java\naccounting.service.url=http://localhost:8080/accounts/\nserver.port=8181\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project      \n\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0     \n    http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.spring.server.config</groupId>\n  <artifactId>spring-config-server</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>config-server</name>\n  <description>Example spring boot config server</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.0.0.RELEASE</version>\n    <relativePath /> <!-- lookup parent from repository -->\n  </parent>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-\n    8</project.reporting.outputEncoding>\n    <java.version>1.8</java.version>\n    <spring-cloud.version>Finchley.M9</spring-cloud.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n <groupId>org.springframework.cloud</groupId>\n <artifactId>spring-cloud-config-server</artifactId>\n </dependency>\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <dependencyManagement>\n <dependencies>\n <dependency>\n <groupId>org.springframework.cloud</groupId>\n <artifactId>spring-cloud-dependencies</artifactId>\n <version>${spring-cloud.version}</version>\n <type>pom</type>\n <scope>import</scope>\n </dependency>\n </dependencies>\n </dependencyManagement>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n\n  <repositories>\n    <repository>\n      <id>spring-milestones</id>\n      <name>Spring Milestones</name>\n      <url>https://repo.spring.io/milestone</url>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n</project>\n```", "```java\nspring.application.name=configserver\nspring.cloud.config.server.git.uri:${user.home}\\\\Desktop\\\\config-repo\nserver.port=9000\nspring.profiles.active=development,production\n```", "```java\npackage com.spring.server.config;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n@SpringBootApplication\n@EnableConfigServer\npublic class ConfigServerApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(ConfigServerApplication.class, args);\n  }\n}\n```", "```java\nserver.port=8101\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0     \n    http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.packt.springhighperformance.ch09</groupId>\n  <artifactId>ch-09-accounting-service</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>accounting-service</name>\n  <description>Example accounting service</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.0.0.RELEASE</version>\n    <relativePath /> <!-- lookup parent from repository -->\n  </parent>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-\n    8</project.reporting.outputEncoding>\n    <java.version>1.8</java.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n <groupId>org.springframework.cloud</groupId>\n <artifactId>spring-cloud-starter-config</artifactId>\n <version>2.0.0.M9</version>\n </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```", "```java\nmanagement.endpoints.web.exposure.include=*\nserver.port=8888\n```", "```java\nspring.application.name=accountingservice\nspring.cloud.config.uri=http://localhost:9000\n```", "```java\n2018-04-01 16:11:11.196 INFO 13556 --- [ main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:9000\n....\n\n2018-04-01 16:11:13.303  INFO 13556 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8101 (http)\n....\n\n2018-04-01 16:11:17.825  INFO 13556 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8101 (http) with context path ''\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n    http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.spring.admin</groupId>\n  <artifactId>admin-server</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>admin-server</name>\n  <description>Demo project for Spring Boot</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.5.11.BUILD-SNAPSHOT</version>\n    <relativePath /> <!-- lookup parent from repository -->\n  </parent>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <java.version>1.8</java.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n <groupId>de.codecentric</groupId>\n <artifactId>spring-boot-admin-server</artifactId>\n <version>1.5.4</version>\n </dependency>\n <dependency>\n <groupId>de.codecentric</groupId>\n <artifactId>spring-boot-admin-server-ui</artifactId>\n <version>1.5.4</version>\n </dependency>\n <dependency>\n <groupId>org.springframework.boot</groupId>\n <artifactId>spring-boot-starter-security</artifactId>\n </dependency>\n <dependency>\n <groupId>de.codecentric</groupId>\n <artifactId>spring-boot-admin-server-ui-login</artifactId>\n <version>1.5.4</version>\n </dependency>\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n\n  <repositories>\n    <repository>\n      <id>spring-snapshots</id>\n      <name>Spring Snapshots</name>\n      <url>https://repo.spring.io/snapshot</url>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n    <repository>\n      <id>spring-milestones</id>\n      <name>Spring Milestones</name>\n      <url>https://repo.spring.io/milestone</url>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n\n  <pluginRepositories>\n    <pluginRepository>\n      <id>spring-snapshots</id>\n      <name>Spring Snapshots</name>\n      <url>https://repo.spring.io/snapshot</url>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </pluginRepository>\n    <pluginRepository>\n      <id>spring-milestones</id>\n      <name>Spring Milestones</name>\n      <url>https://repo.spring.io/milestone</url>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </pluginRepository>\n  </pluginRepositories>\n</project>\n```", "```java\nsecurity.user.name=admin\nsecurity.user.password=admin\n```", "```java\npackage com.spring.admin.adminserver;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\nimport de.codecentric.boot.admin.config.EnableAdminServer;\n\n@SpringBootApplication\n@EnableAdminServer\npublic class AdminServerApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(AdminServerApplication.class, args);\n  }\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project  \n\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n    http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n <groupId>org.springframework.boot</groupId>\n <artifactId>spring-boot-starter-parent</artifactId>\n <version>1.5.11.BUILD-SNAPSHOT</version>\n <relativePath /> <!-- lookup parent from repository -->\n </parent>\n\n  <properties>\n    <spring-boot-admin.version>1.5.7</spring-boot-admin.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n <groupId>de.codecentric</groupId>\n <artifactId>spring-boot-admin-starter-client</artifactId>\n </dependency>\n    <dependency>\n <groupId>org.springframework.boot</groupId>\n <artifactId>spring-boot-starter-actuator</artifactId>\n </dependency>\n    <dependency>\n <groupId>org.springframework.boot</groupId>\n <artifactId>spring-boot-starter-security</artifactId>\n </dependency>\n</project>\n```", "```java\nspring.boot.admin.url=http://localhost:8080\nserver.port=8181\nspring.boot.admin.username=admin\nspring.boot.admin.password=admin\nmanagement.endpoints.web.exposure.include=*\nsecurity.user.name=user\nsecurity.user.password=password\nmanagement.security.enabled=false\n```", "```java\npackage com.spring.admin.client.bootadminclient;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class BootAdminClientApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(BootAdminClientApplication.class, args);\n  }\n}\n```", "```java\npackage com.spring.admin.client.bootadminclient;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n@Configuration\npublic class SecurityPermitAllConfig extends WebSecurityConfigurerAdapter {\n  @Override\n  protected void configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests().anyRequest().permitAll().\n    and().csrf().disable();\n  }\n}\n```"]