["```java\n@Component\npublic class BankingService {\n\n  private CustomerService customerService;\n\n  // Constructor based Dependency Injection\n  @Autowired\n  public BankingService(CustomerService customerService) {\n    this.customerService = customerService;\n  }\n\n  public void showCustomerAccountBalance() {\n    customerService.showCustomerAccountBalance();\n  }\n\n}\n```", "```java\npublic class CustomerServiceImpl implements CustomerService {\n\n  @Override\n  public void showCustomerAccountBalance() {\n    System.out.println(\"This is call customer services\");\n  }\n}\n\n```", "```java\npublic interface CustomerService {  \n  public void showCustomerAccountBalance(); \n}\n```", "```java\n@Component\npublic class BankingService {\n\n  private CustomerService customerService;  \n\n  // Setter-based Dependency Injection\n  @Autowired\n  public void setCustomerService(CustomerService customerService) {\n  this.customerService = customerService;\n  }\n\n  public void showCustomerAccountBalance() {\n    customerService.showCustomerAccountBalance();\n  }\n\n}\n```", "```java\n@Component\npublic class BankingService {\n\n  //Field based Dependency Injection\n  @Autowired\n  private CustomerService customerService;\n\n  public void showCustomerAccountBalance() {\n    customerService.showCustomerAccountBalance();\n  }\n\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans \n\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n  http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n    <!-- Bean Configuration definition describe here -->\n    <bean class=\"\"/>\n\n</beans> \n```", "```java\n<!-- CustomerServiceImpl Bean -->\n<bean id=\"customerService\"    class=\"com.packt.springhighperformance.ch2.bankingapp.service.Impl.CustomerServiceImpl\" />\n\n<!-- Inject customerService via constructor argument -->\n<bean id=\"bankingService\"\nclass=\"com.packt.springhighperformance.ch2.bankingapp.model.BankingService\">\n<constructor-arg ref=\"customerService\" />\n</bean>\n```", "```java\n<!-- CustomerServiceImpl Bean -->\n<bean id=\"customerService\"    class=\"com.packt.springhighperformance.ch2.bankingapp.service.Impl.CustomerServiceImpl\" />\n\n<!-- Inject customerService via setter method -->\n<bean id=\"bankingService\" class=\"com.packt.springhighperformance.ch2.bankingapp.model.BankingService\"> \n<property name=\"customerService\" ref=\"customerService\"></property></bean>\n```", "```java\npublic class MainApp {\n\npublic static void main(String[] args) {\n    @SuppressWarnings(\"resource\")\n    ApplicationContext context = new               \n    ClassPathXmlApplicationContext(\"applicationContext.xml\");\n    BankingService bankingService = \n    context.getBean(\"bankingService\",                            \n    BankingService.class);\n    bankingService.showCustomerAccountBalance(); \n  }\n}\n```", "```java\n@Configuration\npublic class AppConfig { \n\n  @Bean\n  public CustomerService showCustomerAccountBalance() {\n    return new CustomerService();\n  }\n\n  @Bean\n  public BankingService getBankingService() {\n    return new BankingService();\n  }  \n}\n```", "```java\n<beans>\n<bean id=\"customerService\"   class=\"com.packt.springhighperformance.ch2.bankingapp.service.Impl.CustomerServiceImpl\" /> \n\n<bean id=\"bankingService\"\nclass=\"com.packt.springhighperformance.ch2.bankingapp.model.BankingService/\">\n</beans>\n```", "```java\n@Bean(name=\"myBean\")\n  public CustomerService showCustomerAccountBalance() {\n    return new CustomerService();\n  }\n```", "```java\npublic class MainApp {\n\n  public static void main(String[] args) {\n    AnnotationConfigApplicationContext context = new                                                 \n    AnnotationConfigApplicationContext(AppConfig.class);\n    BankingService bankingService = \n    context.getBean(BankingService.class);\n    bankingService.showCustomerAccountBalance();\n    context.close();     \n  }\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans \n\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans\nhttp://www.springframework.org/schema/beans/spring-beans.xsd\nhttp://www.springframework.org/schema/context\nhttp://www.springframework.org/schema/context/spring-context.xsd\">\n\n<!-- Enable Annotation based configuration -->\n<context:annotation-config />\n<context:component-scan base-package=\"com.packt.springhighperformance.ch2.bankingapp.model\"/><context:component-scan base- package=\"com.packt.springhighperformance.ch2.bankingapp.service\"/>\n\n<!-- Bean Configuration definition describe here -->\n<bean class=\"\"/>\n\n</beans>\n```", "```java\npublic class BankingService {  \n\n  private CustomerService customerService;\n\n  @Autowired\n  public BankingService(CustomerService customerService) {\n    this.customerService = customerService;\n  }\n  ......\n}\n```", "```java\npublic class BankingService {\n\n  private CustomerService customerService; \n\n  @Autowired\n  public void setCustomerService(CustomerService customerService) {\n```", "```java\n    this.customerService = customerService;\n  }\n  ......\n}\n```", "```java\npublic class BankingService {\n\n  @Autowired\n  private CustomerService customerService; \n\n}\n```", "```java\npublic class BankingService {\n\n  private CustomerService customerService; \n\n  @Autowired (required=false)\n  public void setCustomerService(CustomerService customerService) {\n    this.customerService = customerService;\n  }\n  ......\n}\n```", "```java\npublic interface CustomerService {  \n  public void customerService(); \n}\n\n@Component\npublic class AccountService implements CustomerService {\n      ....\n}\n@Component\n@Primary\npublic class BankingService implements CustomerService { \n     ....\n}\n```", "```java\n@Component\npublic class AccountService implements CustomerService {\n\n}\n@Component\n@Qualifier(\"BankingService\")\npublic class BankingService implements CustomerService { \n\n}\n\n@Component\npublic class SomeService {\n\n  private CustomerService customerService;\n\n  @Autowired\n  @Qualifier(\"bankingservice\")\n  public BankingService(CustomerService customerService) {\n    this.customerService = customerService;\n  }\n  .....\n}\n```", "```java\n@Component\npublic class CustomerServiceImpl implements CustomerService {\n\n  @Override\n  public void customerService() {\n    System.out.println(\"This is call customer services\");\n\n  }\n\n}\n```", "```java\n@Service\npublic class CustomerServiceImpl implements CustomerService {\n\n  @Override\n  public void customerService() {\n    System.out.println(\"This is call customer services\");\n  }\n\n}\n```", "```java\n@Repository\npublic class JdbcCustomerRepository implements CustomerRepository {\n\n}\n```", "```java\n@Configuration\n@ComponentScan(basePackages=\"com.packt.springhighperformance.ch2.bankingapp.model\")\npublic class AppConfig {\n\n}\n```", "```java\n@Configuration\n@ComponentScan(basePackages={\"com.packt.springhighperformance.ch2.bankingapp.model\",\"com.packt.springhighperformance.ch2.bankingapp.service\"})\npublic class AppConfig {\n\n}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans \n\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans\nhttp://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n<!-- Here scope is not defined, it assume default value 'singleton'.\n    It creates only one instance per spring IOC. -->\n<bean id=\"customerService\" class=\"com.packt.springhighperformance.ch2.bankingapp.service.Impl.CustomerServiceImpl\" />\n\n<!-- Here scope is prototype, it creates and returns bankingService object for  every call-->\n<bean id=\"bankingService\"   class=\"com.packt.springhighperformance.ch2.bankingapp.model.BankingService\" scope=\"prototype\">\n\n<bean id=\"accountService\" class=\"com.packt.springhighperformance.ch2.bankingapp.model.AccountService\" scope=\"singleton\">\n\n</beans>\n```", "```java\n@Configuration\npublic class AppConfig { \n\n  @Bean\n  @Scope(\"singleton\")\n  public CustomerService showCustomerAccountBalance() {\n    return new CustomerServiceImpl();\n\n  }\n}\n```", "```java\n@Scope(value = ConfigurableBeanFactory.SCOPE_SINGLETON)\n@Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE)\n```", "```java\n@ComponentScan (( {{ \"org\", \"com\" }} ))\n```", "```java\n@ComponentScan(basePackages={\"com.packt.springhighperformance.ch2.bankingapp.model\",\"com.packt.springhighperformance.ch2.bankingapp.service\"})\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans \n\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans\nhttp://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n    <!-- Bean Configuration definition describe here -->\n    <bean id=\"xxx\" name=\"xxx\" class=\"\"/>\n\n</beans>\n```", "```java\n<constructor-arg index=\"0\" value=\"abc\"/>\n<constructor-arg index=\"1\" value=\"100\"/>\n```", "```java\n<constructor-arg type=\"java.lang.String\"\nvalue=\"abc\"/>\n<constructor-arg type=\"int\" value=\"100\"/>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans \n\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans\nhttp://www.springframework.org/schema/beans/spring-beans-3.0.xsd\">\n\n    <!-- Bean Configuration definition describe here -->\n    <bean class=\"\"/>\n\n</beans>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans \n\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans\nhttp://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n    <!-- Bean Configuration definition describe here -->\n    <bean class=\"\"/>\n\n</beans>\n```", "```java\n<beans>\n<description>\nThis file defines customer service\nrelated beans and it depends on\naccountServices.xml, which provides\nservice bean templates...\n</description>\n...\n</beans>\n```", "```java\n@Autowired\nprivate ABean aBean;\n```", "```java\n@Override\n@SuppressWarnings(\"unchecked\")\npublic <T> Map<String, T> getBeansOfType(@Nullable Class<T> type, boolean includeNonSingletons, boolean allowEagerInit)\n      throws BeansException {\n\n      ......\n\n      if (exBeanName != null && isCurrentlyInCreation(exBeanName)) {\n        if (this.logger.isDebugEnabled()) {\n          this.logger.debug(\"Ignoring match to currently created bean \n          '\" + \n          exBeanName + \"': \" +\n          ex.getMessage());\n        }\n        onSuppressedException(ex);\n        // Ignore: indicates a circular reference when auto wiring \n        constructors.\n        // We want to find matches other than the currently created \n        bean itself.\n        continue;\n      }\n\n      ......\n\n}\n```", "```java\n@Component\npublic class Account {\n\n  private static final Logger LOGGER = Logger.getLogger(Account.class);\n\n  static {\n    LOGGER.info(\"Account | Class loaded\");\n  }\n\n  @Autowired\n  public Account(ListableBeanFactory beanFactory) {\n    LOGGER.info(\"Account | Constructor\");\n    LOGGER.info(\"Constructor (Customer?): {}\" + \n    beanFactory.getBeansOfType(Customer.class).keySet());\n    LOGGER.info(\"Constructor (Bank?): {}\" + \n    beanFactory.getBeansOfType(Bank.class).keySet());\n  }\n\n}\n\n@Component\npublic class Customer {\n\n  private static final Logger LOGGER = Logger.getLogger(Customer.class);\n\n  static {\n    LOGGER.info(\"Customer | Class loaded\");\n  }\n\n  @Autowired\n  public Customer(ListableBeanFactory beanFactory) {\n    LOGGER.info(\"Customer | Constructor\");\n    LOGGER.info(\"Account (Account?): {}\" + \n    beanFactory.getBeansOfType(Account.class).keySet());\n    LOGGER.info(\"Constructor (Bank?): {}\" + \n    beanFactory.getBeansOfType(Bank.class).keySet());\n  }\n\n}\n\n@Component\npublic class Bank {\n\n  private static final Logger LOGGER = Logger.getLogger(Bank.class);\n\n  static {\n    LOGGER.info(\"Bank | Class loaded\");\n  }\n\n  public Bank() {\n    LOGGER.info(\"Bank | Constructor\");\n  }\n\n}\n```", "```java\npublic class MainApp {\n\n  public static void main(String[] args) {\n    AnnotationConfigApplicationContext context = new \n    AnnotationConfigApplicationContext(AppConfig.class);\n    Account account = context.getBean(Account.class);\n    context.close();\n  }\n}\n```", "```java\nAccount | Class loaded\nAccount | Constructor\nCustomer | Class loaded\nCustomer | Constructor\nAccount (Account?): {}[]\nBank | Class loaded\nBank | Constructor\nConstructor (Bank?): {}[bank]\nConstructor (Customer?): {}[customer]\nConstructor (Bank?): {}[bank]\n```"]