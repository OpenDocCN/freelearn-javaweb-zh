["```java\npackage com.packtpub.hibernatesearch.domain;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\n\n@Entity\npublic class App {\n\n @Id\n @GeneratedValue\n   private Long id;\n\n @Column\n   private String name;\n\n @Column(length=1000)\n   private String description;\n\n @Column\n   private String image;\n\n   public App() {}\n\n   public App(String name, String image, String description) {\n      this.name = name;\n      this.image = image;\n      this.description = description;\n   }\n\n   public Long getId() {\n      return id;\n   }\n   public void setId(Long id) {\n      this.id = id;\n   }\n   public String getName() {\n      return name;\n   }\n   public void setName(String name) {\n      this.name = name;\n   }\n   public String getDescription() {\n      return description;\n   }\n   public void setDescription(String description) {\n      this.description = description;\n   }\n   public String getImage() {\n      return image;\n   }\n   public void setImage(String image) {\n      this.image = image;\n   }\n}\n```", "```java\n...\nimport org.hibernate.search.annotations.Indexed;\n...\n@Entity\n@Indexed\npublic class App implements Serializable {\n...\n```", "```java\n...\nimport org.hibernate.search.annotations.Field;\n...\n@Id\n@GeneratedValue\nprivate Long id;\n@Column\n@Field\nprivate String name;\n\n@Column(length=1000)\n@Field\nprivate String description;\n\n@Column\nprivate String image;\n...\n```", "```java\npackage com.packtpub.hibernatesearch.util;\n\nimport javax.servlet.ServletContextEvent;\nimport javax.servlet.annotation.WebListener;\nimport org.hibernate.Session;\nimport org.hibernate.SessionFactory;\nimport org.hibernate.cfg.Configuration;\nimport org.hibernate.service.ServiceRegistry;\nimport org.hibernate.service.ServiceRegistryBuilder;\nimport com.packtpub.hibernatesearch.domain.App;\n\n@WebListener\npublic class StartupDataLoader implements ServletContextListener {\n   /** Wrapped by \"openSession()\" for thread-safety, and not meant to be accessed directly. */\n   private static SessionFactorysessionFactory;\n\n /** Thread-safe helper method for creating Hibernate sessions. */\n   public static synchronized Session openSession() {\n      if(sessionFactory == null) {\n         Configuration configuration = new Configuration();\n         configuration.configure();\n         ServiceRegistryserviceRegistry = new\n           ServiceRegistryBuilder().applySettings(\n              configuration.getProperties()).buildServiceRegistry();\n         sessionFactory =\n            configuration.buildSessionFactory(serviceRegistry);\n      }\n      return sessionFactory.openSession();\n   }\n\n   /** Code to run when the server starts up. */\n   public void contextInitialized(ServletContextEvent event) {\n      // TODO: Load some test data into the database\n   }\n\n   /** Code to run when the server shuts down. */\n   public void contextDestroyed(ServletContextEvent event) {\n      if(!sessionFactory.isClosed()) {\n         sessionFactory.close();\n      }\n   }\n}\n\n```", "```java\n...\nSession session = openSession();\nsession.beginTransaction();\n...\nApp app1 = new App(\"Test App One\", \"image.jpg\",\n \"Insert description here\");\nsession.save(app1);\n\n// Create and persist as many other App objects as you likeâ€¦\nsession.getTransaction().commit();\nsession.close();\n...\n\n```", "```java\n<html >\n<head>\n   <title>VAPORware Marketplace</title>\n</head>\n<body>\n   <h1>Welcome to the VAPORware Marketplace</h1>\n   Please enter keywords to search:\n   <form action=\"search\" method=\"post\">\n      <div id=\"search\">\n         <div>\n         <input type=\"text\" name=\"searchString\" />\n         <input type=\"submit\" value=\"Search\" />\n         </div>\n      </div>\n   </form>\n</body>\n</html>\n```", "```java\npackage com.packtpub.hibernatesearch.servlet;\n\nimport java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"search\")\npublic class SearchServletextends HttpServlet {\n   protected void doPost(HttpServletRequest request,\n         HttpServletResponse response) throws ServletException,\n         IOException {\n\n      // TODO: Process the search, and place its results on\n      // the \"request\" object\n\n      // Pass the request object to the JSP/JSTL view\n      // for rendering\n getServletContext().getRequestDispatcher(\n \"/WEB-INF/pages/search.jsp\").forward(request, response);\n   }\n\n   protected void doGet(HttpServletRequest request,\n         HttpServletResponse response) throws ServletException,\n         IOException {\n      this.doPost(request, response);\n   }\n\n}\n```", "```java\n...\nimport org.hibernate.Session;\nimport org.hibernate.search.FullTextSession;\nimport org.hibernate.search.Search;\n...\nSession session = StartupDataLoader.openSession();\nFullTextSessionfullTextSession =   \n   Search.getFullTextSession(session);\nfullTextSession.beginTransaction();\n...\n```", "```java\n...\nimport org.hibernate.search.query.dsl.QueryBuilder;\n...\nString searchString = request.getParameter(\"searchString\");\n\nQueryBuilderqueryBuilder =\nfullTextSession.getSearchFactory()\n   .buildQueryBuilder().forEntity( App.class ).get();\norg.apache.lucene.search.QueryluceneQuery =\n queryBuilder\n .keyword()\n .onFields(\"name\", \"description\")\n .matching(searchString)\n   .createQuery();\n...\n```", "```java\n...\norg.hibernate.Query hibernateQuery =\n   fullTextSession.createFullTextQuery(luceneQuery, App.class);\nList<App> apps = hibernateQuery.list();\nrequest.setAttribute(\"apps\", apps);\n...\n```", "```java\n<%@ page language=\"java\" contentType=\"text/html;\n   charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ tagliburi=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<html>\n<head>\n   <title>VAPORware Marketplace</title>\n</head>\n<body>\n   <h1>Search Results</h1>\n   <table>\n   <tr>\n      <td><b>Name:</b></td>\n      <td><b>Description:</b></td>\n   </tr>\n <c:forEachvar=\"app\" items=\"${apps}\">\n   <tr>\n      <td>${app.name}</td>\n      <td>${app.description}</td>\n   </tr>\n   </c:forEach>\n</table>\n</body>\n</html>\n```", "```java\nmvn archetype:generate -DgroupId=com.packpub.hibernatesearch.chapter1 -DartifactId=chapter1 -DarchetypeArtifactId=maven-archetype-webapp\n```", "```java\n<?xml version=\"1.0\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n      http://maven.apache.org/xsd/maven-4.0.0.xsd\"  \n\n         >\n\n   <modelVersion>4.0.0</modelVersion>\n   <groupId>com.packpub.hibernatesearch.chapter1</groupId>\n   <artifactId>chapter1</artifactId>\n   <version>0.0.1-SNAPSHOT</version>\n   <packaging>war</packaging>\n   <name>chapter1</name>\n   <url>http://maven.apache.org</url>\n\n   <dependencies>\n      <dependency>\n         <groupId>junit</groupId>\n         <artifactId>junit</artifactId>\n         <version>3.8.1</version>\n         <scope>test</scope>\n      </dependency>\n   </dependencies>\n\n   <build>\n <!-- This controls the filename of the built WAR file -->\n      <finalName>vaporware</finalName>\n   </build>\n</project>\n```", "```java\n...\n<dependency>\n   <groupId>org.hibernate</groupId>\n   <artifactId>hibernate-search</artifactId>\n   <version>4.2.0.Final</version>\n</dependency>\n...\n```", "```java\n...\n<dependency>\n  <groupId>com.h2database</groupId>\n  <artifactId>h2</artifactId>\n  <version>1.3.168</version>\n</dependency>\n<dependency>\n  <groupId>commons-dbcp</groupId>\n  <artifactId>commons-dbcp</artifactId>\n  <version>1.4</version>\n</dependency>\n...\n```", "```java\n...\n<dependency>\n  <groupId>javax.servlet</groupId>\n  <artifactId>javax.servlet-api</artifactId>\n  <version>3.0.1</version>\n  <scope>provided</scope>\n</dependency>\n...\n```", "```java\n<project>\n...\n<build>\n   <finalName>vaporware</finalName>\n   <plugins>\n      <plugin>\n         <groupId>org.mortbay.jetty</groupId>\n         <artifactId>jetty-maven-plugin</artifactId>\n         <version>8.1.7.v20120910</version>\n <configuration>\n <webAppConfig>\n <defaultsDescriptor>\n ${basedir}/src/main/webapp/WEB-INF/webdefault.xml\n </defaultsDescriptor>\n </webAppConfig>\n </configuration>\n      </plugin>\n   </plugins>\n</build>\n</project>\n```", "```java\n<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Mort Bay Consulting//DTD\n   Configure//EN\" \"http://jetty.mortbay.org/configure.dtd\">\n\n<Configure class=\"org.eclipse.jetty.webapp.WebAppContext\">\n   <New id=\"vaporwareDB\" class=\"org.eclipse.jetty.plus.jndi.Resource\">\n      <Arg></Arg>\n      <Arg>jdbc/vaporwareDB</Arg>\n      <Arg>\n      <New class=\"org.apache.commons.dbcp.BasicDataSource\">\n         <Set name=\"driverClassName\">org.h2.Driver</Set>\n         <Set name=\"url\">\n jdbc:h2:mem:vaporware;DB_CLOSE_DELAY=-1\n         </Set>\n      </New>\n      </Arg>\n   </New>\n</Configure>\n```", "```java\n<!DOCTYPE web-app PUBLIC\n      \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n      \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n<web-app \n\n      xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee   \n      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"      \n      version=\"3.0\">\n   <display-name>VAPORware Marketplace</display-name>\n   <resource-ref>\n      <res-ref-name>jdbc/vaporwareDB</res-ref-name>\n      <res-type>javax.sql.DataSource</res-type>\n      <res-auth>Container</res-auth>\n   </resource-ref>\n</web-app>\n```", "```java\n<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE hibernate-configuration PUBLIC\n      \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n      \"http://www.hibernate.org/dtd/hibernate-configuration-\n      3.0.dtd\">\n<hibernate-configuration>\n   <session-factory>\n      <property name=\"connection.datasource\">\n         jdbc/vaporwareDB\n      </property>\n      <property name=\"hibernate.dialect\">\n         org.hibernate.dialect.H2Dialect\n      </property>\n      <property name=\"hibernate.hbm2ddl.auto\">\n         update\n      </property>\n      <property name=\"hibernate.show_sql\">\n         false\n      </property>\n      <property name=hibernate.search.default.directory_provider\">\n         filesystem\n      </property>\n      <property name=\"hibernate.search.default.indexBase\">\n         target/lucenceIndex\n      </property>\n\n      <mapping class=\n              \"com.packtpub.hibernatesearch.domain.App\"/>\n   </session-factory>\n</hibernate-configuration>\n```", "```java\nmvn clean jetty:run\n\n```"]