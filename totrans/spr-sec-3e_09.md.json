["```java\nkeytool -genkeypair -alias jbcpclient -keyalg RSA -validity 365 -keystore jbcp_clientauth.p12 -storetype PKCS12\n```", "```java\nWhat is your first and last name?\n[Unknown]: admin1@example.com\n... etc\nIs CN=admin1@example.com, OU=JBCP Calendar, O=JBCP, L=Park City, ST=UT, C=US correct?\n[no]: yes\n```", "```java\n keytool -exportcert -alias jbcpclient -keystore jbcp_clientauth.p12 \n      -storetype PKCS12 -storepass changeit -file jbcp_clientauth.cer\n```", "```java\n keytool -importcert -alias jbcpclient -keystore tomcat.truststore \n      -file jbcp_clientauth.cer\n```", "```java\n Owner: CN=admin1@example.com, OU=JBCP Calendar, O=JBCP, L=Park City,\n      ST=UT, C=US Issuer: CN=admin1@example.com, OU=JBCP Calendar, O=JBCP, L=Park City,\n      ST=UT, C=US Serial number: 464fc10c Valid from: Fri Jun 23 11:10:19 MDT 2017 until: Thu Feb 12 10:10:19 \n      MST 2043      //Certificate fingerprints:\n\n MD5: 8D:27:CE:F7:8B:C3:BD:BD:64:D6:F5:24:D8:A1:8B:50 SHA1: C1:51:4A:47:EC:9D:01:5A:28:BB:59:F5:FC:10:87:EA:68:24:E3:1F SHA256: 2C:F6:2F:29:ED:09:48:FD:FE:A5:83:67:E0:A0:B9:DA:C5:3B:\n      FD:CF:4F:95:50:3A:\n      2C:B8:2B:BD:81:48:BB:EF Signature algorithm name: SHA256withRSA Version: 3      //Extensions\n\n #1: ObjectId: 2.5.29.14 Criticality=false\n SubjectKeyIdentifier [\n KeyIdentifier [\n 0000: 29 F3 A7 A1 8F D2 87 4B   EA 74 AC 8A 4B BC 4B 5D \n      )......K.t..K.K]\n 0010: 7C 9B 44 4A                                       ..DJ\n ]\n ]\n Trust this certificate? [no]: yes\n```", "```java\n//sever.xml\n\n<Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"\nmaxThreads=\"150\" scheme=\"https\" secure=\"true\"\nsslProtocol=\"TLS\"\nkeystoreFile=\"<KEYSTORE_PATH>/tomcat.keystore\"\nkeystorePass=\"changeit\"\ntruststoreFile=\"<CERT_PATH>/tomcat.truststore\"\ntruststorePass=\"changeit\"\nclientAuth=\"true\"\n/>\n```", "```java\n    server:\n    port: 8443\n    ssl:\n       key-store: \"classpath:keys/jbcp_clientauth.p12\"\n       key-store-password: changeit\n       keyStoreType: PKCS12\n       keyAlias: jbcpclient\n       protocol: TLS\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n    http.x509().userDetailsService(userDetailsService);\n```", "```java\n    Owner: CN=admin@example.com, OU=JBCP Calendar, O=JBCP, L=Park City, ST=UT, C=US\n```", "```java\n  http.x509()\n   .userDetailsService(userDetailsService)\n .subjectPrincipalRegex(\"CN=(.*?),\");\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n\n    @Autowired\n private Http403ForbiddenEntryPoint forbiddenEntryPoint;    http.exceptionHandling()\n .authenticationEntryPoint(forbiddenEntryPoint)       .accessDeniedPage(\"/errors/403\");\n    ...\n    @Bean\n    public Http403ForbiddenEntryPoint forbiddenEntryPoint(){\n       return new Http403ForbiddenEntryPoint();\n    }\n```", "```java\n   <Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"\n       maxThreads=\"150\" scheme=\"https\" secure=\"true\"\n       sslProtocol=\"TLS\"\n       keystoreFile=\"conf/tomcat.keystore\"\n       keystorePass=\"password\"\n       truststoreFile=\"conf/tomcat.truststore\"\n       truststorePass=\"password\"\n       clientAuth=\"want\"\n       />\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n\n    @Bean\n    public X509AuthenticationFilter x509Filter(AuthenticationManager  \n    authenticationManager){\n       return new X509AuthenticationFilter(){{\n           setAuthenticationManager(authenticationManager);\n       }};\n    }\n   @Bean\n    public PreAuthenticatedAuthenticationProvider    \n    preauthAuthenticationProvider(AuthenticationUserDetailsService   \n    authenticationUserDetailsService){\n       return new PreAuthenticatedAuthenticationProvider(){{\n         setPreAuthenticatedUserDetailsService(authenticationUserDetailsService);\n       }};\n    }\n    @Bean\n    public UserDetailsByNameServiceWrapper   \n    authenticationUserDetailsService(UserDetailsService userDetailsService){\n       return new UserDetailsByNameServiceWrapper(){{\n           setUserDetailsService(userDetailsService);\n       }};\n    }\n```", "```java\n    //src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n       http.x509()\n //.userDetailsService(userDetailsService)           .x509AuthenticationFilter(x509Filter());\n    ...\n    }\n    @Override\n    public void configure(AuthenticationManagerBuilder auth)\n    throws Exception {\n       auth\n .authenticationProvider(preAuthAuthenticationProvider)         .userDetailsService(userDetailsService)\n         .passwordEncoder(passwordEncoder());\n    }\n```"]