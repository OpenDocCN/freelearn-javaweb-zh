["```java\nPOST /transfer HTTP/1.1\nHost: bank.example.com\nCookie: JSESSIONID=randomid; Domain=bank.example.com; Secure; HttpOnly\nContent-Type: application/x-www-form-urlencoded\namount=100.00&routingNumber=1234&account=9876&_csrf=<secure-random token>\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n\nprotected void configure(HttpSecurity http) throws Exception {\n...\n// CSRF protection is enabled by default.\nhttp.csrf().disable(); ...\n}\n```", "```java\n    <form action=\"https://example.com/secureTransaction\" method=\"post\"   \n    enctype=\"text/plain\">\n    <input name='{\"amount\":100,\"routingNumber\":\"maliciousRoutingNumber\",\n    \"account\":\"evilsAccountNumber\", \"ignore_me\":\"' value='test\"}'\n    type='hidden'>\n    <input type=\"submit\" value=\"Win Money!\"/>\n    </form>This will produce the following JSON structure{ \"amount\":   \n    100,\"routingNumber\": \"maliciousRoutingNumber\",\"account\": \n    \"maliciousAccountNumber\",\"ignore_me\": \"=test\"\n    }\n```", "```java\n    <form action=\"https://example.com/secureTransaction.json\" method=\"post\"        \n    enctype=\"text/plain\">\n    <input name='{\"amount\":100,\"routingNumber\":\"maliciousRoutingNumber\",\n    \"account\":\"maliciousAccountNumber\", \"ignore_me\":\"' value='test\"}' \n    type='hidden'>\n    <input type=\"submit\" value=\"Win Money!\"/>\n    </form>\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n    @Override\n```", "```java\n    public void configure(HttpSecurity http) throws Exception {\n http.csrf();    }\n```", "```java\n    <c:url var=\"logoutUrl\" value=\"/logout\"/>\n    <form action=\"${logoutUrl}\" method=\"post\">\n      <input type=\"submit\" value=\"Log out\" />\n <input type=\"hidden\"name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n    </form>\n```", "```java\n    <form method=\"post\" action=\"/logout\">\n <sec:csrfInput />      ...\n    </form>\n```", "```java\n    <form method=\"POST\" action=\"/login\" ...>\n      ...\n <input type=\"hidden\" name=\"_csrf\" value=\"e86c9744-5b7d-4d5f-81d5-450463222908\">\n    </form>\n```", "```java\n    <html>\n       <head>\n <meta name=\"_csrf\" content=\"${_csrf.token}\"/>         <!-- default header name is X-CSRF-TOKEN -->\n <meta name=\"_csrf_header\" content=\"${_csrf.headerName}\"/>         ...\n       </head>\n     Â¦\n```", "```java\n<html>\n   <head>\n       ...\n <sec:csrfMetaTags />       <script type=\"text/javascript\" language=\"javascript\">\n var csrfParameter = $(\"meta[name='_csrf_parameter']\").attr(\"content\"); var csrfHeader = $(\"meta[name='_csrf_header']\").attr(\"content\"); var csrfToken = $(\"meta[name='_csrf']\").attr(\"content\");           ...\n       <script>\n   </head>\n   ...\n```", "```java\n$(function () {\nvar token = $(\"meta[name='_csrf']\").attr(\"content\");\nvar header = $(\"meta[name='_csrf_header']\").attr(\"content\");\n$(document).ajaxSend(function(e, xhr, options) {\n   xhr.setRequestHeader(header, token);\n});\n});\n```", "```java\n    var client = rest.chain(csrf, {\n    token: $(\"meta[name='_csrf']\").attr(\"content\"),\n    name: $(\"meta[name='_csrf_header']\").attr(\"content\")\n    });\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n\n@Override\npublic void configure(HttpSecurity http) throws Exception {\n http.exceptionHandling() .accessDeniedHandler(accessDeniedHandler); }\n@Bean\npublic CustomAccessDeniedHandler accessDeniedHandler(){\n return new CustomAccessDeniedHandler(); }\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n http.logout() .logoutRequestMatcher( new AntPathRequestMatcher(\"/logout\")); }\n```", "```java\n//src/main/java/com/packtpub/springsecurity/configuration/SecurityConfig.java\n\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n http.headers().disable(); }\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http\n .headers() .contentTypeOptions() .and() .xssProtection() .and() .cacheControl() .and() .httpStrictTransportSecurity() .and() .frameOptions()         .and()\n     ...;\n}\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   ...\n http.headers().frameOptions(); }\n```", "```java\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http.headers()\n .cacheControl(); }\n```", "```java\n@EnableWebMvc\npublic class WebMvcConfiguration\nextends WebMvcConfigurerAdapter {\n   @Override\n   public void addResourceHandlers(\n                   ResourceHandlerRegistry registry) {\n registry .addResourceHandler(\"/resources/**\") .addResourceLocations(\"/resources/\") .setCachePeriod(3_155_6926);   }\n   // ...\n}\n```", "```java\n    X-Content-Type-Options: nosniff\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http.headers()\n       .contentTypeOptions();\n}\n```", "```java\n    Strict-Transport-Security: max-age=31536000 ; includeSubDomains\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http.headers()\n .hsts(); }\n```", "```java\n    X-Frame-Options: DENY\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http.headers()\n .frameOptions(); }\n```", "```java\n    X-XSS-Protection: 1; mode=block\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http.headers()\n       .xssProtection();\n}\n```", "```java\nX-Content-Security-Policy: default-src 'self'\nX-WebKit-CSP: default-src 'self'\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http.headers()\n       .addHeaderWriter(\n         new StaticHeadersWriter(\n               \"X-Content-Security-Policy\",\n               \"default-src 'self'\"))\n       .addHeaderWriter(\n           new StaticHeadersWriter(\n               \"X-WebKit-CSP\",\n               \"default-src 'self'\"));\n}\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n   http.headers()\n       .addHeaderWriter(\n           new XFrameOptionsHeaderWriter(\n               XFrameOptionsMode.SAMEORIGIN));\n}\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n DelegatingRequestMatcherHeaderWriter headerWriter = new DelegatingRequestMatcherHeaderWriter( new AntPathRequestMatcher(\"/login\"), new XFrameOptionsHeaderWriter());   http.headers()\n       .addHeaderWriter(headerWriter);\n}\n```"]