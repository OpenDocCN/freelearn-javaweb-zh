["```java\n...\n@Column\n@Fields({\n   @Field,\n   @Field(name=\"sorting_name\", analyze=Analyze.NO)\n})\nprivate String name;\n...\n```", "```java\n...\n@Column\n@Field\n@NumericField\nprivate float price;\n...\n```", "```java\n@Entity\npublic class Device {\n\n   @Id\n   @GeneratedValue\n   private Long id;\n\n   @Column\n   @Field\n   private String manufacturer;\n\n   @Column\n   @Field\n   private String name;\n\n @ManyToMany(mappedBy=\"supportedDevices\",\n fetch=FetchType.EAGER,\n cascade = { CascadeType.ALL }\n )\n @ContainedIn\n private Set<App> supportedApps;\n\n   public Device() {\n   }\n\n   public Device(String manufacturer, String name,\n         Set<App>supportedApps) {\n      this.manufacturer = manufacturer;\n      this.name = name;\n      this.supportedApps = supportedApps;\n   }\n\n   //\n   // Getters and setters for all fields...\n   //\n\n}\n```", "```java\n...\n@ManyToMany(fetch=FetchType.EAGER, cascade = { CascadeType.ALL })\n@IndexedEmbedded(depth=1)\nprivate Set<Device>supportedDevices;\n...\n// Getter and setter methods\n...\n```", "```java\n...\nQueryBuilderqueryBuilder =\nfullTextSession.getSearchFactory().buildQueryBuilder()\n      .forEntity(App.class ).get();\norg.apache.lucene.search.QueryluceneQuery = queryBuilder\n   .keyword()\n .onFields(\"name\", \"description\", \"supportedDevices.name\")\n   .matching(searchString)\n   .createQuery();\norg.hibernate.QueryhibernateQuery =\n   fullTextSession.createFullTextQuery(luceneQuery, App.class);\n...\n```", "```java\n@Embeddable\npublic class CustomerReview {\n\n @Field\n   private String username;\n\n   private int stars;\n\n @Field\n   private String comments;\n\n   publicCustomerReview() {\n   }\n\n   public CustomerReview(String username,\n         int stars, String comments) {\n      this.username = username;\n      this.stars = stars;\n      this.comments = comments;\n   }\n\n   // Getter and setter methods...\n\n}\n```", "```java\n...\n@ElementCollection(fetch=FetchType.EAGER)\n@Fetch(FetchMode.SELECT)\n@IndexedEmbedded(depth=1)\nprivate Set<CustomerReview>customerReviews;\n...\n```", "```java\n...\nQueryBuilderqueryBuilder =\nfullTextSession.getSearchFactory().buildQueryBuilder()\n   .forEntity(App.class ).get();\norg.apache.lucene.search.QueryluceneQuery = queryBuilder\n   .keyword()\n   .onFields(\"name\", \"description\", \"supportedDevices.name\",\n      \"customerReviews.comments\")\n   .matching(searchString)\n   .createQuery();\norg.hibernate.QueryhibernateQuery = fullTextSession.createFullTextQuery(\n   luceneQuery, App.class);\n...\n```", "```java\n...\n@ElementCollection(fetch=FetchType.EAGER)\n@Fetch(FetchMode.SELECT)\n@IndexedEmbedded(depth=1, includePaths = { \"comments\" })\nprivate Set<CustomerReview>customerReviews;\n...\n```", "```java\npublic class SearchMappingFactory {\n\n @Factory\n public SearchMapping getSearchMapping() {\n\n      SearchMapping searchMapping = new SearchMapping();\n\n      searchMapping\n         .entity(App.class)\n            .indexed()\n            .interceptor(IndexWhenActiveInterceptor.class)\n            .property(\"id\", ElementType.METHOD).documentId()\n            .property(\"name\", ElementType.METHOD).field()\n            .property(\"description\", ElementType.METHOD).field()\n            .property(\"supportedDevices\",\n               ElementType.METHOD).indexEmbedded().depth(1)\n            .property(\"customerReviews\",\n               ElementType.METHOD).indexEmbedded().depth(1)\n\n         .entity(Device.class)\n            .property(\"manufacturer\", ElementType.METHOD).field()\n            .property(\"name\", ElementType.METHOD).field()\n            .property(\"supportedApps\",   \n               ElementType.METHOD).containedIn()\n         .entity(CustomerReview.class)\n            .property(\"stars\", ElementType.METHOD).field()\n            .property(\"comments\", ElementType.METHOD).field();\n\n      return searchMapping;\n   }\n\n}\n```", "```java\n...\n<property name=\"hibernate.search.model_mapping\">\n   com.packtpub.hibernatesearch.util.SearchMappingFactory\n</property>\n...\n```"]