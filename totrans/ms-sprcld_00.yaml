- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Developing, deploying, and operating cloud applications should be as easy as
    local applications. This should be the governing principle behind any cloud platform,
    library, or tool. Spring Cloud makes it easy to develop JVM applications for the
    cloud. In this book, we introduce you to Spring Cloud and help you master its
    features.
  prefs: []
  type: TYPE_NORMAL
- en: You will learn to configure the Spring Cloud server and run the Eureka server
    to enable service registration and discovery. Then you will learn about techniques
    related to load balancing and circuit breaking and utilize all the features of
    the Feign client. We then dive into advanced topics where you will learn to implement
    distributed tracing solutions for Spring Cloud and build message-driven microservice
    architectures.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book appeals to developers keen to take advantage of Spring Cloud, an open
    source library which helps developers quickly build distributed systems. Knowledge
    of Java and Spring Framework will be helpful, but no prior exposure to Spring
    Cloud is required.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](33ddbb93-e658-4d91-97f5-06d6167ef89e.xhtml), *Introduction to Microservices*,
    will introduce you to the microservices architecture, cloud environment, etc.
    You will learn the difference between a microservice based application and a monolith
    application while also learning how to migrate to a microservices application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](f4d51f21-614d-4a49-a288-43eb50c279e0.xhtml), *Spring for Microservices*,
    will introduce you Spring Boot framework. You will learn how to effictively use
    it to create microservice application.  We will cover such topics like creating
    REST API using Spring MVC annotations, providing API documentation using Swagger2,
    and exposing health checks and metrics using Spring Boot Actuator endpoints.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](5e461bca-a37d-4f72-b58f-5f14694d055f.xhtml), *Spring Cloud Overview*,
    will provide a short description of the main projects being a part of Spring Cloud.
    It will focus on describing the main patterns implemented by Spring Cloud and
    assigning them to the particular projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](b016b615-1eed-457a-9b9c-66ba07c9ce9e.xhtml), *Service Discovery*,
    will describe a service discovery pattern with Spring Cloud Netflix Eureka. You
    will learn how to run Eureka server in standalone mode and how to run multiple
    server instances with peer-to-peer replication. You will also learn how to enable
    discovery on the client side and register these clients in different zones.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](37142825-02d0-48a0-99df-1a1a88a1bbd4.xhtml), *Distributed Configuration
    with Spring Cloud Config*, will describe how use distributed configuration with
    Spring Cloud Config in your applications. You will learn how to enable different
    backend repositories of property sources and push change notifications using Spring
    Cloud Bus. We will compare discovery first bootstrap and config first bootstrap
    approaches to illustrate integration between discovery service and configuration
    server.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](1a5d14e0-a405-47d3-a554-2b9b06ee0e5f.xhtml), *Communication Between
    Microservices*, will describe the most important elements taking a part in an
    inter-service communication: HTTP clients and load balancers. You will learn how
    to use Spring RestTemplate, Ribbon, and Feign clients with or without service
    discovery.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](2ddad83c-3c9c-414d-a4f3-2d3856c0c5ed.xhtml), *Advanced Load Balancing
    and Circuit Breakers*, will described more advanced topics related to inter-service
    communication between microservices. You will learn how to implement different
    load balancing algorithms with Ribbon client, enabling circuit breaker pattern
    using Hystrix and using Hystrix dashboard to monitor communication statistics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](53e15517-d6f7-4337-be68-6d4f6d800b91.xhtml), *Routing and Filtering
    with API Gateway*, will compare two projects used as an API gateway and proxy
    for Spring Cloud applications: Spring Cloud Netlix Zuul and Spring Cloud Gateway.
    You will learn how to integrate them with service discovery and create simple
    and more advanced routing and filtering rules.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](a84b38a5-4a2f-4e4b-a7fe-6396a2864021.xhtml), *Distributed Logging
    and Tracing*, will introduce some popular tools for collecting and analizing logging
    and tracing information generated by microservices. You will learn how to use
    Spring Cloud Sleuth to append tracing information and correlating messages. We
    will run sample applications that integrates with Elastic Stack in order to sent
    there log messages, and Zipkin to collect traces.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](9e096a27-4c3f-4020-8f5c-cc16213e82c6.xhtml), *Additional Configuration
    and Discovery Features*, will introduce two popular products used for service
    discovery and distributed configuration: Consul and ZooKeeper. You will learn
    how to run these tools locally, and intergrate your Spring Cloud applications
    with them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](554c4049-1dc9-430d-8fe7-19f3b9ac99a3.xhtml), *Message-Driven Microservices*,
    will guide you how to provide asynchronous, message-driven communication between
    your microservices. You will learn how to integrate RabbitMQ and Apache Kafka
    message brokers with your Spring Cloud application to enable asynchronous one-to-one
    and publish/subscribe communication styles.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](b7e73d3e-b31b-4127-bb1a-54f527ac98a8.xhtml), *Securing an API*,
    will describe varius ways of securing your microservices. We will implement a
    system consisting of all previously introduced elements, that communicates with
    each other over SSL. You will also learn how to use OAuth2 and JWT token to authorize
    requests coming to your API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](8df3f1bf-de48-4a16-9270-fcb88368bbfc.xhtml), *Testing Java Microservices*,
    will describe different strategies of microservices testing. It will focus on
    showing consumer-driven contract tests, especially useful in microservice-based
    environment. You will how to use such frameworks like Hoverfly, Pact, Spring Cloud
    Contract, Gatling for implemnting different types of automated tests.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](0756243e-39c9-4696-8d79-4175e7cf4c48.xhtml), *Docker Support*,
    will provide a short introduction to Docker. It will focus on describing most
    commonly used Docker commands, which are used for running and monitoring microservices
    in containerized environment. You will also learn how to build and run containers
    using popular continuous integration server - Jenkins, and deploy them on Kubernetes
    platform.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](e14936a4-fb62-4459-84ff-bfc265b4677e.xhtml), *Spring Microservices
    on Cloud Platforms*, will introduce two popular cloud platforms that support Java
    applications: Pivotal Cloud Foundry and Heroku. You will learn how to deploy,
    start, scale and monitor your applications on these platforms using command-line
    tools or web console.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to successfully read through this book and work out all the code samples,
    we expect readers to fulfill the following requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: An active internet connection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Java 8+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Git client
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Mastering-Spring-Cloud](https://github.com/PacktPublishing/Mastering-Spring-Cloud).
    We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "The last available version of the HTTP API endpoint, `http://localhost:8889/client-service-zone3.yml`,
    returns data identical to the input file."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "In Google Chrome, you can import a PKCS12 keystore by going to
    section Settings *|* Show advanced settings... | HTTPS/SSL *|* Manage certificates."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  prefs: []
  type: TYPE_NORMAL
