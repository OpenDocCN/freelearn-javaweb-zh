["```java\nexport BOOK_HOME=~/Documents/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud\ngit clone https://github.com/PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud $BOOK_HOME\ncd $BOOK_HOME/Chapter19\n```", "```java\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: fluentd-hands-on-config\n  namespace: kube-system\ndata:\n  fluentd-hands-on.conf: |\n```", "```java\n    <match kubernetes.**istio**>\n      @type rewrite_tag_filter\n      <rule>\n        key log\n        pattern ^(.*)$\n        tag istio.${tag}\n      </rule>\n    </match>\n```", "```java\n    <match kubernetes.**hands-on**>\n      @type rewrite_tag_filter\n      <rule>\n        key log\n        pattern ^(.*)$\n        tag spring-boot.${tag}\n      </rule>\n    </match>\n```", "```java\n    <match spring-boot.**>\n      @type rewrite_tag_filter\n      <rule>\n        key log\n        pattern /^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3}.*/\n        tag parse.${tag}\n      </rule>\n      <rule>\n        key log\n        pattern /^.*/\n        tag check.exception.${tag}\n      </rule>\n    </match>\n```", "```java\n    <match check.exception.spring-boot.**>\n      @type detect_exceptions\n      languages java\n      remove_tag_prefix check\n      message log\n      multiline_flush_interval 5\n    </match>\n```", "```java\n    <filter parse.spring-boot.**>\n      @type parser\n      key_name log\n      time_key time\n      time_format %Y-%m-%d %H:%M:%S.%N\n      reserve_data true\n      format /^(?<time>\\d{4}-\\d{2}-\n      \\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3})\\s+\n      (?<spring.level>[^\\s]+)\\s+\n      (\\[(?<spring.service>[^,]*),(?<spring.trace>[^,]*),(?\n      <spring.span>[^,]*),[^\\]]*\\])\\s+\n      (?<spring.pid>\\d+)\\s+---\\s+\\[\\s*(?<spring.thread>[^\\]]+)\\]\\s+\n      (?<spring.class>[^\\s]+)\\s*:\\s+\n      (?<log>.*)$/\n    </filter>\n```", "```java\ncd $BOOK_HOME/Chapter19\neval $(minikube docker-env)\n./gradlew build && docker-compose build\n```", "```java\nkubectl delete namespace hands-on\nkubectl create namespace hands-on\nkubectl config set-context $(kubectl config current-context) --namespace=hands-on \n```", "```java\n./kubernetes/scripts/deploy-dev-env.bash\n```", "```java\nminikube tunnel\n```", "```java\n./test-em-all.bash\n```", "```java\nACCESS_TOKEN=$(curl -k https://writer:secret@minikube.me/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq .access_token -r)\n\ncurl -ks https://minikube.me/product-composite/2 -H \"Authorization: Bearer $ACCESS_TOKEN\" | jq .productId\n```", "```java\napiVersion: extensions/v1beta1\nkind: Deployment\n...\n      containers:\n      - name: elasticsearch\n        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.3.0\n        resources:\n          limits:\n            cpu: 500m\n            memory: 2Gi\n          requests:\n            cpu: 500m\n            memory: 2Gi\n```", "```java\napiVersion: extensions/v1beta1\nkind: Deployment\n...\n      containers:\n      - name: kibana\n        image: docker.elastic.co/kibana/kibana-oss:7.3.0\n        env:\n        - name: ELASTICSEARCH_URL\n          value: http://elasticsearch:9200\n```", "```java\nkubectl create namespace logging\n```", "```java\neval $(minikube docker-env)\ndocker pull docker.elastic.co/elasticsearch/elasticsearch-oss:7.3.0\ndocker pull docker.elastic.co/kibana/kibana-oss:7.3.0\n```", "```java\nkubectl apply -f kubernetes/efk/elasticsearch.yml -n logging\nkubectl wait --timeout=120s --for=condition=Ready pod -n logging --all \n```", "```java\ncurl http://elasticsearch.logging.svc.cluster.local:9200 -s | jq -r .tagline\n```", "```java\nkubectl apply -f kubernetes/efk/kibana.yml -n logging\nkubectl wait --timeout=120s --for=condition=Ready pod -n logging --all\n```", "```java\ncurl -o /dev/null -s -L -w \"%{http_code}\\n\" http://kibana.logging.svc.cluster.local:5601\n```", "```java\nLOG.info(\"Will get composite product info for product.id={}\", productId);\n```", "```java\nLOG.info(\"Will get product info for id={}\", productId);\n```", "```java\nLOG.info(\"Will get recommendations for product with id={}\", productId)\n```", "```java\nLOG.info(\"Will get reviews for product with id={}\", productId);\n```", "```java\nACCESS_TOKEN=$(curl -k https://writer:secret@minikube.me/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq .access_token -r)\n```", "```java\ncurl -X POST -k https://minikube.me/product-composite \\\n -H \"Content-Type: application/json\" \\\n -H \"Authorization: Bearer $ACCESS_TOKEN\" \\\n --data '{\"productId\":1234,\"name\":\"product name 1234\",\"weight\":1234}'\n```", "```java\ncurl -H \"Authorization: Bearer $ACCESS_TOKEN\" -k 'https://minikube.me/product-composite/1234'\n```", "```java\nFROM fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1\n\nRUN gem install fluent-plugin-detect-exceptions -v 0.0.12 \\\n && gem sources --clear-all \\\n && rm -rf /var/lib/apt/lists/* \\\n           /home/fluent/.gem/ruby/2.3.0/cache/*.gem\n```", "```java\napiVersion: extensions/v1beta1\nkind: DaemonSet\nmetadata:\n  name: fluentd\n  namespace: kube-system\n```", "```java\nspec:\n  template:\n    spec:\n      containers:\n      - name: fluentd\n        image: hands-on/fluentd:v1\n        env:\n          - name: FLUENT_ELASTICSEARCH_HOST\n            value: \"elasticsearch.logging\"\n          - name: FLUENT_ELASTICSEARCH_PORT\n            value: \"9200\"\n```", "```java\n        volumeMounts:\n        - name: varlog\n          mountPath: /var/log\n        - name: varlibdockercontainers\n          mountPath: /var/lib/docker/containers\n          readOnly: true\n        - name: journal\n          mountPath: /var/log/journal\n          readOnly: true\n        - name: fluentd-extra-config\n          mountPath: /fluentd/etc/conf.d\n      volumes:\n      - name: varlog\n        hostPath:\n          path: /var/log\n      - name: varlibdockercontainers\n        hostPath:\n          path: /var/lib/docker/containers\n      - name: journal\n        hostPath:\n          path: /run/log/journal\n      - name: fluentd-extra-config\n        configMap:\n          name: \"fluentd-hands-on-config\"\n```", "```java\neval $(minikube docker-env)\ndocker build -f kubernetes/efk/Dockerfile -t hands-on/fluentd:v1 kubernetes/efk/\n```", "```java\nkubectl apply -f kubernetes/efk/fluentd-hands-on-configmap.yml \nkubectl apply -f kubernetes/efk/fluentd-ds.yml\nkubectl wait --timeout=120s --for=condition=Ready pod -l app=fluentd -n kube-system\n```", "```java\nkubectl logs -n kube-system $(kubectl get pod -l app=fluentd -n kube-system -o jsonpath={.items..metadata.name}) | grep \"fluentd worker is now running worker\"\n```", "```java\ncurl http://elasticsearch.logging.svc.cluster.local:9200/_all/_count\n```", "```java\ncurl -H \"Authorization: Bearer $ACCESS_TOKEN\" -k https://minikube.me/product-composite/666?faultPercent=100\n```", "```java\nthrow new RuntimeException(\"Something went wrong...\");\n```", "```java\n<match kubernetes.**hands-on**>\n  @type rewrite_tag_filter\n  <rule>\n    key log\n    pattern ^(.*)$\n    tag spring-boot.${tag}\n  </rule>\n</match>\n```"]