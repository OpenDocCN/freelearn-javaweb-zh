["```java\nexport BOOK_HOME=~/Documents/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud\ngit clone https://github.com/PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud $BOOK_HOME\ncd $BOOK_HOME/Chapter14\n```", "```java\nimplementation('org.springframework.cloud:spring-cloud-starter-sleuth')   implementation('org.springframework.cloud:spring-cloud-starter-zipkin')\n```", "```java\nimplementation('org.springframework.cloud:spring-cloud-starter-stream-rabbit')\nimplementation('org.springframework.cloud:spring-cloud-starter-stream-kafka')\n```", "```java\nspring.zipkin.sender.type: rabbit\n```", "```java\nspring.sleuth.sampler.probability: 1.0\n```", "```java\n--- \nspring.profiles: kafka\n\nmanagement.health.rabbit.enabled: false\nspring.cloud.stream.defaultBinder: kafka\nspring.zipkin.sender.type: kafka\nspring.kafka.bootstrap-servers: kafka:9092\n```", "```java\nzipkin:\n  image: openzipkin/zipkin:2.12.9\n  networks:\n    - my-network\n  environment:\n    - RABBIT_ADDRESSES=rabbitmq\n    - STORAGE_TYPE=mem\n  mem_limit: 512m\n  ports:\n    - 9411:9411\n  depends_on:\n    rabbitmq:\n      condition: service_healthy\n```", "```java\nzipkin:\n  image: openzipkin/zipkin:2.12.9  \n  networks: \n    - my-network \n  environment:\n    - KAFKA_BOOTSTRAP_SERVERS=kafka:9092\n    - STORAGE_TYPE=mem \n  mem_limit: 512m\n  ports: \n    - 9411:9411 \n  depends_on: \n    - kafka\n```", "```java\n    environment:\n      - SPRING_PROFILES_ACTIVE=docker,kafka\n```", "```java\ncd $BOOK_HOME/Chapter14\n./gradlew build && docker-compose build\n```", "```java\n./test-em-all.bash start\n```", "```java\nunset ACCESS_TOKEN\nACCESS_TOKEN=$(curl -k https://writer:secret@localhost:8443/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq -r .access_token)\necho $ACCESS_TOKEN\n```", "```java\ncurl -H \"Authorization: Bearer $ACCESS_TOKEN\" -k https://localhost:8443/product-composite/2 -w \"%{http_code}\\n\" -o /dev/null -s\n```", "```java\ncurl -H \"Authorization: Bearer $ACCESS_TOKEN\" -k https://localhost:8443/product-composite/12345 -w \"%{http_code}\\n\" -o /dev/null -s\n```", "```java\ncurl -X DELETE -H \"Authorization: Bearer $ACCESS_TOKEN\" -k https://localhost:8443/product-composite/12345 -w \"%{http_code}\\n\" -o /dev/null -s\n```", "```java\ndocker-compose down\n```", "```java\nexport COMPOSE_FILE=docker-compose-kafka.yml\n./test-em-all.bash start\n```", "```java\ndocker-compose exec kafka /opt/kafka/bin/kafka-topics.sh --zookeeper zookeeper --list\n```", "```java\ndocker-compose exec kafka /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic zipkin --from-beginning --timeout-ms 1000\n```", "```java\ndocker-compose down\nunset COMPOSE_FILE\n```"]