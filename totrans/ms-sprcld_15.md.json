["```java\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Edgware.SR2</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.pivotal.spring.cloud</groupId>\n            <artifactId>spring-cloud-services-dependencies</artifactId>\n            <version>1.6.1.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n```", "```java\n<dependency>\n    <groupId>io.pivotal.spring.cloud</groupId>\n    <artifactId>spring-cloud-services-starter-circuit-breaker</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.pivotal.spring.cloud</groupId>\n    <artifactId>spring-cloud-services-starter-config-client</artifactId>\n</dependency>\n<dependency>\n    <groupId>io.pivotal.spring.cloud</groupId>\n    <artifactId>spring-cloud-services-starter-service-registry</artifactId>\n</dependency>\n```", "```java\n<dependency>\n <groupId>org.springframework.boot</groupId>\n <artifactId>spring-boot-starter-data-mongodb</artifactId>\n</dependency>\n```", "```java\nspring:\n data:\n  mongodb:\n   uri: ${vcap.services.mlab.credentials.uri}\n```", "```java\n@SpringBootApplication\n@EnableDiscoveryClient\n@EnableFeignClients\n@EnableCircuitBreaker\npublic class OrderApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(OrderApplication.class, args);\n    }\n\n}\n```", "```java\n$ cf login -a https://api.run.pivotal.io \n```", "```java\n$ cf push account-service -p target/account-service-1.0.0-SNAPSHOT.jar\n```", "```java\n---\napplications:\n- name: account-service\n  memory: 300M\n  random-route: true\n  path: target/account-service-1.0-SNAPSHOT.jar\n```", "```java\n$ cf logs account-service --recent\n```", "```java\n$ cf set-env account-service JAVA_OPTS \"-Xmx150M -Xss250K -XX:ReservedCodeCacheSize=70M -XX:MaxMetaspaceSize=90M\"\n$ cf restage account-service\n```", "```java\n$ cf bind-service account-service discovery-service\n$ cf bind-service account-service config-service\n$ cf bind-service account-service sample-db\n```", "```java\n$ mvn clean install cf:push\n```", "```java\n$ mvn cf:delete -Dcf.appname=product-service\n```", "```java\n$ mvn clean install cf:update\n```", "```java\n<settings>\n    ...\n    <servers>\n        <server>\n            <id>cloud-foundry-credentials</id>\n            <username>piotr.minkowski@play.pl</username>\n            <password>123456</password>\n        </server>\n    </servers>\n    ...\n</settings>\n```", "```java\n<plugin>\n    <groupId>org.cloudfoundry</groupId>\n    <artifactId>cf-maven-plugin</artifactId>\n    <version>1.1.3</version>\n    <configuration>\n        <target>http://api.run.pivotal.io</target>\n        <org>piotr.minkowski</org>\n        <space>development</space>\n        <appname>${project.artifactId}</appname>\n        <memory>300</memory>\n        <instances>1</instances>\n        <server>cloud-foundry-credentials</server>\n        <url>https://product-service-piomin.cfapps.io/</url>\n        <env>\n            <JAVA_OPTS>-Xmx150M -Xss250K -XX:ReservedCodeCacheSize=70M -XX:MaxMetaspaceSize=90M</JAVA_OPTS>\n        </env>\n        <services>\n            <service>\n                <name>sample-db</name>\n                <label>mlab</label>\n                <plan>sandbox</plan>\n            </service>\n            <service>\n                <name>discovery-service</name>\n                <label>p-service-registry</label>\n                <plan>standard</plan>\n            </service>\n            <service>\n                <name>config-service</name>\n                <label>p-config-server</label>\n                <plan>standard</plan>\n            </service>\n        </services>\n    </configuration>\n</plugin>\n```", "```java\n$ cf stop <app-name>\n$ cf restart <app-name>\n$ cf start <app-name>\n```", "```java\n---\napplications:\n- name: account-service\n  memory: 300M\n  instances: 2\n  host: account-service-piomin\n  domain: cfapps.io\n  path: target/account-service-1.0-SNAPSHOT.jar\n```", "```java\n{\n    \"count\": 1,\n    \"git\": {\n        \"password\": \"****\",\n        \"uri\": \"https://github.com/piomin/sample-spring-cloud-pcf-config.git\",\n        \"username\": \"piomin\"\n    }\n}\n```", "```java\n$ heroku login\nEnter your Heroku credentials:\nEmail: piotr.minkowski@play.pl\nPassword: ********\nLogged in as piotr.minkowski@play.pl \n```", "```java\n$ heroku create\nCreating app... done, aqueous-retreat-66586\nhttps://aqueous-retreat-66586.herokuapp.com/ | https://git.heroku.com/aqueous-retreat-66586.git\nGit remote heroku added \n```", "```java\n$ git push heroku master\n```", "```java\n$ heroku logs --tail\n$ heroku ps:scale web=2\n$ heroku addons:create mongolab\n$ heroku addons\n```", "```java\n$ heroku container:login\n```", "```java\n$ heroku container:push web\n```", "```java\n$ docker tag piomin/order-service registry.heroku.app/piomin-order-service/web\n$ docker push registry.heroku.app/piomin-order-service/web\n```", "```java\nspring:  \n   application:\n     name: account-service\n   data:\n     mongodb:\n       uri: ${MONGODB_URI}\n eureka:\n   instance:\n     hostname: ${HEROKU_APP_NAME}.herokuapp.com\n     nonSecurePort: 80\n   client:\n     serviceUrl:\n       defaultZone: http://piomin-discovery-service.herokuapp.com/eureka\n```", "```java\n$ heroku labs:enable runtime-dyno-metadata -a piomin-customer-service\n```"]