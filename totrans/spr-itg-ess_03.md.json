["```java\n<int:gateway id=\"feedService\" \n  service-interface=\"com.cpandey.siexample.service.FeedService\" \n  default-request-channel=\"requestChannel\" \n  default-reply-channel=\"replyChannel\"/>\n```", "```java\npublic interface FeedService {\n  FeedEntitycreateFeed(FeedEntity feed);\n  List<FeedEntity>readAllFeed();\n}\n```", "```java\n<int:gateway id=\"feedService\" \n  service-interface=\"com.cpandey.siexample.service.FeedService\" \n  <int:method name=\"createFeed\" \n    request-channel=\"createFeedRequestChannel\"/>\n  <int:method name=\"readAllFeed\" \n    request-channel=\"readFeedRequestChannel\"/>\n</int:gateway>\n```", "```java\npublic interface FeedService{\n  @Gateway(requestChannel=\"createFeedRequestChannel\")\n    FeedEntitycreateFeed(FeedEntity feed);\n  @Gateway(requestChannel=\"readFeedRequestChannel\")\n    List<FeedEntity>readAllFeed();\n}\n```", "```java\npublic interface FeedService {\n  Future<FeedEntity>createFeed(FeedEntity feed);\n  Future<List<FeedEntity>>readAllFeed();\n}\n```", "```java\n@MessageEndpoint\npublic class PrintFeed {\n  @ServiceActivator\n  public String upperCase(String input) {\n    //Do some business processing before passing the message\n    return \"Processed Message\";\n  }\n}\n```", "```java\n<int:service-activator input-channel=\"printFeedChannel\" ref=\"printFeed\" output-channel=\"printFeedChannel\" />\n```", "```java\n<int:service-activator ref=\"feedDaoService\"\n  method=\"printFeed\" input-channel=\"printAllFeedChannel\"/>\n\n<int:service-activator ref=\"feedService\" method=\"readFeed\" input-channel=\"printAllFeedChannel\"/>\n```", "```java\n<int:delayer id=\"feedDelayer\" \n  input-channel=\"feedInput\"\n  default-delay=\"10000\" \n  output-channel=\"feedOutput\"/>\n```", "```java\n<int:delayer id=\"feedDelayer\" \n  input-channel=\"feedInput\"\n  default-delay=\"10000\"\n  output-channel=\"feedOutput\"\n  expression=\"headers['DELAY_MESSAGE_BY']\"/>\n```", "```java\n`int:delayer`: This is the Spring Integration namespace support for the delayer`input-channel`: This is the channel from which messages have to be delayed`default-delay`: This is the default delay duration in milliseconds`output-channel`: This is the channel where messages should be dropped after the delay is over`expression`: This is the expression that is evaluated to get the delay interval for each of the messages based on a set header value\n```", "```java\n<int-jpa:inbound-channel-adapter \n  channel=\"readFeedInfo\" \n  entity-manager=\"entityManager\"\n  auto-startup=\"true\" \n  jpa-query=\"select f from FeedDetailsf\" \n  <int:poller fixed-rate=\"2000\" >\n    <int:transactional propagation=\"REQUIRED\" \n      transaction-manager=\"transactionManager\"/> \n  </int:poller>\n</int-jpa:inbound-channel-adapter>\n```", "```java\n<int:poller max-messages-per-poll=\"1\" fixed-rate=\"1000\"> \n  <int:transactional transaction-manager=\"transactionManager\"\n    isolation=\"DEFAULT\"\n    propagation=\"REQUIRED\"\n    read-only=\"true\"\n    timeout=\"1000\"/>\n</poller>\n```"]