- en: Introduction to Eclipse MicroProfile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Eclipse MicroProfile is a set of specifications for microservices written in
    the Java language. It is a project that is community-driven with many implementations
    in the market. The project, first announced in June 2016, continues to develop
    a set of common **Application Programming Interfaces** (**APIs**) for implementing
    Java microservices suitable for modern application development techniques, architectures,
    and environments. In this chapter, you will learn about the origin and importance
    of Eclipse MicroProfile.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise Java microservices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forces that fuel the digital economy and the need for multi-speed IT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing Eclipse MicroProfile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MicroProfile ...
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enterprise Java microservices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Application development no longer consists of using a single high-level programming
    language that runs on your favorite operating system. Nowadays, there are a myriad
    of languages, specifications, frameworks, proprietary and open source software
    and tools, underlying deployment infrastructures, and development methodologies
    that programmers need to learn to develop modern applications. Development at
    IT organizations has become polyglot, that is, multiple programming languages
    are used depending on the needs of specific projects. In this age of the cloud,
    containers, microservices, reactive programming, 12-factor applications, serverless,
    MINI services, polyglot environments, and so on, developers now have the option
    to choose the right tool for their task, making them more effective and productive.
  prefs: []
  type: TYPE_NORMAL
- en: With the recent move of Java EE to the Eclipse Foundation under the new name
    of Jakarta EE, MicroProfile will play a very important role in the future of Enterprise
    Java because of its synergy with Jakarta EE and the potential ways it can influence
    it.
  prefs: []
  type: TYPE_NORMAL
- en: The advent of the cloud and mobile, along with the acceleration of open and
    the **Internet of Things** (**IoT**) have brought about the digital economy. While
    this has opened up new markets, it has also imposed new demands on businesses
    and their IT organizations, which are now required to not only support and maintain
    traditional workloads but also deliver new applications at a faster pace.
  prefs: []
  type: TYPE_NORMAL
- en: Many technologies, languages, architectures, and frameworks have become popular
    within organizations in an attempt to tackle these new demands. One of these is
    microservices, specifically, Enterprise Java microservices, since Java is still
    one of the most popular languages in IT companies. But what is an Enterprise Java
    microservice?
  prefs: []
  type: TYPE_NORMAL
- en: 'An Enterprise Java microservice has the following features:'
  prefs: []
  type: TYPE_NORMAL
- en: It is written using the Java language.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can use any Java framework.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can use any Java API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It must be enterprise-grade; that is, reliable, available, scalable, secure,
    robust, and performant.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It must fulfill the characteristics of microservice architectures as listed
    at [https://martinfowler.com/microservices/](https://martinfowler.com/microservices/),
    which are as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Componentization via services
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Organized around business capabilities
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Products not projects
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart endpoints and dumb pipes
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Decentralized governance
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Decentralized data management
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Infrastructure automation
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Design for failure
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Evolutionary design
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Forces that fuel the digital economy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The terms **digital economy** and **digital transformation** describe the convergence
    of four different forces that are changing the needs of businesses: mobile, cloud,
    IoT, and open source:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0c47035f-e6df-4c8c-be4d-0c7bb3f2227c.png)'
  prefs: []
  type: TYPE_IMG
- en: Before the internet, organizations required brick-and-mortar stores or phone
    lines to conduct their businesses. The advent and accessibility of the internet
    created a **critical category-formation time** opportunity for organizations.
    Businesses started to use the internet mainly as a storefront or display in order
    to drive people to their brick-and-mortar stores. It was also used for advertising
    purposes.
  prefs: []
  type: TYPE_NORMAL
- en: Soon after this, businesses ...
  prefs: []
  type: TYPE_NORMAL
- en: Multi-speed IT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Implementing and delivering applications as fast as possible is not a new requirement.
    In fact, since the invention of the first computer, increasing efficiency has
    always been in the minds of computer scientists. High-level programming languages,
    encapsulation, reusability, inheritance, event-driven design, SOA, microservices,
    machine learning, and AI, are all concepts that address the challenge of doing
    things faster. With each wave of new technology, the gearbox adds a new speed
    requirement to the evolution of how we develop and deliver software. The digital
    economy has added another high-speed gear to the gearbox.
  prefs: []
  type: TYPE_NORMAL
- en: Businesses need to adapt to the new demands of the digital economy. Not only
    do they have to create, run, and support traditional-style applications, but also
    applications that conform to the new demands of the digital economy. They have
    to support both waterfall and DevOps processes, hybrid cloud infrastructures,
    and SOA and microservice architectures.
  prefs: []
  type: TYPE_NORMAL
- en: This imposes many challenges on IT organizations, whose processes, people, and
    technology have all been geared toward the implementation, delivery, and maintenance
    of traditional-style applications. Many organizations have already embarked on,
    or are starting, their journey of digital transformation, which addresses the
    challenges of the digital economy. This journey includes changes in technologies,
    frameworks, languages, and processes for the development, delivery, integration,
    and maintenance of applications.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you call it bimodal IT ([https://www.gartner.com/it-glossary/bimodal](https://www.gartner.com/it-glossary/bimodal))
    or a business technology strategy ([https://go.forrester.com/wp-content/uploads/Forrester-False-Promise-of-Bimodal-IT.pdf](https://go.forrester.com/wp-content/uploads/Forrester-False-Promise-of-Bimodal-IT.pdf)),
    the fact is that IT needs to deliver faster than ever before on the needs of the
    business, for both existing and new applications. This means IT needs to also
    speed up the maintenance and delivery of existing applications while exclusively
    adopting Agile methodologies for new applications. This does not preclude, however,
    the need to still use different development processes, release cycles, and support
    timelines to handle existing applications versus new applications, which is effectively
    the multi-speed nature of IT.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing Eclipse MicroProfile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Java EE has been an extremely successful platform. The **Java Community Process**
    (**JCP**) has been the steward of over 20 compatible implementations during its
    nearly 20-year history, resulting in a $4 billion industry. However, the management
    of Java EE by Oracle (unintentional or not) of Java EE (unintentional or not)
    stalled innovations, and while other standards have developed, the Java community
    worldwide and CIOs at all major enterprises desired an open standard for Java
    within their enterprise.
  prefs: []
  type: TYPE_NORMAL
- en: In its early stages, J2EE grew somewhat quickly from J2EE 1.2 up to J2EE 1.4,
    as the platform needed to address the immediate requirements of the enterprise.
    Beginning with Java EE 5 in May 2006, the pace began to ...
  prefs: []
  type: TYPE_NORMAL
- en: MicroProfile value proposition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For customers who trust Enterprise Java to run their production workloads, Eclipse
    MicroProfile provides customers with a vendor-neutral specification for Enterprise
    Java microservices. Eclipse MicroProfile enables them to better fulfill the needs
    of the business via improved agility and scalability, faster time-to-market, higher
    development productivity, easier debugging and maintenance, and continuous integration
    and continuous deployment.
  prefs: []
  type: TYPE_NORMAL
- en: 'The benefits customers get by using Eclipse MicroProfile are the same benefits
    gained by using microservices. In general, according to Martin Fowler, a respected
    software developer, author, and speaker, microservices provide the following benefits
    ([https://martinfowler.com/articles/microservice-trade-offs.html](https://martinfowler.com/articles/microservice-trade-offs.html)):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Strong module boundaries**: Microservices reinforce modular structure, which
    is particularly important for larger teams.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Independent deployment**: Simple services are easier to deploy and, since
    they are autonomous, they are less likely to cause system failures when things
    go wrong.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Technology diversity**: With microservices, you can mix multiple languages,
    development frameworks, and data storage technologies.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In addition to the general benefits of microservices, Eclipse MicroProfile
    specifically provides the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The benefits of community collaboration**: Eclipse MicroProfile is an open
    source project run by the community. No single vendor controls or determines the
    evolution and maturation of the specification.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Freedom of choice of implementation**: Many vendors have implemented Eclipse
    MicroProfile as part of their software stacks and customers have the option to
    select whichever implementation is the most appropriate for their environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Faster evolution**: Since Eclipse MicroProfile is an innovation project,
    new and improved functionality is delivered frequently in time-boxed releases.
    This allows developers and customers to have these at their fingertips and start
    leveraging updates in their projects sooner rather than later.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Based on decades of experience:** Not only do the specification''s subject-matter
    experts bring with them a vast wealth of experience, expertise, and knowledge,
    but Eclipse MicroProfile also leverages market-tested and production-proven capabilities
    in the Java EE APIs that it builds upon, offering maturity to developers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Familiarity with Enterprise Java**: Eclipse MicroProfile builds upon familiar
    Enterprise Java constructs, making it easy for Enterprise Java developers to adopt.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**No retraining needed**: Your existing Enterprise Java developers will find
    Eclipse MicroProfile to be a natural progression of their expertise. There is
    little to no learning curve. They will be able to leverage their skills.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Interoperability:** The different MicroProfile implementations are interoperable,
    with each one providing users with the freedom to select one, or combine many,
    MicroProfile implementations in an application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiple ways to use the APIs**: Eclipse MicroProfile APIs provide easy-to-use
    interfaces, such as CDI-based, programmatic, command-line, and file-based (configuration-based)
    interfaces.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A thorough set of artifacts**: Each API includes a **Test Compatibility Kit**
    (**TCK**), Javadoc, PDF document for download, API Maven artifact coordinates,
    Git tags, and downloads (specification and source code).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many other benefits that are particular to each API. These are discussed in
    each Eclipse MicroProfile sub-project section throughout this book.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have discussed the new trends in software development, consisting
    of polyglot deployments using new approaches, such as microservices, containers,
    mobile, and Internet-of-Things (IoT) running on-premises and in the cloud; and
    in hybrid or multi-cloud environments. These trends required the evolution of
    Enterprise Java in the microservices world, which is what MicroProfile addresses.
    The four forces that fuel the digital economy, namely, cloud, mobile, IoT, and
    open source, have contributed to the need for organizations to have multi-speed
    IT departments, which are necessary to maintain and evolve their existing applications
    as well as to take advantage of new technological trends to develop new applications
    that ...
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is an Enterprise Java microservice?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the four forces that fuel the digital economy?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why are IT organizations having to develop and maintain applications at different
    speeds? What is multi-speed IT?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why are Java and Java EE still important to organizations?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What was one of the key reasons that caused MicroProfile to come into existence?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the APIs/specifications that are part of the MicroProfile umbrella/platform
    release?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What release of MicroProfile introduced the first revolutionary changes?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why is MicroProfile valuable to organizations?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
