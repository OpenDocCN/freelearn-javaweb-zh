["```java\nbrew install istioctl\n```", "```java\nexport BOOK_HOME=~/Documents/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud\ngit clone https://github.com/PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud $BOOK_HOME\ncd $BOOK_HOME/Chapter18\n```", "```java\nkubectl get deployment sample-deployment -o yaml | istioctl kube-inject -f - | kubectl apply -f -\n```", "```java\ncd $BOOK_HOME/Chapter18\ncurl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.2.4 sh -\n```", "```java\nminikube status\n```", "```java\nfor i in istio-1.2.4/install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done\n```", "```java\nkubectl apply -f istio-1.2.4/install/kubernetes/istio-demo.yaml\n```", "```java\nkubectl -n istio-system wait --timeout=600s --for=condition=available deployment --all\n```", "```java\nkubectl -n istio-system apply -f kubernetes/istio/setup/kiali-configmap.yml && \\\nkubectl -n istio-system delete pod -l app=kiali && \\\nkubectl -n istio-system wait --timeout=60s --for=condition=ready pod -l app=kiali\n```", "```java\nminikube tunnel\n```", "```java\nINGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n```", "```java\necho \"$INGRESS_HOST minikube.me\" | sudo tee -a /etc/hosts\n```", "```java\ncurl -o /dev/null -s -L -w \"%{http_code}\" http://kiali.istio-system.svc.cluster.local:20001/kiali/\ncurl -o /dev/null -s -L -w \"%{http_code}\" http://grafana.istio-system.svc.cluster.local:3000\ncurl -o /dev/null -s -L -w \"%{http_code}\" http://jaeger-query.istio-system.svc.cluster.local:16686\n```", "```java\ncurl -k http://product-composite.hands-on.svc.cluster.local:4004/actuator/health\n```", "```java\nmysql -umysql-user-dev -pmysql-pwd-dev review-db -e \"select * from reviews\" -h mysql.hands-on.svc.cluster.local\n```", "```java\nmongo --host mongodb.hands-on.svc.cluster.local -u mongodb-user-dev -p mongodb-pwd-dev --authenticationDatabase admin product-db --eval \"db.products.find()\"\n\nmongo --host mongodb.hands-on.svc.cluster.local -u mongodb-user-dev -p mongodb-pwd-dev --authenticationDatabase admin recommendation-db --eval \"db.recommendations.find()\"\n```", "```java\nkubectl get deployment auth-server product product-composite recommendation review -o yaml | istioctl kube-inject -f - | kubectl apply -f -\n```", "```java\nwaitForPods 5 'version=<version>'\n```", "```java\nmetadata:\n  labels:\n    version: latest\n```", "```java\nkubectl wait --timeout=120s --for=condition=Ready pod --all\n```", "```java\nbases:\n- ../../base/deployments\n- ../../base/services\n- ../../base/istio\n```", "```java\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: hands-on-gw\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - \"minikube.me\"\n    port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt\n      privateKey: /etc/istio/ingressgateway-certs/tls.key\n```", "```java\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: product-composite-vs\nspec:\n  hosts:\n  - \"minikube.me\"\n  gateways:\n  - hands-on-gw\n  http:\n  - match:\n    - uri:\n        prefix: /product-composite\n    route:\n    - destination:\n        port:\n          number: 80\n        host: product-composite\n```", "```java\ncd $BOOK_HOME/Chapter18\neval $(minikube docker-env)\n./gradlew build && docker-compose build\n```", "```java\nkubectl delete namespace hands-on\nkubectl create namespace hands-on\nkubectl config set-context $(kubectl config current-context) --namespace=hands-on \n```", "```java\n./kubernetes/scripts/deploy-dev-env.bash \n```", "```java\nkubectl get pods\n```", "```java\n./test-em-all.bash\n```", "```java\nACCESS_TOKEN=$(curl -k https://writer:secret@minikube.me/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq .access_token -r)\n\ncurl -ks https://minikube.me/product-composite/2 -H \"Authorization: Bearer $ACCESS_TOKEN\" | jq .productId\n```", "```java\nmanagement.server.port: 4004\n```", "```java\nmanagement.server.port: 8443\n```", "```java\nACCESS_TOKEN=$(curl -k https://writer:secret@minikube.me/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq .access_token -r)\n\nsiege https://minikube.me/product-composite/2 -H \"Authorization: Bearer $ACCESS_TOKEN\" -c1 -d1\n```", "```java\nspec:\n  servers:\n  - hosts:\n    - \"minikube.me\"\n    ...\n    tls:\n      mode: SIMPLE\n      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt\n      privateKey: /etc/istio/ingressgateway-certs/tls.key \n```", "```java\nkubectl -n istio-system get deploy istio-ingressgateway -o json\n```", "```java\nkubectl create -n istio-system secret tls istio-ingressgateway-certs \\\n--key kubernetes/cert/tls.key --cert kubernetes/cert/tls.crt\n```", "```java\nkeytool -printcert -sslserver minikube.me:443 | grep -E \"Owner:|Issuer:\"\n```", "```java\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"Policy\"\nmetadata:\n  name: \"jwt-authentication-policy\"\nspec:\n  targets:\n  - name: product-composite\n  peers:\n  - mtls:\n      mode: PERMISSIVE\n  origins:\n  - jwt:\n      issuer: \"http://auth-server.local\"\n      jwksUri: \"http://auth-server.hands-on.svc.cluster.local/.well-known/jwks.json\"\n  principalBinding: USE_ORIGIN\n```", "```java\ncurl https://minikube.me/product-composite/2 -kw \" HTTP Code: %{http_code}\\n\"\n```", "```java\nkubectl delete -f kubernetes/services/base/istio/jwt-authentication-policy.yml\n```", "```java\nkubectl apply -f kubernetes/services/base/istio/jwt-authentication-policy.yml\n```", "```java\n  - jwt:\n      issuer: \"https://dev-magnus.eu.auth0.com/\" \n      jwksUri: \"https://dev-magnus.eu.auth0.com/.well-known/jwks.json\"\n```", "```java\nkubectl get meshpolicy default -o yaml\n```", "```java\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: product-composite-dr\nspec:\n  host: product-composite\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n```", "```java\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: product-vs\nspec:\n  hosts:\n    - product\n  http:\n  - route:\n    - destination:\n        host: product\n    fault:\n abort:\n        httpStatus: 500\n        percent: 20\n```", "```java\nkubectl apply -f kubernetes/resilience-tests/product-virtual-service-with-faults.yml\n```", "```java\nkubectl delete -f kubernetes/resilience-tests/product-virtual-service-with-faults.yml\n```", "```java\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: product-vs\nspec:\n  hosts:\n    - product\n  http:\n  - route:\n    - destination:\n        host: product\n    fault:\n      delay:\n        fixedDelay: 3s\n        percent: 100\n```", "```java\nkubectl apply -f kubernetes/resilience-tests/product-virtual-service-with-delay.yml\n```", "```java\nACCESS_TOKEN=$(curl -k https://writer:secret@minikube.me/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq .access_token -r)\n```", "```java\nfor i in {1..6}; do time curl -k https://minikube.me/product-composite/2 -H \"Authorization: Bearer $ACCESS_TOKEN\"; done\n```", "```java\nkubectl delete -f kubernetes/resilience-tests/product-virtual-service-with-delay.yml\n```", "```java\nnameSuffix: -v1\nbases:\n- ../../../base/deployments\npatchesStrategicMerge:\n- ...\n```", "```java\nkubectl apply -k kubernetes/services/base/services\nkubectl apply -k kubernetes/services/overlays/prod/v1\nkubectl apply -k kubernetes/services/overlays/prod/v2\n```", "```java\n  http:\n  - route:\n    - destination:\n        host: product\n        subset: old\n      weight: 100\n    - destination:\n        host: product\n        subset: new\n      weight: 0\n```", "```java\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: product-dr\nspec:\n  host: product\n  subsets:\n  - name: old\n    labels:\n      version: v1\n  - name: new\n    labels:\n      version: v2\n```", "```java\n  http:\n  - match:\n    - headers:\n        X-group:\n          exact: test\n    route:\n    - destination:\n        host: product\n        subset: new\n```", "```java\nkubectl apply -k kubernetes/services/overlays/prod/istio\n```", "```java\nkubectl delete namespace hands-on\nkubectl create namespace hands-on\n```", "```java\n./kubernetes/scripts/deploy-prod-env.bash \n```", "```java\nSKIP_CB_TESTS=true ./test-em-all.bash\n```", "```java\nACCESS_TOKEN=$(curl -k https://writer:secret@minikube.me/oauth/token -d grant_type=password -d username=magnus -d password=password -s | jq .access_token -r)\n\nsiege https://minikube.me/product-composite/2 -H \"Authorization: Bearer $ACCESS_TOKEN\" -c1 -d1\n```", "```java\ncurl -ks https://minikube.me/product-composite/2 -H \"Authorization: Bearer $ACCESS_TOKEN\" | jq .serviceAddresses\n```", "```java\ncurl -ks https://minikube.me/product-composite/2 -H \"Authorization: Bearer $ACCESS_TOKEN\" -H \"X-group: test\" | jq .serviceAddresses\n```", "```java\nspec:\n  http:\n  - match:\n    ...\n  - route:\n    - destination:\n        host: review\n        subset: old\n      weight: 100\n    - destination:\n        host: review\n        subset: new\n      weight: 0 \n```", "```java\nkubectl patch virtualservice review-vs --type=json -p='[\n {\"op\": \"add\", \"path\": \"/spec/http/1/route/0/weight\", \"value\": \"80\"},\n {\"op\": \"add\", \"path\": \"/spec/http/1/route/1/weight\", \"value\": \"20\"}\n]'\n```", "```java\nkubectl patch virtualservice review-vs --type=json -p='[\n {\"op\": \"add\", \"path\": \"/spec/http/1/route/0/weight\", \"value\": \n  \"80\"},\n {\"op\": \"add\", \"path\": \"/spec/http/1/route/1/weight\", \"value\":  \n  \"20\"}\n ]'\n```", "```java\n./kubernetes/scripts/route-all-traffic-to-v2-services.bash\n```", "```java\n./kubernetes/scripts/route-all-traffic-to-v1-services.bash\n```", "```java\nHOST=localhost PORT=8443 HEALTH_URL=https://localhost:8443 ./test-em-all.bash start stop\n```"]