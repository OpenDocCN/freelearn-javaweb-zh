["```java\ndocker pull docker.elastic.co/elasticsearch/elasticsearch:5.5.1 \n```", "```java\n{ \n  \"name\" : \"Leech\", \n  \"cluster_name\" : \"elasticsearch\", \n  \"version\" : { \n    \"number\" : \"2.3.1\", \n    \"build_hash\" : \"bd980929010aef404e7cb0843e61d0665269fc39\", \n    \"build_timestamp\" : \"2016-04-04T12:25:05Z\", \n    \"build_snapshot\" : false, \n    \"lucene_version\" : \"5.5.0\" \n  }, \n  \"tagline\" : \"You Know, for Search\" \n}\n```", "```java\n  plugin -install mobz/elasticsearch-head\n\n```", "```java\ndocker pull docker.elastic.co/logstash/logstash:5.5.1 \n```", "```java\ninput { \n  ### OTRS ### \n  file { \n    path => \"\\logs\\otrs-service.log\" \n    type => \"otrs-api\" \n    codec => \"json\" \n    start_position => \"beginning\" \n  } \n\n  ### edge ### \n  file { \n    path => \"/logs/edge-server.log\" \n    type => \"edge-server\" \n    codec => \"json\" \n  } \n} \n\noutput { \n  stdout { \n    codec => rubydebug \n  } \n  elasticsearch { \n    hosts => \"localhost:9200\" \n  } \n} \n```", "```java\ndocker pull docker.elastic.co/kibana/kibana:5.5.1 \n```", "```java\n   elasticsearch.url: \"http://localhost:9200\"\n```", "```java\nversion: '2' \n\nservices: \n  elasticsearch: \n    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.1 \n    ports: \n      - \"9200:9200\" \n      - \"9300:9300\" \n    environment: \n      ES_JAVA_OPTS: \"-Xmx256m -Xms256m\" \n      xpack.security.enabled: \"false\" \n      xpack.monitoring.enabled: \"false\" \n      # below is required for running in dev mode. For prod mode remove them and vm_max_map_count kernel setting needs to be set to at least 262144 \n      http.host: \"0.0.0.0\" \n      transport.host: \"127.0.0.1\" \n    networks: \n      - elk \n\n  logstash: \n    image: docker.elastic.co/logstash/logstash:5.5.1 \n    #volumes: \n    #  - ~/pipeline:/usr/share/logstash/pipeline \n    #  windows manually copy to docker cp pipleline/logstash.conf 305321857e9f:/usr/share/logstash/pipeline. restart container after that \n    ports: \n      - \"5001:5001\" \n    environment: \n      LS_JAVA_OPTS: \"-Xmx256m -Xms256m\" \n      xpack.monitoring.enabled: \"false\" \n      xpack.monitoring.elasticsearch.url: \"http://192.168.99.100:9200\" \n      command: logstash -e 'input { tcp { port => 5001 codec => \"json\" } } output { elasticsearch { hosts => \"192.168.99.100\" index => \"mmj\" } }' \n    networks: \n      - elk \n    depends_on: \n      - elasticsearch \n\n  kibana: \n    image: docker.elastic.co/kibana/kibana:5.5.1 \n    ports: \n      - \"5601:5601\" \n    environment: \n      xpack.security.enabled: \"false\" \n      xpack.reporting.enabled: \"false\" \n      xpack.monitoring.enabled: \"false\" \n    networks: \n      - elk \n    depends_on: \n      - elasticsearch \n\nnetworks: \n  elk: \n    driver: bridge \n\n```", "```java\ndocker-compose -f docker-compose-elk.yml up -d \n```", "```java\ndocker cp pipleline/logstash.conf <logstash container id>:/usr/share/logstash/pipeline \n```", "```java\ninput { \n  tcp { \n    port => 5001 \n    codec => \"json\" \n  } \n} \n\noutput { \n  elasticsearch { \n    hosts => \"elasticsearch:9200\" \n  } \n} \n```", "```java\n... \n<dependency> \n    <groupId>net.logstash.logback</groupId> \n    <artifactId>logstash-logback-encoder</artifactId> \n    <version>4.6</version> \n</dependency> \n<dependency> \n    <groupId>ch.qos.logback</groupId> \n    <artifactId>logback-core</artifactId> \n    <version>1.1.9</version> \n</dependency> \n... \n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<configuration debug=\"true\"> \n    <appender name=\"stash\" class=\"net.logstash.logback.appender.LogstashTcpSocketAppender\"> \n        <destination>192.168.99.100:5001</destination> \n        <!-- encoder is required --> \n        <encoder class=\"net.logstash.logback.encoder.LogstashEncoder\" /> \n        <keepAliveDuration>5 minutes</keepAliveDuration> \n    </appender> \n    <appender name=\"stdout\" class=\"ch.qos.logback.core.ConsoleAppender\"> \n        <encoder> \n            <pattern>%d{HH:mm:ss.SSS} [%thread, %X{X-B3-TraceId:-},%X{X-B3-SpanId:-}] %-5level %logger{36} - %msg%n</pattern> \n        </encoder> \n    </appender> \n\n    <property name=\"spring.application.name\" value=\"nameOfService\" scope=\"context\"/> \n\n    <root level=\"INFO\"> \n        <appender-ref ref=\"stash\" /> \n        <appender-ref ref=\"stdout\" /> \n    </root> \n\n    <shutdownHook class=\"ch.qos.logback.core.hook.DelayingShutdownHook\"/> \n</configuration>\n```", "```java\nhttp://192.168.99.100:9200/  \n```", "```java\nhttp://192.168.99.100:9200/_cat/indices?v \nhttp://192.168.99.100:9200/_aliases?pretty \n```", "```java\nhttp://192.168.99.100:5601/ \n```", "```java\n<dependency> \n    <groupId>org.springframework.cloud</groupId> \n    <artifactId>spring-cloud-starter-sleuth</artifactId> \n</dependency> \n<dependency> \n    <groupId>org.springframework.cloud</groupId> \n    <artifactId>spring-cloud-sleuth-zipkin</artifactId> \n</dependency> \n```", "```java\nhttp://<zipkin host name>:9411/zipkin/ \n```"]