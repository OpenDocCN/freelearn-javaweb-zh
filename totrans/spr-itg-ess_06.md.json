["```java\n    xmlns:int-file \n      =\"http://www.springframework.org/schema/integration/file\"\n    xsi:schemaLocation= \n    \"http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd\">\n    ```", "```java\n    <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-file</artifactId>\n        <version>${spring.integration.version}</version>\n    </dependency>\n    ```", "```java\n<int-file:inbound-channel-adapter \n  id=\"fileAdapter\" \n  directory=\"C:\\Chandan\\Projects\\inputfolderforsi\" \n  channel=\"filesOutputChannel\" \n  prevent-duplicates=\"true\" \n  filename-pattern=\"*.txt\">\n    <int:poller fixed-rate=\"1000\" />\n    <int-file:nio-locker/>\n  </int-file:inbound-channel-adapter>\n```", "```java\n<bean \n  id=\"pollableFileSource\" \n  class=\"org.springframework.integration.file.\n    FileReadingMessageSource\" \n  p:directory=\"C:\\Chandan\\Projects\\inputfolderforsi\" />\n```", "```java\n<int-file:inbound-channel-adapter \n  id=\"filestest1\"\n  directory=\"file:${input.directory}\"\n  filename-pattern=\"testing*\" />\n\n<int-file:inbound-channel-adapter \n  id=\"filestest2\"\n  directory=\"file:${input.directory}\"\n  filename-regex=\"testing[0-9]+\\.jpg\" />\n```", "```java\npublic class CustomFilter implements FileListFilter<Feed> {\n  public List< Feed > filterFiles(Feed [] feeds) {\n    List< Feed > filteredList = new ArrayList< Feed >();\n    // implement your filtering logic here\n    return filteredList;\n  }\n}\n```", "```java\n<int-file:inbound-channel-adapter \n  id=\"fileReader\"\n  directory=\"C:\\Chandan\\Projects\\inputfolderforsi\"  \n  prevent-duplicates=\"true\">\n    <int-file:nio-locker/>\n</int-file:inbound-channel-adapter>\n```", "```java\n<int-file:inbound-channel-adapter \n  id=\"fileAdapter\"\n  directory=\"C:\\Chandan\\Projects\\inputfolderforsi\" \n  prevent-duplicates=\"true\">\n  <int-file:locker ref=\"customLocker\"/>\n</int-file:inbound-channel-adapter>\n```", "```java\n<int-file:outbound-channel-adapter \n  channel=\"filesOutputChannel\" directory=\"C:\\Chandan\\Projects\\outputfolderforsi\" \n  delete-source-files=\"true\"/>\n```", "```java\n<int-file:outbound-gateway \n  request-channel=\"filesOutputChannel\"\n  reply-channel=\"filesOutputChannelGateway\"\n  directory=\"C:\\Chandan\\Projects\\outputfolderforsi\\filegateway\"\n  mode=\"REPLACE\" delete-source-files=\"true\"/>\n```", "```java\n<int:service-activator \n  id=\"fileSa\" \n  ref=\"commonServiceActivator\"\n  method=\"printFileName\" input-channel=\"filesOutputChannelGateway\"/>\n```", "```java\n<int-file:file-to-bytes-transformer  \n  input-channel=\"input\" \n  output-channel=\"output\"\n  delete-files=\"true\"/>\n\n<int-file:file-to-string-transformer \n  input-channel=\"input\" \n  output-channel=\"output\"\n  delete-files=\"true\" \n  charset=\"UTF-8\"/>\n```", "```java\n    xmlns:int-ftp=\n      \"http://www.springframework.org/schema/integration/ftp\"\n    xsi:schemaLocation=\n      \"http://www.springframework.org/schema/integration/ftp\n    http://www.springframework.org/schema/integration/ftp/spring-integration-ftp.xsd\"\n    ```", "```java\n      <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-ftp</artifactId>\n        <version>${spring.integration.version}</version>\n      </dependency>\n    ```", "```java\n<bean id=\"ftpClientSessionFactory\"\n  class=\"org.springframework.integration.ftp.session.DefaultFtpSessionFactory\">\n  <property name=\"host\" value=\"localhost\"/>\n  <property name=\"port\" value=\"21\"/>\n  <property name=\"username\" value=\"testuser\"/>\n  <property name=\"password\" value=\"testuser\"/>\n</bean>\n```", "```java\n<int-ftp:inbound-channel-adapter \n  channel=\"ftpOutputChannel\"\n  session-factory=\"ftpClientSessionFactory\"\n  remote-directory=\"/\"\n  local-directory=\"C:\\\\Chandan\\\\Projects\\\\siexample\\\\ftp\\\\ftplocalfolder\"\n  auto-create-local-directory=\"true\"\n  delete-remote-files=\"true\"\n  filename-pattern=\"*.txt\"\n  local-filename-generator-expression=\"#this.toLowerCase() + '.trns'\">\n  <int:poller fixed-rate=\"1000\"/>\n</int-ftp:inbound-channel-adapter> \n```", "```java\nserver's remote directory. The remote server session is determined as usual by the session factory. Make sure the username configured in the session object has the necessary permission to write to the remote directory. The following configuration sets up a FTP adapter that can upload files in the specified directory:\n```", "```java\n  <int-ftp:outbound-channel-adapter channel=\"ftpOutputChannel\"\n    remote-directory=\"/uploadfolder\"\n    session-factory=\"ftpClientSessionFactory\"\n    auto-create-directory=\"true\">\n  </int-ftp:outbound-channel-adapter>\n```", "```java\n<int-ftp:outbound-gateway id=\"ftpGateway\"\n    session-factory=\"ftpClientSessionFactory\"\n    request-channel=\"commandInChannel\"\n    command=\"ls\"\n    command-options=\"-1\"\n    reply-channel=\"commandOutChannel\"/>\n```", "```java\n<bean id=\"ftpSClientFactory\"\n  class=\"org.springframework.integration.ftp.session.DefaultFtpsSessionFactory\">\n  <property name=\"host\" value=\"localhost\"/>\n  <property name=\"port\" value=\"22\"/>\n  <property name=\"username\" value=\"testuser\"/>\n  <property name=\"password\" value=\"testuser\"/>\n</bean>\n```", "```java\n        twitter.oauth.apiKey= lnrDlMXSDnJumKLFRym02kHsy\n        twitter.oauth.apiSecret= 6wlriIX9ay6w2f6at6XGQ7oNugk6dqNQEAArTsFsAU6RU8F2Td\n        twitter.oauth.accessToken= 158239940-FGZHcbIDtdEqkIA77HPcv3uosfFRnUM30hRix9TI\n        twitter.oauth.accessTokenSecret= H1oIeiQOlvCtJUiAZaachDEbLRq5m91IbP4bhg1QPRDeh\n        ```", "```java\n    <beans xmlns=\n      \"http://www.springframework.org/schema/beans\"\n      xmlns:xsi=\n      \"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:int=\n      \"http://www.springframework.org/schema/integration\"\n      xmlns:int-twitter=\n      \"http://www.springframework.org/schema/integration/twitter\"\n      xsi:schemaLocation=\n      \"http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd\n      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n      http://www.springframework.org/schema/integration/twitter http://www.springframework.org/schema/integration/twitter/spring-integration-twitter.xsd\">\n    ```", "```java\n    <dependency>\n      <groupId>org.springframework.integration</groupId>\n      <artifactId>spring-integration-twitter</artifactId>\n      <version>${spring.integration.version}</version>\n    </dependency>\n    ```", "```java\n    <int-twitter:search-inbound-channel-adapter id=\"testSearch\"\n      twitter-template=\"twitterTemplate\"\n      query=\"#springintegration\"\n      channel=\"twitterSearchChannel\">\n    </int-twitter:search-inbound-channel-adapter>\n    ```", "```java\n    <int-twitter:dm-inbound-channel-adapter id=\"testdirectMessage\"\n      twitter-template=\"twiterTemplate\"\n      channel=\"twitterDirectMessageChannel\">\n    </int-twitter:dm-inbound-channel-adapter>\n    ```", "```java\n    <int-twitter:mentions-inbound-channel-adapter id=\"testmentionMessage\"\n      twitter-template=\"twiterTemplate\"\n      channel=\"twitterMentionMessageChannel\">\n    </int-twitter:mentions-inbound-channel-adapter>\n    ```", "```java\n  <int-twitter:outbound-channel-adapter\n    twitter-template=\"twitterTemplate\"\n    channel=\"twitterSendMessageChannel\"/>\n```", "```java\n<int-twitter:dm-outbound-channel-adapter \n  twitter-template=\"twitterTemplate\" \n  channel=\"twitterSendDirectMessage\"/>\n```", "```java\nMessage message = MessageBuilder.withPayload(\"Chandan\")\n  .setHeader(TwitterHeaders.DM_TARGET_USER_ID, \"test_id\").build();\n```", "```java\n<int:header-enricher input-channel=\"twitterIn\"\n  output-channel=\"twitterOut\">\n  <int:header name=\"twitter_dmTargetUserId\" value=\" test_id \"/>\n</int:header-enricher>\n```", "```java\n  <int-twitter:search-outbound-gateway id=\"twitterSearch\"\n    request-channel=\"searchQueryChannel\" \n    twitter-template=\"twitterTemplate\" \n    search-args-expression=\"#springintegration\" \n    reply-channel=\"searchQueryResultChannel\"/>\n```", "```java\n    xmlns: int-jms= \n      \"http://www.springframework.org/schema/integration/jms\"\n      xsi:schemaLocation=\"http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd\">\n    ```", "```java\n    <dependency>\n      <groupId>org.springframework.integration</groupId>\n      <artifactId>spring-integration-jms</artifactId>\n      <version>${spring.integration.version}</version>\n    </dependency>\n    ```", "```java\n  <dependency>\n    <groupId>org.apache.activemq</groupId>\n    <artifactId>activemq-core</artifactId>\n    <version>${activemq.version}</version>\n    <exclusions>\n      <exclusion>\n        <artifactId>spring-context</artifactId>\n        <groupId>org.springframework</groupId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  <dependency>\n    <groupId>org.springframework</groupId>\n    <artifactId>spring-jms</artifactId>\n    <version>${spring.version}</version>\n    <scope>compile</scope>\n  </dependency>\n```", "```java\n<bean id=\"connectionFactory\" class=\"org.springframework.jms.connection.CachingConnectionFactory\">\n  <property name=\"targetConnectionFactory\">\n    <bean class=\"org.apache.activemq.ActiveMQConnectionFactory\">\n      <property name=\"brokerURL\" value=\"vm://localhost\"/>\n    </bean>\n  </property>\n</bean>\n```", "```java\n<bean \n  id=\"feedInputQueue\" \n  class=\"org.apache.activemq.command.ActiveMQQueue\"> \n  <constructor-arg value=\"queue.input\"/>\n</bean>\n```", "```java\n<int-jms:inbound-channel-adapter \n  connection-factory=\"connectionFactory\" \n  destination=\"feedInputQueue\" \n  channel=\"jmsProcessedChannel\"> \n  <int:poller fixed-rate=\"1000\" />\n</int-jms:inbound-channel-adapter>\n```", "```java\n`int-jms:inbound-channel-adapter`: This is the namespace support for the JMS inbound adapter`connection-factory`: This is the encapsulation for the underlying JMS provider setup, such as ActiveMQ`destination`: This is the JMS queue where the adapter is listening for incoming messages`channel`: This is the channel on which incoming messages should be put\n```", "```java\n<int-jms:message-driven-channel-adapter \n  connection-factory=\"connectionFactory\"\n  destination=\"feedInputQueue\"\n  channel=\"jmsProcessedChannel\"/>\n```", "```java\n<int-jms:outbound-channel-adapter\n  connection-factory=\"connectionFactory\"\n  channel=\"jmsChannel\"\n  destination=\"feedInputQueue\"/>\n```", "```java\n<int-jms:inbound-gateway \n  request-destination=\"feedInputQueue\"\n  request-channel=\"jmsProcessedChannel\"/>\n```", "```java\n<int-jms:outbound-gateway \n  request-channel=\"jmsChannel\"\n  request-destination=\"feedInputQueue\"\n  reply-channel=\"jmsProcessedChannel\" />\n```", "```java\n    <beans xmlns=\n      \"http://www.springframework.org/schema/beans\"\n      xmlns:xsi=\n      \"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:int=\n      \"http://www.springframework.org/schema/integration\"\n      xmlns:int-http=\n      \"http://www.springframework.org/schema/integration/http\"\n      xsi:schemaLocation=\n      \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n      http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd\n      http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd\">\n    ```", "```java\n      <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-http</artifactId>\n        <version>${spring.integration.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-webmvc</artifactId>\n        <version>${spring.version}</version>\n      </dependency>   \n    ```", "```java\n<servlet>\n  <servlet-name>inboundGateway</servlet-name>\n  <servlet-class> o.s.web.context.support.HttpRequestHandlerServlet \n  </servlet-class>\n</servlet>\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\" id=\"WebApp_ID\" version=\"2.5\">\n  <display-name>testhttpinbound</display-name>\n  <servlet>\n    <servlet-name>testhttpinbound</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <init-param>\n      <param-name>contextConfigLocation</param-name>\n      <param-value>/WEB-INF/http-inbound-config.xml</param-value>\n    </init-param>\n    <load-on-startup>1</load-on-startup>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>testhttpinbound</servlet-name>\n    <url-pattern>/*</url-pattern>\n  </servlet-mapping>\n</web-app>\n```", "```java\n<int-http:inbound-gateway \n  request-channel=\"receiveChannel\" \n  path=\"receiveGateway\" \n  supported-methods=\"GET\"/>\n```", "```java\n<int:service-activator \n  input-channel=\"receiveChannel\" \n  expression=\"payload + ' hmm, you get what you give!!'\"/>\n```", "```java\n<int-http:inbound-channel-adapter \n  channel=\"testchannel\" \n  supported-methods=\"GET,POST\" \n  name=\"/test\" \n  view-name=\"testMessageView\" />\n```", "```java\n<int-http:outbound-gateway \n  request-channel=\"outboundRequestChannel\" url=\"http://localhost:8080/httpinbound/receiveGateway\"\n  http-method=\"GET\"\n  expected-response-type=\"java.lang.String\"/>\n```", "```java\n<int-http:outbound-channel-adapter \n  id=\"feedAdapter\" \n  url=\" http://localhost:8080/httpinbound/receiveGateway\" \n  channel=\"feedUpdates\" \n  http-method=\"POST\"/>\n```", "```java\n    <beans xmlns=\n      \"http://www.springframework.org/schema/beans\"\n      xmlns:xsi=\n      \"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:int=\n      \"http://www.springframework.org/schema/integration\"\n      xmlns:int-ws=\n      \"http://www.springframework.org/schema/integration/ws\"\n      xsi:schemaLocation=\n      \"http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd\n      http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd\n      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n    ```", "```java\n      <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-xml</artifactId>\n        <version>${spring.integration.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-ws</artifactId>\n        <version>${spring.integration.version}</version>\n      </dependency> \n      <dependency>\n        <groupId>com.sun.xml.messaging.saaj</groupId>\n        <artifactId>saaj-impl</artifactId>\n        <version>${saaj.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>javax.activation</groupId>\n        <artifactId>activation</artifactId>\n        <version>${javax-activation.version}</version>\n      </dependency>\n    ```", "```java\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"no\"?>\n<web-app   version=\"2.4\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\">\n  <description>ws-inbound-webservice</description>\n\n<servlet> \n  <servlet-name>springwsinbound</servlet-name> \n  <servlet-class>\n    org.springframework.ws.transport.http.MessageDispatcherServlet\n  </servlet-class>\n  <init-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>\n      WEB-INF/ws-inbound-config.xml\n    </param-value>\n  </init-param>\n  <load-on-startup>1</load-on-startup>\n</servlet>\n\n  <servlet-mapping>\n    <servlet-name>springwsinbound</servlet-name>\n    <url-pattern>/testwsservice</url-pattern>\n  </servlet-mapping>\n\n  <welcome-file-list>\n    <welcome-file>index.html</welcome-file>\n  </welcome-file-list>\n\n</web-app>\n```", "```java\n<bean class=\n  \"org.springframework.ws.server.endpoint.mapping.UriEndpointMapping\">\n  <property name=\"defaultEndpoint\" ref=\"ws-inbound-gateway\"/>\n</bean>\n```", "```java\n  <int:channel id=\"input\"/>\n\n  <int-ws:inbound-gateway \n    id=\"ws-inbound-gateway\" \nrequest-channel=\"input\"/>\n\n  <int:service-activator \n    input-channel=\"input\">\n    <bean class=\"com.cpandey.siexample.TestWsInbound\"/>\n  </int:service-activator>\n```", "```java\n<int-ws:outbound-gateway\n  uri=\" http://www.w3schools.com/webservices/tempconvert.asmx\"\n  request-channel=\" fahrenheitChannel\" \n  reply-channel=\"responses\" />\n```", "```java\nClassPathXmlApplicationContext context =\n  new ClassPathXmlApplicationContext(\"/META-INF/spring/integration/temperatureConversion.xml\");\n\nDestinationResolver<MessageChannel> channelResolver = new BeanFactoryChannelResolver(context);\n\n// Compose the XML message according to the server's schema\n\nString requestXml =\n  \"<FahrenheitToCelsius \n  xmlns=\\\"http://www.w3schools.com/webservices/\\\">\" +\n  \"    <Fahrenheit>90.0</Fahrenheit>\" +\n  \"</FahrenheitToCelsius>\";\n\n// Create the Message object\nMessage<String> message = MessageBuilder.withPayload(requestXml).build();\n\n// Send the Message to the handler's input channel\nMessageChannel channel = channelResolver.resolveDestination(\"fahrenheitChannel\");\nchannel.send(message);\n```", "```java\n    xmlns:int-jdbc=\n    \"http://www.springframework.org/schema/integration/jdbc\"\n    xmlns:jdbc=\n    \"http://www.springframework.org/schema/jdbc\"\n    xsi:schemaLocation=\"\n    http://www.springframework.org/schema/integration/jdbc\n    http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd\n    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd>\n    ```", "```java\n      <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-jdbc</artifactId>\n        <version>${spring.integration.version}</version>\n      </dependency>\n    ```", "```java\n<jdbc:embedded-database id=\"dataSource\" type=\"H2\"/>\n```", "```java\n  <dependency>\n    <groupId>com.h2database</groupId>\n    <artifactId>h2</artifactId>\n    <version>1.3.168</version>\n  </dependency>\n```", "```java\n<jdbc:initialize-database data-source=\"dataSource\" ignore-failures=\"DROPS\">\n  <jdbc:script location=\"classpath:H2DB-DropScript.sql\" />\n  <jdbc:script location=\"classpath:H2DB-CreateScript.sql\" />\n  <jdbc:script location=\"classpath:H2DB-InsertScript.sql\" />\n</jdbc:initialize-database>\n```", "```java\n<int-jdbc:inbound-channel-adapter channel=\"printSqlResult\"\n  data-source=\"dataSource\"\n  query=\"select * from PEOPLE where name = 'Chandan'\"\n  update=\"update PEOPLE set name = 'ChandanNew' where name = 'Chandan'\">\n</int-jdbc:inbound-channel-adapter>\n```", "```java\n`int-jdbc:inbound-channel-adapter`: This is the namespace support for the inbound channel adapter`data-source`: This is a reference to the datasource that encapsulates database connection details`query`: This is the query to be fired`update`: This is any update query to be fired that can be used to avoid duplicate processing\n```", "```java\n<int-jdbc:inbound-channel-adapter \n  query=\"somequery\"\n  channel=\"testChannel\" \n  data-source=\"dataSource\" update=\"someupdate\">\n    <int:poller fixed-rate=\"1000\">\n      <int:transactional/>\n    </int:poller>\n</int-jdbc:inbound-channel-adapter>\n```", "```java\n<bean id=\"transactionManager\" \n  class=\n  \"org.springframework.orm.jpa.JpaTransactionManager\">\n  <constructor-arg ref=\"entityManagerFactory\" />\n</bean>\n\n<bean id=\"entityManagerFactory\"\n  class=\n  \"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\">\n  <property name=\"dataSource\"          ref=\"dataSource\" />\n  <property name=\"jpaVendorAdapter\"    ref=\"vendorAdaptor\"/>\n  <property name=\"packagesToScan\"      value=\"com.cpandey.siexample.pojo\"/>\n</bean>\n\n<bean id=\"abstractVendorAdaptor\" abstract=\"true\">\n  <property name=\"generateDdl\" value=\"true\" />\n  <property name=\"database\"    value=\"H2\" />\n  <property name=\"showSql\"     value=\"false\"/>\n</bean>\n\n<bean id=\"entityManager\" \n  class=\n  \"org.springframework.orm.jpa.support.SharedEntityManagerBean\">\n  <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n</bean>\n\n<bean id=\"vendorAdaptor\" \n  class=\n  \"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter\"\n  parent=\"abstractVendorAdaptor\">\n</bean>\n```", "```java\n<int-jdbc:outbound-channel-adapter \n  channel=\"printSqlResult\"\n  data-source=\"dataSource\"\n  query=\"insert into PEOPLE p(ID, NAME, CREATED_DATE_TIME) values(2, :payload[NAME], NOW())\">\n</int-jdbc:outbound-channel-adapter>\n```", "```java\n<int-jdbc:outbound-gateway\n  update=\"insert into PEOPLE (ID, NAME, CREATED_DATE_TIME) values (3, :payload[NAME], NOW())\"\n  request-channel=\"insertChannel\" \n  reply-channel=\"printSqlResult\" \n  data-source=\"dataSource\" />\n```", "```java\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n      <beans:beans xmlns:int-stream=\n        \"http://www.springframework.org/schema/integration/stream\"\n\n        xsi:schemaLocation=\n        \"http://www.springframework.org/schema/beans\n        http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/integration/stream\n        http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd\">\n    ```", "```java\n      <dependency>\n        <groupId>org.springframework.integration</groupId>\n        <artifactId>spring-integration-stream</artifactId>\n        <version>${spring.integration.version}</version>\n      </dependency>\n    ```", "```java\n<int-stream:stdin-channel-adapter \n  id=\"stdin\" \n  channel=\"stdInChannel\"/>\n```", "```java\n<bean \n  class=\n  \"org.springframework.integration.stream.ByteStreamReadingMessageSource\">\n  <constructor-arg ref=\"inputStream\"/>\n</bean>\n\n<bean \n  class=\"org.springframework.integration.stream.CharacterStreamReadingMessageSource\">\n    <constructor-arg ref=\"reader\"/>\n</bean>\n```", "```java\n<int-stream:stdout-channel-adapter \n  id=\"stdout\" \n  channel=\"stdInChannel\" \n  append-newline=\"true\"/> \n```", "```java\n<bean \n  class=\"org.springframework.integration.stream.ByteStreamWritingMessageHandler\">\n  <constructor-arg ref=\"outputStream\"/>\n</bean>\n\n<bean \n  class=\"org.springframework.integration.stream.CharacterStreamWritingMessageHandler\">\n  <constructor-arg ref=\"writer\"/>\n</bean>\n```"]