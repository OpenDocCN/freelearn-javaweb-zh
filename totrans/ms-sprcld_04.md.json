["```java\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-eureka-server</artifactId>\n</dependency>\n```", "```java\n@SpringBootApplication\n@EnableEurekaServer\npublic class DiscoveryApplication {\n\n    public static void main(String[] args) {\n        new SpringApplicationBuilder(DiscoveryApplication.class).web(true).run(args);\n    }\n\n}\n```", "```java\nserver: \n port: ${PORT:8761}\neureka:\n client:\n   registerWithEureka: false\n   fetchRegistry: false \n```", "```java\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-eureka</artifactId>\n</dependency>\n```", "```java\n@SpringBootApplication\n@EnableDiscoveryClient\npublic class ClientApplication {\n\n    public static void main(String[] args) {\n         new SpringApplicationBuilder(ClientApplication.class).web(true).run(args);\n    }\n\n}\n```", "```java\nspring: \n application:\n   name: client-service\n\nserver: \n port: ${PORT:8081}\n\neureka:\n client:\n   serviceUrl:\n     defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}\n```", "```java\njava -jar -DPORT=8081 target/sample-client-service-1.0-SNAPSHOT.jar\njava -jar -DPORT=8082 target/sample-client-service-1.0-SNAPSHOT.jar \n```", "```java\nendpoints:\n shutdown:\n   enabled: true\n   sensitive: false\n```", "```java\neureka:\n server:\n   enableSelfPreservation: false\n```", "```java\nprivate static final Logger LOGGER = LoggerFactory.getLogger(ClientController.class);\n\n@Autowired\nprivate DiscoveryClient discoveryClient;\n\n@GetMapping(\"/ping\")\npublic List<ServiceInstance> ping() {\n List<ServiceInstance> instances = discoveryClient.getInstances(\"CLIENT-SERVICE\");\n LOGGER.info(\"INSTANCES: count={}\", instances.size());\n instances.stream().forEach(it -> LOGGER.info(\"INSTANCE: id={}, port={}\", it.getServiceId(), it.getPort()));\n return instances;\n}\n```", "```java\neureka:\n instance:\n   leaseRenewalIntervalInSeconds: 1\n   leaseExpirationDurationInSeconds: 2\n```", "```java\neureka:\n  server:\n    enableSelfPreservation: false\n    evictionIntervalTimerInMs: 3000\n```", "```java\n${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}}. \n```", "```java\nserver: \n port: 808${SEQUENCE_NO}\neureka:\n instance:\n   instanceId: ${spring.application.name}-${SEQUENCE_NO}\n```", "```java\nspring:\n  cloud:\n    inetutils:\n      ignoredInterfaces:\n        - eth1*\n```", "```java\nspring:\n  cloud:\n    inetutils:\n      preferredNetworks:\n        - 192.168\n```", "```java\neureka:\n server:\n   responseCacheUpdateIntervalMs: 3000\n```", "```java\neureka:\n client:\n   registryFetchIntervalSeconds: 3\n   shouldDisableDelta: true\n```", "```java\n <dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-starter-security</artifactId>\n </dependency>\n```", "```java\nsecurity:\n basic:\n   enabled: true\n user:\n   name: admin\n   password: admin123\n```", "```java\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://admin:admin123@localhost:8761/eureka/\n```", "```java\nkeytool -genkey -alias client -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650\n```", "```java\nserver: \n port: ${PORT:8081}\n ssl:\n   key-store: classpath:keystore.p12\n   key-store-password: 123456\n   keyStoreType: PKCS12\n   keyAlias: client\n```", "```java\neureka:\n instance:\n   securePortEnabled: true\n   nonSecurePortEnabled: false\n   statusPageUrl: https://${eureka.hostname}:${server.port}/info\n   healthCheckUrl: https://${eureka.hostname}:${server.port}/health\n   homePageUrl: https://${eureka.hostname}:${server.port}/\n```", "```java\nspring:\n profiles: peer1\neureka:\n instance:\n   hostname: peer1\n   metadataMap:\n     zone: zone1\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8762/eureka/,http://localhost:8763/eureka/\nserver: \n port: ${PORT:8761}\n\n---\nspring:\n profiles: peer2\neureka:\n instance:\n   hostname: peer2\n   metadataMap:\n     zone: zone2\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8761/eureka/,http://localhost:8763/eureka/\nserver: \n port: ${PORT:8762}\n\n---\nspring:\n profiles: peer3\neureka:\n instance:\n   hostname: peer3\n   metadataMap:\n     zone: zone3\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8761/eureka/,http://localhost:8762/eureka/\nserver: \n port: ${PORT:8763}\n```", "```java\nspring:\n profiles: zone1\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8761/eureka/,http://localhost:8762/eureka/,http://localhost:8763/eureka/\nserver: \n port: ${PORT:8081}\n\n---\nspring:\n profiles: zone2\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8762/eureka/,http://localhost:8761/eureka/,http://localhost:8763/eureka/\nserver: \n port: ${PORT:8082}\n\n---\nspring:\n profiles: zone3\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8763/eureka/,http://localhost:8761/eureka/,http://localhost:8762/eureka/\nserver: \n port: ${PORT:8083}\n```", "```java\n@RestController\npublic class ClientController {\n\n  @Value(\"${spring.profiles}\")\n  private String zone;\n\n  @GetMapping(\"/ping\")\n  public String ping() {\n    return \"I'm in zone \" + zone;\n  }\n\n}\n```", "```java\nzuul:\n prefix: /api\n routes:\n   client: \n     path: /client/**\n     serviceId: client-service\n\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8763/eureka/\n   registerWithEureka: false\n```", "```java\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8763/eureka/,http://localhost:8762/eureka/\n   registerWithEureka: false\n```", "```java\nspring:\n profiles: zone1\neureka:\n instance:\n   metadataMap:\n     zone: zone1\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8761/eureka/,http://localhost:8762/eureka/,http://localhost:8763/eureka/\n```", "```java\nspring:\n profiles: zone1\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8761/eureka/\n     registerWithEureka: false\n     preferSameZoneEureka: true\n instance:\n   metadataMap:\n     zone: zone1\nserver: \n port: ${PORT:8765}\n\n---\nspring:\n profiles: zone2\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8762/eureka/\n     registerWithEureka: false\n     preferSameZoneEureka: true\n instance:\n   metadataMap:\n     zone: zone2\nserver: \n port: ${PORT:8766}\n\n---\nspring:\n profiles: zone3\neureka:\n client:\n   serviceUrl:\n     defaultZone: http://localhost:8763/eureka/\n     registerWithEureka: false\n     preferSameZoneEureka: true\n instance:\n   metadataMap:\n     zone: zone3\nserver: \n port: ${PORT:8767}\n```"]